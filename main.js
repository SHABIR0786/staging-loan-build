(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/@angular/common/locales lazy recursive ^\\.\\/.*\\.js$":
/*!*********************************************************************************!*\
  !*** ./node_modules/@angular/common/locales lazy ^\.\/.*\.js$ namespace object ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af-NA.js": [
		"./node_modules/@angular/common/locales/af-NA.js",
		0
	],
	"./af.js": [
		"./node_modules/@angular/common/locales/af.js",
		1
	],
	"./agq.js": [
		"./node_modules/@angular/common/locales/agq.js",
		2
	],
	"./ak.js": [
		"./node_modules/@angular/common/locales/ak.js",
		3
	],
	"./am.js": [
		"./node_modules/@angular/common/locales/am.js",
		4
	],
	"./ar-AE.js": [
		"./node_modules/@angular/common/locales/ar-AE.js",
		5
	],
	"./ar-BH.js": [
		"./node_modules/@angular/common/locales/ar-BH.js",
		6
	],
	"./ar-DJ.js": [
		"./node_modules/@angular/common/locales/ar-DJ.js",
		7
	],
	"./ar-DZ.js": [
		"./node_modules/@angular/common/locales/ar-DZ.js",
		8
	],
	"./ar-EG.js": [
		"./node_modules/@angular/common/locales/ar-EG.js",
		9
	],
	"./ar-EH.js": [
		"./node_modules/@angular/common/locales/ar-EH.js",
		10
	],
	"./ar-ER.js": [
		"./node_modules/@angular/common/locales/ar-ER.js",
		11
	],
	"./ar-IL.js": [
		"./node_modules/@angular/common/locales/ar-IL.js",
		12
	],
	"./ar-IQ.js": [
		"./node_modules/@angular/common/locales/ar-IQ.js",
		13
	],
	"./ar-JO.js": [
		"./node_modules/@angular/common/locales/ar-JO.js",
		14
	],
	"./ar-KM.js": [
		"./node_modules/@angular/common/locales/ar-KM.js",
		15
	],
	"./ar-KW.js": [
		"./node_modules/@angular/common/locales/ar-KW.js",
		16
	],
	"./ar-LB.js": [
		"./node_modules/@angular/common/locales/ar-LB.js",
		17
	],
	"./ar-LY.js": [
		"./node_modules/@angular/common/locales/ar-LY.js",
		18
	],
	"./ar-MA.js": [
		"./node_modules/@angular/common/locales/ar-MA.js",
		19
	],
	"./ar-MR.js": [
		"./node_modules/@angular/common/locales/ar-MR.js",
		20
	],
	"./ar-OM.js": [
		"./node_modules/@angular/common/locales/ar-OM.js",
		21
	],
	"./ar-PS.js": [
		"./node_modules/@angular/common/locales/ar-PS.js",
		22
	],
	"./ar-QA.js": [
		"./node_modules/@angular/common/locales/ar-QA.js",
		23
	],
	"./ar-SA.js": [
		"./node_modules/@angular/common/locales/ar-SA.js",
		24
	],
	"./ar-SD.js": [
		"./node_modules/@angular/common/locales/ar-SD.js",
		25
	],
	"./ar-SO.js": [
		"./node_modules/@angular/common/locales/ar-SO.js",
		26
	],
	"./ar-SS.js": [
		"./node_modules/@angular/common/locales/ar-SS.js",
		27
	],
	"./ar-SY.js": [
		"./node_modules/@angular/common/locales/ar-SY.js",
		28
	],
	"./ar-TD.js": [
		"./node_modules/@angular/common/locales/ar-TD.js",
		29
	],
	"./ar-TN.js": [
		"./node_modules/@angular/common/locales/ar-TN.js",
		30
	],
	"./ar-YE.js": [
		"./node_modules/@angular/common/locales/ar-YE.js",
		31
	],
	"./ar.js": [
		"./node_modules/@angular/common/locales/ar.js",
		32
	],
	"./as.js": [
		"./node_modules/@angular/common/locales/as.js",
		33
	],
	"./asa.js": [
		"./node_modules/@angular/common/locales/asa.js",
		34
	],
	"./ast.js": [
		"./node_modules/@angular/common/locales/ast.js",
		35
	],
	"./az-Cyrl.js": [
		"./node_modules/@angular/common/locales/az-Cyrl.js",
		36
	],
	"./az-Latn.js": [
		"./node_modules/@angular/common/locales/az-Latn.js",
		37
	],
	"./az.js": [
		"./node_modules/@angular/common/locales/az.js",
		38
	],
	"./bas.js": [
		"./node_modules/@angular/common/locales/bas.js",
		39
	],
	"./be.js": [
		"./node_modules/@angular/common/locales/be.js",
		40
	],
	"./bem.js": [
		"./node_modules/@angular/common/locales/bem.js",
		41
	],
	"./bez.js": [
		"./node_modules/@angular/common/locales/bez.js",
		42
	],
	"./bg.js": [
		"./node_modules/@angular/common/locales/bg.js",
		43
	],
	"./bm.js": [
		"./node_modules/@angular/common/locales/bm.js",
		44
	],
	"./bn-IN.js": [
		"./node_modules/@angular/common/locales/bn-IN.js",
		45
	],
	"./bn.js": [
		"./node_modules/@angular/common/locales/bn.js",
		46
	],
	"./bo-IN.js": [
		"./node_modules/@angular/common/locales/bo-IN.js",
		47
	],
	"./bo.js": [
		"./node_modules/@angular/common/locales/bo.js",
		48
	],
	"./br.js": [
		"./node_modules/@angular/common/locales/br.js",
		49
	],
	"./brx.js": [
		"./node_modules/@angular/common/locales/brx.js",
		50
	],
	"./bs-Cyrl.js": [
		"./node_modules/@angular/common/locales/bs-Cyrl.js",
		51
	],
	"./bs-Latn.js": [
		"./node_modules/@angular/common/locales/bs-Latn.js",
		52
	],
	"./bs.js": [
		"./node_modules/@angular/common/locales/bs.js",
		53
	],
	"./ca-AD.js": [
		"./node_modules/@angular/common/locales/ca-AD.js",
		54
	],
	"./ca-ES-VALENCIA.js": [
		"./node_modules/@angular/common/locales/ca-ES-VALENCIA.js",
		55
	],
	"./ca-FR.js": [
		"./node_modules/@angular/common/locales/ca-FR.js",
		56
	],
	"./ca-IT.js": [
		"./node_modules/@angular/common/locales/ca-IT.js",
		57
	],
	"./ca.js": [
		"./node_modules/@angular/common/locales/ca.js",
		58
	],
	"./ccp-IN.js": [
		"./node_modules/@angular/common/locales/ccp-IN.js",
		59
	],
	"./ccp.js": [
		"./node_modules/@angular/common/locales/ccp.js",
		60
	],
	"./ce.js": [
		"./node_modules/@angular/common/locales/ce.js",
		61
	],
	"./ceb.js": [
		"./node_modules/@angular/common/locales/ceb.js",
		62
	],
	"./cgg.js": [
		"./node_modules/@angular/common/locales/cgg.js",
		63
	],
	"./chr.js": [
		"./node_modules/@angular/common/locales/chr.js",
		64
	],
	"./ckb-IR.js": [
		"./node_modules/@angular/common/locales/ckb-IR.js",
		65
	],
	"./ckb.js": [
		"./node_modules/@angular/common/locales/ckb.js",
		66
	],
	"./cs.js": [
		"./node_modules/@angular/common/locales/cs.js",
		67
	],
	"./cu.js": [
		"./node_modules/@angular/common/locales/cu.js",
		68
	],
	"./cy.js": [
		"./node_modules/@angular/common/locales/cy.js",
		69
	],
	"./da-GL.js": [
		"./node_modules/@angular/common/locales/da-GL.js",
		70
	],
	"./da.js": [
		"./node_modules/@angular/common/locales/da.js",
		71
	],
	"./dav.js": [
		"./node_modules/@angular/common/locales/dav.js",
		72
	],
	"./de-AT.js": [
		"./node_modules/@angular/common/locales/de-AT.js",
		73
	],
	"./de-BE.js": [
		"./node_modules/@angular/common/locales/de-BE.js",
		74
	],
	"./de-CH.js": [
		"./node_modules/@angular/common/locales/de-CH.js",
		75
	],
	"./de-IT.js": [
		"./node_modules/@angular/common/locales/de-IT.js",
		76
	],
	"./de-LI.js": [
		"./node_modules/@angular/common/locales/de-LI.js",
		77
	],
	"./de-LU.js": [
		"./node_modules/@angular/common/locales/de-LU.js",
		78
	],
	"./de.js": [
		"./node_modules/@angular/common/locales/de.js",
		79
	],
	"./dje.js": [
		"./node_modules/@angular/common/locales/dje.js",
		80
	],
	"./dsb.js": [
		"./node_modules/@angular/common/locales/dsb.js",
		81
	],
	"./dua.js": [
		"./node_modules/@angular/common/locales/dua.js",
		82
	],
	"./dyo.js": [
		"./node_modules/@angular/common/locales/dyo.js",
		83
	],
	"./dz.js": [
		"./node_modules/@angular/common/locales/dz.js",
		84
	],
	"./ebu.js": [
		"./node_modules/@angular/common/locales/ebu.js",
		85
	],
	"./ee-TG.js": [
		"./node_modules/@angular/common/locales/ee-TG.js",
		86
	],
	"./ee.js": [
		"./node_modules/@angular/common/locales/ee.js",
		87
	],
	"./el-CY.js": [
		"./node_modules/@angular/common/locales/el-CY.js",
		88
	],
	"./el.js": [
		"./node_modules/@angular/common/locales/el.js",
		89
	],
	"./en-001.js": [
		"./node_modules/@angular/common/locales/en-001.js",
		90
	],
	"./en-150.js": [
		"./node_modules/@angular/common/locales/en-150.js",
		91
	],
	"./en-AE.js": [
		"./node_modules/@angular/common/locales/en-AE.js",
		92
	],
	"./en-AG.js": [
		"./node_modules/@angular/common/locales/en-AG.js",
		93
	],
	"./en-AI.js": [
		"./node_modules/@angular/common/locales/en-AI.js",
		94
	],
	"./en-AS.js": [
		"./node_modules/@angular/common/locales/en-AS.js",
		95
	],
	"./en-AT.js": [
		"./node_modules/@angular/common/locales/en-AT.js",
		96
	],
	"./en-AU.js": [
		"./node_modules/@angular/common/locales/en-AU.js",
		97
	],
	"./en-BB.js": [
		"./node_modules/@angular/common/locales/en-BB.js",
		98
	],
	"./en-BE.js": [
		"./node_modules/@angular/common/locales/en-BE.js",
		99
	],
	"./en-BI.js": [
		"./node_modules/@angular/common/locales/en-BI.js",
		100
	],
	"./en-BM.js": [
		"./node_modules/@angular/common/locales/en-BM.js",
		101
	],
	"./en-BS.js": [
		"./node_modules/@angular/common/locales/en-BS.js",
		102
	],
	"./en-BW.js": [
		"./node_modules/@angular/common/locales/en-BW.js",
		103
	],
	"./en-BZ.js": [
		"./node_modules/@angular/common/locales/en-BZ.js",
		104
	],
	"./en-CA.js": [
		"./node_modules/@angular/common/locales/en-CA.js",
		105
	],
	"./en-CC.js": [
		"./node_modules/@angular/common/locales/en-CC.js",
		106
	],
	"./en-CH.js": [
		"./node_modules/@angular/common/locales/en-CH.js",
		107
	],
	"./en-CK.js": [
		"./node_modules/@angular/common/locales/en-CK.js",
		108
	],
	"./en-CM.js": [
		"./node_modules/@angular/common/locales/en-CM.js",
		109
	],
	"./en-CX.js": [
		"./node_modules/@angular/common/locales/en-CX.js",
		110
	],
	"./en-CY.js": [
		"./node_modules/@angular/common/locales/en-CY.js",
		111
	],
	"./en-DE.js": [
		"./node_modules/@angular/common/locales/en-DE.js",
		112
	],
	"./en-DG.js": [
		"./node_modules/@angular/common/locales/en-DG.js",
		113
	],
	"./en-DK.js": [
		"./node_modules/@angular/common/locales/en-DK.js",
		114
	],
	"./en-DM.js": [
		"./node_modules/@angular/common/locales/en-DM.js",
		115
	],
	"./en-ER.js": [
		"./node_modules/@angular/common/locales/en-ER.js",
		116
	],
	"./en-FI.js": [
		"./node_modules/@angular/common/locales/en-FI.js",
		117
	],
	"./en-FJ.js": [
		"./node_modules/@angular/common/locales/en-FJ.js",
		118
	],
	"./en-FK.js": [
		"./node_modules/@angular/common/locales/en-FK.js",
		119
	],
	"./en-FM.js": [
		"./node_modules/@angular/common/locales/en-FM.js",
		120
	],
	"./en-GB.js": [
		"./node_modules/@angular/common/locales/en-GB.js",
		121
	],
	"./en-GD.js": [
		"./node_modules/@angular/common/locales/en-GD.js",
		122
	],
	"./en-GG.js": [
		"./node_modules/@angular/common/locales/en-GG.js",
		123
	],
	"./en-GH.js": [
		"./node_modules/@angular/common/locales/en-GH.js",
		124
	],
	"./en-GI.js": [
		"./node_modules/@angular/common/locales/en-GI.js",
		125
	],
	"./en-GM.js": [
		"./node_modules/@angular/common/locales/en-GM.js",
		126
	],
	"./en-GU.js": [
		"./node_modules/@angular/common/locales/en-GU.js",
		127
	],
	"./en-GY.js": [
		"./node_modules/@angular/common/locales/en-GY.js",
		128
	],
	"./en-HK.js": [
		"./node_modules/@angular/common/locales/en-HK.js",
		129
	],
	"./en-IE.js": [
		"./node_modules/@angular/common/locales/en-IE.js",
		130
	],
	"./en-IL.js": [
		"./node_modules/@angular/common/locales/en-IL.js",
		131
	],
	"./en-IM.js": [
		"./node_modules/@angular/common/locales/en-IM.js",
		132
	],
	"./en-IN.js": [
		"./node_modules/@angular/common/locales/en-IN.js",
		133
	],
	"./en-IO.js": [
		"./node_modules/@angular/common/locales/en-IO.js",
		134
	],
	"./en-JE.js": [
		"./node_modules/@angular/common/locales/en-JE.js",
		135
	],
	"./en-JM.js": [
		"./node_modules/@angular/common/locales/en-JM.js",
		136
	],
	"./en-KE.js": [
		"./node_modules/@angular/common/locales/en-KE.js",
		137
	],
	"./en-KI.js": [
		"./node_modules/@angular/common/locales/en-KI.js",
		138
	],
	"./en-KN.js": [
		"./node_modules/@angular/common/locales/en-KN.js",
		139
	],
	"./en-KY.js": [
		"./node_modules/@angular/common/locales/en-KY.js",
		140
	],
	"./en-LC.js": [
		"./node_modules/@angular/common/locales/en-LC.js",
		141
	],
	"./en-LR.js": [
		"./node_modules/@angular/common/locales/en-LR.js",
		142
	],
	"./en-LS.js": [
		"./node_modules/@angular/common/locales/en-LS.js",
		143
	],
	"./en-MG.js": [
		"./node_modules/@angular/common/locales/en-MG.js",
		144
	],
	"./en-MH.js": [
		"./node_modules/@angular/common/locales/en-MH.js",
		145
	],
	"./en-MO.js": [
		"./node_modules/@angular/common/locales/en-MO.js",
		146
	],
	"./en-MP.js": [
		"./node_modules/@angular/common/locales/en-MP.js",
		147
	],
	"./en-MS.js": [
		"./node_modules/@angular/common/locales/en-MS.js",
		148
	],
	"./en-MT.js": [
		"./node_modules/@angular/common/locales/en-MT.js",
		149
	],
	"./en-MU.js": [
		"./node_modules/@angular/common/locales/en-MU.js",
		150
	],
	"./en-MW.js": [
		"./node_modules/@angular/common/locales/en-MW.js",
		151
	],
	"./en-MY.js": [
		"./node_modules/@angular/common/locales/en-MY.js",
		152
	],
	"./en-NA.js": [
		"./node_modules/@angular/common/locales/en-NA.js",
		153
	],
	"./en-NF.js": [
		"./node_modules/@angular/common/locales/en-NF.js",
		154
	],
	"./en-NG.js": [
		"./node_modules/@angular/common/locales/en-NG.js",
		155
	],
	"./en-NL.js": [
		"./node_modules/@angular/common/locales/en-NL.js",
		156
	],
	"./en-NR.js": [
		"./node_modules/@angular/common/locales/en-NR.js",
		157
	],
	"./en-NU.js": [
		"./node_modules/@angular/common/locales/en-NU.js",
		158
	],
	"./en-NZ.js": [
		"./node_modules/@angular/common/locales/en-NZ.js",
		159
	],
	"./en-PG.js": [
		"./node_modules/@angular/common/locales/en-PG.js",
		160
	],
	"./en-PH.js": [
		"./node_modules/@angular/common/locales/en-PH.js",
		161
	],
	"./en-PK.js": [
		"./node_modules/@angular/common/locales/en-PK.js",
		162
	],
	"./en-PN.js": [
		"./node_modules/@angular/common/locales/en-PN.js",
		163
	],
	"./en-PR.js": [
		"./node_modules/@angular/common/locales/en-PR.js",
		164
	],
	"./en-PW.js": [
		"./node_modules/@angular/common/locales/en-PW.js",
		165
	],
	"./en-RW.js": [
		"./node_modules/@angular/common/locales/en-RW.js",
		166
	],
	"./en-SB.js": [
		"./node_modules/@angular/common/locales/en-SB.js",
		167
	],
	"./en-SC.js": [
		"./node_modules/@angular/common/locales/en-SC.js",
		168
	],
	"./en-SD.js": [
		"./node_modules/@angular/common/locales/en-SD.js",
		169
	],
	"./en-SE.js": [
		"./node_modules/@angular/common/locales/en-SE.js",
		170
	],
	"./en-SG.js": [
		"./node_modules/@angular/common/locales/en-SG.js",
		171
	],
	"./en-SH.js": [
		"./node_modules/@angular/common/locales/en-SH.js",
		172
	],
	"./en-SI.js": [
		"./node_modules/@angular/common/locales/en-SI.js",
		173
	],
	"./en-SL.js": [
		"./node_modules/@angular/common/locales/en-SL.js",
		174
	],
	"./en-SS.js": [
		"./node_modules/@angular/common/locales/en-SS.js",
		175
	],
	"./en-SX.js": [
		"./node_modules/@angular/common/locales/en-SX.js",
		176
	],
	"./en-SZ.js": [
		"./node_modules/@angular/common/locales/en-SZ.js",
		177
	],
	"./en-TC.js": [
		"./node_modules/@angular/common/locales/en-TC.js",
		178
	],
	"./en-TK.js": [
		"./node_modules/@angular/common/locales/en-TK.js",
		179
	],
	"./en-TO.js": [
		"./node_modules/@angular/common/locales/en-TO.js",
		180
	],
	"./en-TT.js": [
		"./node_modules/@angular/common/locales/en-TT.js",
		181
	],
	"./en-TV.js": [
		"./node_modules/@angular/common/locales/en-TV.js",
		182
	],
	"./en-TZ.js": [
		"./node_modules/@angular/common/locales/en-TZ.js",
		183
	],
	"./en-UG.js": [
		"./node_modules/@angular/common/locales/en-UG.js",
		184
	],
	"./en-UM.js": [
		"./node_modules/@angular/common/locales/en-UM.js",
		185
	],
	"./en-US-POSIX.js": [
		"./node_modules/@angular/common/locales/en-US-POSIX.js",
		186
	],
	"./en-VC.js": [
		"./node_modules/@angular/common/locales/en-VC.js",
		187
	],
	"./en-VG.js": [
		"./node_modules/@angular/common/locales/en-VG.js",
		188
	],
	"./en-VI.js": [
		"./node_modules/@angular/common/locales/en-VI.js",
		189
	],
	"./en-VU.js": [
		"./node_modules/@angular/common/locales/en-VU.js",
		190
	],
	"./en-WS.js": [
		"./node_modules/@angular/common/locales/en-WS.js",
		191
	],
	"./en-ZA.js": [
		"./node_modules/@angular/common/locales/en-ZA.js",
		192
	],
	"./en-ZM.js": [
		"./node_modules/@angular/common/locales/en-ZM.js",
		193
	],
	"./en-ZW.js": [
		"./node_modules/@angular/common/locales/en-ZW.js",
		194
	],
	"./en.js": [
		"./node_modules/@angular/common/locales/en.js",
		195
	],
	"./eo.js": [
		"./node_modules/@angular/common/locales/eo.js",
		196
	],
	"./es-419.js": [
		"./node_modules/@angular/common/locales/es-419.js",
		197
	],
	"./es-AR.js": [
		"./node_modules/@angular/common/locales/es-AR.js",
		198
	],
	"./es-BO.js": [
		"./node_modules/@angular/common/locales/es-BO.js",
		199
	],
	"./es-BR.js": [
		"./node_modules/@angular/common/locales/es-BR.js",
		200
	],
	"./es-BZ.js": [
		"./node_modules/@angular/common/locales/es-BZ.js",
		201
	],
	"./es-CL.js": [
		"./node_modules/@angular/common/locales/es-CL.js",
		202
	],
	"./es-CO.js": [
		"./node_modules/@angular/common/locales/es-CO.js",
		203
	],
	"./es-CR.js": [
		"./node_modules/@angular/common/locales/es-CR.js",
		204
	],
	"./es-CU.js": [
		"./node_modules/@angular/common/locales/es-CU.js",
		205
	],
	"./es-DO.js": [
		"./node_modules/@angular/common/locales/es-DO.js",
		206
	],
	"./es-EA.js": [
		"./node_modules/@angular/common/locales/es-EA.js",
		207
	],
	"./es-EC.js": [
		"./node_modules/@angular/common/locales/es-EC.js",
		208
	],
	"./es-GQ.js": [
		"./node_modules/@angular/common/locales/es-GQ.js",
		209
	],
	"./es-GT.js": [
		"./node_modules/@angular/common/locales/es-GT.js",
		210
	],
	"./es-HN.js": [
		"./node_modules/@angular/common/locales/es-HN.js",
		211
	],
	"./es-IC.js": [
		"./node_modules/@angular/common/locales/es-IC.js",
		212
	],
	"./es-MX.js": [
		"./node_modules/@angular/common/locales/es-MX.js",
		213
	],
	"./es-NI.js": [
		"./node_modules/@angular/common/locales/es-NI.js",
		214
	],
	"./es-PA.js": [
		"./node_modules/@angular/common/locales/es-PA.js",
		215
	],
	"./es-PE.js": [
		"./node_modules/@angular/common/locales/es-PE.js",
		216
	],
	"./es-PH.js": [
		"./node_modules/@angular/common/locales/es-PH.js",
		217
	],
	"./es-PR.js": [
		"./node_modules/@angular/common/locales/es-PR.js",
		218
	],
	"./es-PY.js": [
		"./node_modules/@angular/common/locales/es-PY.js",
		219
	],
	"./es-SV.js": [
		"./node_modules/@angular/common/locales/es-SV.js",
		220
	],
	"./es-US.js": [
		"./node_modules/@angular/common/locales/es-US.js",
		221
	],
	"./es-UY.js": [
		"./node_modules/@angular/common/locales/es-UY.js",
		222
	],
	"./es-VE.js": [
		"./node_modules/@angular/common/locales/es-VE.js",
		223
	],
	"./es.js": [
		"./node_modules/@angular/common/locales/es.js",
		224
	],
	"./et.js": [
		"./node_modules/@angular/common/locales/et.js",
		225
	],
	"./eu.js": [
		"./node_modules/@angular/common/locales/eu.js",
		226
	],
	"./ewo.js": [
		"./node_modules/@angular/common/locales/ewo.js",
		227
	],
	"./extra/af-NA.js": [
		"./node_modules/@angular/common/locales/extra/af-NA.js",
		228
	],
	"./extra/af.js": [
		"./node_modules/@angular/common/locales/extra/af.js",
		229
	],
	"./extra/agq.js": [
		"./node_modules/@angular/common/locales/extra/agq.js",
		230
	],
	"./extra/ak.js": [
		"./node_modules/@angular/common/locales/extra/ak.js",
		231
	],
	"./extra/am.js": [
		"./node_modules/@angular/common/locales/extra/am.js",
		232
	],
	"./extra/ar-AE.js": [
		"./node_modules/@angular/common/locales/extra/ar-AE.js",
		233
	],
	"./extra/ar-BH.js": [
		"./node_modules/@angular/common/locales/extra/ar-BH.js",
		234
	],
	"./extra/ar-DJ.js": [
		"./node_modules/@angular/common/locales/extra/ar-DJ.js",
		235
	],
	"./extra/ar-DZ.js": [
		"./node_modules/@angular/common/locales/extra/ar-DZ.js",
		236
	],
	"./extra/ar-EG.js": [
		"./node_modules/@angular/common/locales/extra/ar-EG.js",
		237
	],
	"./extra/ar-EH.js": [
		"./node_modules/@angular/common/locales/extra/ar-EH.js",
		238
	],
	"./extra/ar-ER.js": [
		"./node_modules/@angular/common/locales/extra/ar-ER.js",
		239
	],
	"./extra/ar-IL.js": [
		"./node_modules/@angular/common/locales/extra/ar-IL.js",
		240
	],
	"./extra/ar-IQ.js": [
		"./node_modules/@angular/common/locales/extra/ar-IQ.js",
		241
	],
	"./extra/ar-JO.js": [
		"./node_modules/@angular/common/locales/extra/ar-JO.js",
		242
	],
	"./extra/ar-KM.js": [
		"./node_modules/@angular/common/locales/extra/ar-KM.js",
		243
	],
	"./extra/ar-KW.js": [
		"./node_modules/@angular/common/locales/extra/ar-KW.js",
		244
	],
	"./extra/ar-LB.js": [
		"./node_modules/@angular/common/locales/extra/ar-LB.js",
		245
	],
	"./extra/ar-LY.js": [
		"./node_modules/@angular/common/locales/extra/ar-LY.js",
		246
	],
	"./extra/ar-MA.js": [
		"./node_modules/@angular/common/locales/extra/ar-MA.js",
		247
	],
	"./extra/ar-MR.js": [
		"./node_modules/@angular/common/locales/extra/ar-MR.js",
		248
	],
	"./extra/ar-OM.js": [
		"./node_modules/@angular/common/locales/extra/ar-OM.js",
		249
	],
	"./extra/ar-PS.js": [
		"./node_modules/@angular/common/locales/extra/ar-PS.js",
		250
	],
	"./extra/ar-QA.js": [
		"./node_modules/@angular/common/locales/extra/ar-QA.js",
		251
	],
	"./extra/ar-SA.js": [
		"./node_modules/@angular/common/locales/extra/ar-SA.js",
		252
	],
	"./extra/ar-SD.js": [
		"./node_modules/@angular/common/locales/extra/ar-SD.js",
		253
	],
	"./extra/ar-SO.js": [
		"./node_modules/@angular/common/locales/extra/ar-SO.js",
		254
	],
	"./extra/ar-SS.js": [
		"./node_modules/@angular/common/locales/extra/ar-SS.js",
		255
	],
	"./extra/ar-SY.js": [
		"./node_modules/@angular/common/locales/extra/ar-SY.js",
		256
	],
	"./extra/ar-TD.js": [
		"./node_modules/@angular/common/locales/extra/ar-TD.js",
		257
	],
	"./extra/ar-TN.js": [
		"./node_modules/@angular/common/locales/extra/ar-TN.js",
		258
	],
	"./extra/ar-YE.js": [
		"./node_modules/@angular/common/locales/extra/ar-YE.js",
		259
	],
	"./extra/ar.js": [
		"./node_modules/@angular/common/locales/extra/ar.js",
		260
	],
	"./extra/as.js": [
		"./node_modules/@angular/common/locales/extra/as.js",
		261
	],
	"./extra/asa.js": [
		"./node_modules/@angular/common/locales/extra/asa.js",
		262
	],
	"./extra/ast.js": [
		"./node_modules/@angular/common/locales/extra/ast.js",
		263
	],
	"./extra/az-Cyrl.js": [
		"./node_modules/@angular/common/locales/extra/az-Cyrl.js",
		264
	],
	"./extra/az-Latn.js": [
		"./node_modules/@angular/common/locales/extra/az-Latn.js",
		265
	],
	"./extra/az.js": [
		"./node_modules/@angular/common/locales/extra/az.js",
		266
	],
	"./extra/bas.js": [
		"./node_modules/@angular/common/locales/extra/bas.js",
		267
	],
	"./extra/be.js": [
		"./node_modules/@angular/common/locales/extra/be.js",
		268
	],
	"./extra/bem.js": [
		"./node_modules/@angular/common/locales/extra/bem.js",
		269
	],
	"./extra/bez.js": [
		"./node_modules/@angular/common/locales/extra/bez.js",
		270
	],
	"./extra/bg.js": [
		"./node_modules/@angular/common/locales/extra/bg.js",
		271
	],
	"./extra/bm.js": [
		"./node_modules/@angular/common/locales/extra/bm.js",
		272
	],
	"./extra/bn-IN.js": [
		"./node_modules/@angular/common/locales/extra/bn-IN.js",
		273
	],
	"./extra/bn.js": [
		"./node_modules/@angular/common/locales/extra/bn.js",
		274
	],
	"./extra/bo-IN.js": [
		"./node_modules/@angular/common/locales/extra/bo-IN.js",
		275
	],
	"./extra/bo.js": [
		"./node_modules/@angular/common/locales/extra/bo.js",
		276
	],
	"./extra/br.js": [
		"./node_modules/@angular/common/locales/extra/br.js",
		277
	],
	"./extra/brx.js": [
		"./node_modules/@angular/common/locales/extra/brx.js",
		278
	],
	"./extra/bs-Cyrl.js": [
		"./node_modules/@angular/common/locales/extra/bs-Cyrl.js",
		279
	],
	"./extra/bs-Latn.js": [
		"./node_modules/@angular/common/locales/extra/bs-Latn.js",
		280
	],
	"./extra/bs.js": [
		"./node_modules/@angular/common/locales/extra/bs.js",
		281
	],
	"./extra/ca-AD.js": [
		"./node_modules/@angular/common/locales/extra/ca-AD.js",
		282
	],
	"./extra/ca-ES-VALENCIA.js": [
		"./node_modules/@angular/common/locales/extra/ca-ES-VALENCIA.js",
		283
	],
	"./extra/ca-FR.js": [
		"./node_modules/@angular/common/locales/extra/ca-FR.js",
		284
	],
	"./extra/ca-IT.js": [
		"./node_modules/@angular/common/locales/extra/ca-IT.js",
		285
	],
	"./extra/ca.js": [
		"./node_modules/@angular/common/locales/extra/ca.js",
		286
	],
	"./extra/ccp-IN.js": [
		"./node_modules/@angular/common/locales/extra/ccp-IN.js",
		287
	],
	"./extra/ccp.js": [
		"./node_modules/@angular/common/locales/extra/ccp.js",
		288
	],
	"./extra/ce.js": [
		"./node_modules/@angular/common/locales/extra/ce.js",
		289
	],
	"./extra/ceb.js": [
		"./node_modules/@angular/common/locales/extra/ceb.js",
		290
	],
	"./extra/cgg.js": [
		"./node_modules/@angular/common/locales/extra/cgg.js",
		291
	],
	"./extra/chr.js": [
		"./node_modules/@angular/common/locales/extra/chr.js",
		292
	],
	"./extra/ckb-IR.js": [
		"./node_modules/@angular/common/locales/extra/ckb-IR.js",
		293
	],
	"./extra/ckb.js": [
		"./node_modules/@angular/common/locales/extra/ckb.js",
		294
	],
	"./extra/cs.js": [
		"./node_modules/@angular/common/locales/extra/cs.js",
		295
	],
	"./extra/cu.js": [
		"./node_modules/@angular/common/locales/extra/cu.js",
		296
	],
	"./extra/cy.js": [
		"./node_modules/@angular/common/locales/extra/cy.js",
		297
	],
	"./extra/da-GL.js": [
		"./node_modules/@angular/common/locales/extra/da-GL.js",
		298
	],
	"./extra/da.js": [
		"./node_modules/@angular/common/locales/extra/da.js",
		299
	],
	"./extra/dav.js": [
		"./node_modules/@angular/common/locales/extra/dav.js",
		300
	],
	"./extra/de-AT.js": [
		"./node_modules/@angular/common/locales/extra/de-AT.js",
		301
	],
	"./extra/de-BE.js": [
		"./node_modules/@angular/common/locales/extra/de-BE.js",
		302
	],
	"./extra/de-CH.js": [
		"./node_modules/@angular/common/locales/extra/de-CH.js",
		303
	],
	"./extra/de-IT.js": [
		"./node_modules/@angular/common/locales/extra/de-IT.js",
		304
	],
	"./extra/de-LI.js": [
		"./node_modules/@angular/common/locales/extra/de-LI.js",
		305
	],
	"./extra/de-LU.js": [
		"./node_modules/@angular/common/locales/extra/de-LU.js",
		306
	],
	"./extra/de.js": [
		"./node_modules/@angular/common/locales/extra/de.js",
		307
	],
	"./extra/dje.js": [
		"./node_modules/@angular/common/locales/extra/dje.js",
		308
	],
	"./extra/dsb.js": [
		"./node_modules/@angular/common/locales/extra/dsb.js",
		309
	],
	"./extra/dua.js": [
		"./node_modules/@angular/common/locales/extra/dua.js",
		310
	],
	"./extra/dyo.js": [
		"./node_modules/@angular/common/locales/extra/dyo.js",
		311
	],
	"./extra/dz.js": [
		"./node_modules/@angular/common/locales/extra/dz.js",
		312
	],
	"./extra/ebu.js": [
		"./node_modules/@angular/common/locales/extra/ebu.js",
		313
	],
	"./extra/ee-TG.js": [
		"./node_modules/@angular/common/locales/extra/ee-TG.js",
		314
	],
	"./extra/ee.js": [
		"./node_modules/@angular/common/locales/extra/ee.js",
		315
	],
	"./extra/el-CY.js": [
		"./node_modules/@angular/common/locales/extra/el-CY.js",
		316
	],
	"./extra/el.js": [
		"./node_modules/@angular/common/locales/extra/el.js",
		317
	],
	"./extra/en-001.js": [
		"./node_modules/@angular/common/locales/extra/en-001.js",
		318
	],
	"./extra/en-150.js": [
		"./node_modules/@angular/common/locales/extra/en-150.js",
		319
	],
	"./extra/en-AE.js": [
		"./node_modules/@angular/common/locales/extra/en-AE.js",
		320
	],
	"./extra/en-AG.js": [
		"./node_modules/@angular/common/locales/extra/en-AG.js",
		321
	],
	"./extra/en-AI.js": [
		"./node_modules/@angular/common/locales/extra/en-AI.js",
		322
	],
	"./extra/en-AS.js": [
		"./node_modules/@angular/common/locales/extra/en-AS.js",
		323
	],
	"./extra/en-AT.js": [
		"./node_modules/@angular/common/locales/extra/en-AT.js",
		324
	],
	"./extra/en-AU.js": [
		"./node_modules/@angular/common/locales/extra/en-AU.js",
		325
	],
	"./extra/en-BB.js": [
		"./node_modules/@angular/common/locales/extra/en-BB.js",
		326
	],
	"./extra/en-BE.js": [
		"./node_modules/@angular/common/locales/extra/en-BE.js",
		327
	],
	"./extra/en-BI.js": [
		"./node_modules/@angular/common/locales/extra/en-BI.js",
		328
	],
	"./extra/en-BM.js": [
		"./node_modules/@angular/common/locales/extra/en-BM.js",
		329
	],
	"./extra/en-BS.js": [
		"./node_modules/@angular/common/locales/extra/en-BS.js",
		330
	],
	"./extra/en-BW.js": [
		"./node_modules/@angular/common/locales/extra/en-BW.js",
		331
	],
	"./extra/en-BZ.js": [
		"./node_modules/@angular/common/locales/extra/en-BZ.js",
		332
	],
	"./extra/en-CA.js": [
		"./node_modules/@angular/common/locales/extra/en-CA.js",
		333
	],
	"./extra/en-CC.js": [
		"./node_modules/@angular/common/locales/extra/en-CC.js",
		334
	],
	"./extra/en-CH.js": [
		"./node_modules/@angular/common/locales/extra/en-CH.js",
		335
	],
	"./extra/en-CK.js": [
		"./node_modules/@angular/common/locales/extra/en-CK.js",
		336
	],
	"./extra/en-CM.js": [
		"./node_modules/@angular/common/locales/extra/en-CM.js",
		337
	],
	"./extra/en-CX.js": [
		"./node_modules/@angular/common/locales/extra/en-CX.js",
		338
	],
	"./extra/en-CY.js": [
		"./node_modules/@angular/common/locales/extra/en-CY.js",
		339
	],
	"./extra/en-DE.js": [
		"./node_modules/@angular/common/locales/extra/en-DE.js",
		340
	],
	"./extra/en-DG.js": [
		"./node_modules/@angular/common/locales/extra/en-DG.js",
		341
	],
	"./extra/en-DK.js": [
		"./node_modules/@angular/common/locales/extra/en-DK.js",
		342
	],
	"./extra/en-DM.js": [
		"./node_modules/@angular/common/locales/extra/en-DM.js",
		343
	],
	"./extra/en-ER.js": [
		"./node_modules/@angular/common/locales/extra/en-ER.js",
		344
	],
	"./extra/en-FI.js": [
		"./node_modules/@angular/common/locales/extra/en-FI.js",
		345
	],
	"./extra/en-FJ.js": [
		"./node_modules/@angular/common/locales/extra/en-FJ.js",
		346
	],
	"./extra/en-FK.js": [
		"./node_modules/@angular/common/locales/extra/en-FK.js",
		347
	],
	"./extra/en-FM.js": [
		"./node_modules/@angular/common/locales/extra/en-FM.js",
		348
	],
	"./extra/en-GB.js": [
		"./node_modules/@angular/common/locales/extra/en-GB.js",
		349
	],
	"./extra/en-GD.js": [
		"./node_modules/@angular/common/locales/extra/en-GD.js",
		350
	],
	"./extra/en-GG.js": [
		"./node_modules/@angular/common/locales/extra/en-GG.js",
		351
	],
	"./extra/en-GH.js": [
		"./node_modules/@angular/common/locales/extra/en-GH.js",
		352
	],
	"./extra/en-GI.js": [
		"./node_modules/@angular/common/locales/extra/en-GI.js",
		353
	],
	"./extra/en-GM.js": [
		"./node_modules/@angular/common/locales/extra/en-GM.js",
		354
	],
	"./extra/en-GU.js": [
		"./node_modules/@angular/common/locales/extra/en-GU.js",
		355
	],
	"./extra/en-GY.js": [
		"./node_modules/@angular/common/locales/extra/en-GY.js",
		356
	],
	"./extra/en-HK.js": [
		"./node_modules/@angular/common/locales/extra/en-HK.js",
		357
	],
	"./extra/en-IE.js": [
		"./node_modules/@angular/common/locales/extra/en-IE.js",
		358
	],
	"./extra/en-IL.js": [
		"./node_modules/@angular/common/locales/extra/en-IL.js",
		359
	],
	"./extra/en-IM.js": [
		"./node_modules/@angular/common/locales/extra/en-IM.js",
		360
	],
	"./extra/en-IN.js": [
		"./node_modules/@angular/common/locales/extra/en-IN.js",
		361
	],
	"./extra/en-IO.js": [
		"./node_modules/@angular/common/locales/extra/en-IO.js",
		362
	],
	"./extra/en-JE.js": [
		"./node_modules/@angular/common/locales/extra/en-JE.js",
		363
	],
	"./extra/en-JM.js": [
		"./node_modules/@angular/common/locales/extra/en-JM.js",
		364
	],
	"./extra/en-KE.js": [
		"./node_modules/@angular/common/locales/extra/en-KE.js",
		365
	],
	"./extra/en-KI.js": [
		"./node_modules/@angular/common/locales/extra/en-KI.js",
		366
	],
	"./extra/en-KN.js": [
		"./node_modules/@angular/common/locales/extra/en-KN.js",
		367
	],
	"./extra/en-KY.js": [
		"./node_modules/@angular/common/locales/extra/en-KY.js",
		368
	],
	"./extra/en-LC.js": [
		"./node_modules/@angular/common/locales/extra/en-LC.js",
		369
	],
	"./extra/en-LR.js": [
		"./node_modules/@angular/common/locales/extra/en-LR.js",
		370
	],
	"./extra/en-LS.js": [
		"./node_modules/@angular/common/locales/extra/en-LS.js",
		371
	],
	"./extra/en-MG.js": [
		"./node_modules/@angular/common/locales/extra/en-MG.js",
		372
	],
	"./extra/en-MH.js": [
		"./node_modules/@angular/common/locales/extra/en-MH.js",
		373
	],
	"./extra/en-MO.js": [
		"./node_modules/@angular/common/locales/extra/en-MO.js",
		374
	],
	"./extra/en-MP.js": [
		"./node_modules/@angular/common/locales/extra/en-MP.js",
		375
	],
	"./extra/en-MS.js": [
		"./node_modules/@angular/common/locales/extra/en-MS.js",
		376
	],
	"./extra/en-MT.js": [
		"./node_modules/@angular/common/locales/extra/en-MT.js",
		377
	],
	"./extra/en-MU.js": [
		"./node_modules/@angular/common/locales/extra/en-MU.js",
		378
	],
	"./extra/en-MW.js": [
		"./node_modules/@angular/common/locales/extra/en-MW.js",
		379
	],
	"./extra/en-MY.js": [
		"./node_modules/@angular/common/locales/extra/en-MY.js",
		380
	],
	"./extra/en-NA.js": [
		"./node_modules/@angular/common/locales/extra/en-NA.js",
		381
	],
	"./extra/en-NF.js": [
		"./node_modules/@angular/common/locales/extra/en-NF.js",
		382
	],
	"./extra/en-NG.js": [
		"./node_modules/@angular/common/locales/extra/en-NG.js",
		383
	],
	"./extra/en-NL.js": [
		"./node_modules/@angular/common/locales/extra/en-NL.js",
		384
	],
	"./extra/en-NR.js": [
		"./node_modules/@angular/common/locales/extra/en-NR.js",
		385
	],
	"./extra/en-NU.js": [
		"./node_modules/@angular/common/locales/extra/en-NU.js",
		386
	],
	"./extra/en-NZ.js": [
		"./node_modules/@angular/common/locales/extra/en-NZ.js",
		387
	],
	"./extra/en-PG.js": [
		"./node_modules/@angular/common/locales/extra/en-PG.js",
		388
	],
	"./extra/en-PH.js": [
		"./node_modules/@angular/common/locales/extra/en-PH.js",
		389
	],
	"./extra/en-PK.js": [
		"./node_modules/@angular/common/locales/extra/en-PK.js",
		390
	],
	"./extra/en-PN.js": [
		"./node_modules/@angular/common/locales/extra/en-PN.js",
		391
	],
	"./extra/en-PR.js": [
		"./node_modules/@angular/common/locales/extra/en-PR.js",
		392
	],
	"./extra/en-PW.js": [
		"./node_modules/@angular/common/locales/extra/en-PW.js",
		393
	],
	"./extra/en-RW.js": [
		"./node_modules/@angular/common/locales/extra/en-RW.js",
		394
	],
	"./extra/en-SB.js": [
		"./node_modules/@angular/common/locales/extra/en-SB.js",
		395
	],
	"./extra/en-SC.js": [
		"./node_modules/@angular/common/locales/extra/en-SC.js",
		396
	],
	"./extra/en-SD.js": [
		"./node_modules/@angular/common/locales/extra/en-SD.js",
		397
	],
	"./extra/en-SE.js": [
		"./node_modules/@angular/common/locales/extra/en-SE.js",
		398
	],
	"./extra/en-SG.js": [
		"./node_modules/@angular/common/locales/extra/en-SG.js",
		399
	],
	"./extra/en-SH.js": [
		"./node_modules/@angular/common/locales/extra/en-SH.js",
		400
	],
	"./extra/en-SI.js": [
		"./node_modules/@angular/common/locales/extra/en-SI.js",
		401
	],
	"./extra/en-SL.js": [
		"./node_modules/@angular/common/locales/extra/en-SL.js",
		402
	],
	"./extra/en-SS.js": [
		"./node_modules/@angular/common/locales/extra/en-SS.js",
		403
	],
	"./extra/en-SX.js": [
		"./node_modules/@angular/common/locales/extra/en-SX.js",
		404
	],
	"./extra/en-SZ.js": [
		"./node_modules/@angular/common/locales/extra/en-SZ.js",
		405
	],
	"./extra/en-TC.js": [
		"./node_modules/@angular/common/locales/extra/en-TC.js",
		406
	],
	"./extra/en-TK.js": [
		"./node_modules/@angular/common/locales/extra/en-TK.js",
		407
	],
	"./extra/en-TO.js": [
		"./node_modules/@angular/common/locales/extra/en-TO.js",
		408
	],
	"./extra/en-TT.js": [
		"./node_modules/@angular/common/locales/extra/en-TT.js",
		409
	],
	"./extra/en-TV.js": [
		"./node_modules/@angular/common/locales/extra/en-TV.js",
		410
	],
	"./extra/en-TZ.js": [
		"./node_modules/@angular/common/locales/extra/en-TZ.js",
		411
	],
	"./extra/en-UG.js": [
		"./node_modules/@angular/common/locales/extra/en-UG.js",
		412
	],
	"./extra/en-UM.js": [
		"./node_modules/@angular/common/locales/extra/en-UM.js",
		413
	],
	"./extra/en-US-POSIX.js": [
		"./node_modules/@angular/common/locales/extra/en-US-POSIX.js",
		414
	],
	"./extra/en-VC.js": [
		"./node_modules/@angular/common/locales/extra/en-VC.js",
		415
	],
	"./extra/en-VG.js": [
		"./node_modules/@angular/common/locales/extra/en-VG.js",
		416
	],
	"./extra/en-VI.js": [
		"./node_modules/@angular/common/locales/extra/en-VI.js",
		417
	],
	"./extra/en-VU.js": [
		"./node_modules/@angular/common/locales/extra/en-VU.js",
		418
	],
	"./extra/en-WS.js": [
		"./node_modules/@angular/common/locales/extra/en-WS.js",
		419
	],
	"./extra/en-ZA.js": [
		"./node_modules/@angular/common/locales/extra/en-ZA.js",
		420
	],
	"./extra/en-ZM.js": [
		"./node_modules/@angular/common/locales/extra/en-ZM.js",
		421
	],
	"./extra/en-ZW.js": [
		"./node_modules/@angular/common/locales/extra/en-ZW.js",
		422
	],
	"./extra/en.js": [
		"./node_modules/@angular/common/locales/extra/en.js",
		423
	],
	"./extra/eo.js": [
		"./node_modules/@angular/common/locales/extra/eo.js",
		424
	],
	"./extra/es-419.js": [
		"./node_modules/@angular/common/locales/extra/es-419.js",
		425
	],
	"./extra/es-AR.js": [
		"./node_modules/@angular/common/locales/extra/es-AR.js",
		426
	],
	"./extra/es-BO.js": [
		"./node_modules/@angular/common/locales/extra/es-BO.js",
		427
	],
	"./extra/es-BR.js": [
		"./node_modules/@angular/common/locales/extra/es-BR.js",
		428
	],
	"./extra/es-BZ.js": [
		"./node_modules/@angular/common/locales/extra/es-BZ.js",
		429
	],
	"./extra/es-CL.js": [
		"./node_modules/@angular/common/locales/extra/es-CL.js",
		430
	],
	"./extra/es-CO.js": [
		"./node_modules/@angular/common/locales/extra/es-CO.js",
		431
	],
	"./extra/es-CR.js": [
		"./node_modules/@angular/common/locales/extra/es-CR.js",
		432
	],
	"./extra/es-CU.js": [
		"./node_modules/@angular/common/locales/extra/es-CU.js",
		433
	],
	"./extra/es-DO.js": [
		"./node_modules/@angular/common/locales/extra/es-DO.js",
		434
	],
	"./extra/es-EA.js": [
		"./node_modules/@angular/common/locales/extra/es-EA.js",
		435
	],
	"./extra/es-EC.js": [
		"./node_modules/@angular/common/locales/extra/es-EC.js",
		436
	],
	"./extra/es-GQ.js": [
		"./node_modules/@angular/common/locales/extra/es-GQ.js",
		437
	],
	"./extra/es-GT.js": [
		"./node_modules/@angular/common/locales/extra/es-GT.js",
		438
	],
	"./extra/es-HN.js": [
		"./node_modules/@angular/common/locales/extra/es-HN.js",
		439
	],
	"./extra/es-IC.js": [
		"./node_modules/@angular/common/locales/extra/es-IC.js",
		440
	],
	"./extra/es-MX.js": [
		"./node_modules/@angular/common/locales/extra/es-MX.js",
		441
	],
	"./extra/es-NI.js": [
		"./node_modules/@angular/common/locales/extra/es-NI.js",
		442
	],
	"./extra/es-PA.js": [
		"./node_modules/@angular/common/locales/extra/es-PA.js",
		443
	],
	"./extra/es-PE.js": [
		"./node_modules/@angular/common/locales/extra/es-PE.js",
		444
	],
	"./extra/es-PH.js": [
		"./node_modules/@angular/common/locales/extra/es-PH.js",
		445
	],
	"./extra/es-PR.js": [
		"./node_modules/@angular/common/locales/extra/es-PR.js",
		446
	],
	"./extra/es-PY.js": [
		"./node_modules/@angular/common/locales/extra/es-PY.js",
		447
	],
	"./extra/es-SV.js": [
		"./node_modules/@angular/common/locales/extra/es-SV.js",
		448
	],
	"./extra/es-US.js": [
		"./node_modules/@angular/common/locales/extra/es-US.js",
		449
	],
	"./extra/es-UY.js": [
		"./node_modules/@angular/common/locales/extra/es-UY.js",
		450
	],
	"./extra/es-VE.js": [
		"./node_modules/@angular/common/locales/extra/es-VE.js",
		451
	],
	"./extra/es.js": [
		"./node_modules/@angular/common/locales/extra/es.js",
		452
	],
	"./extra/et.js": [
		"./node_modules/@angular/common/locales/extra/et.js",
		453
	],
	"./extra/eu.js": [
		"./node_modules/@angular/common/locales/extra/eu.js",
		454
	],
	"./extra/ewo.js": [
		"./node_modules/@angular/common/locales/extra/ewo.js",
		455
	],
	"./extra/fa-AF.js": [
		"./node_modules/@angular/common/locales/extra/fa-AF.js",
		456
	],
	"./extra/fa.js": [
		"./node_modules/@angular/common/locales/extra/fa.js",
		457
	],
	"./extra/ff-CM.js": [
		"./node_modules/@angular/common/locales/extra/ff-CM.js",
		458
	],
	"./extra/ff-GN.js": [
		"./node_modules/@angular/common/locales/extra/ff-GN.js",
		459
	],
	"./extra/ff-Latn-BF.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-BF.js",
		460
	],
	"./extra/ff-Latn-CM.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-CM.js",
		461
	],
	"./extra/ff-Latn-GH.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-GH.js",
		462
	],
	"./extra/ff-Latn-GM.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-GM.js",
		463
	],
	"./extra/ff-Latn-GN.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-GN.js",
		464
	],
	"./extra/ff-Latn-GW.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-GW.js",
		465
	],
	"./extra/ff-Latn-LR.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-LR.js",
		466
	],
	"./extra/ff-Latn-MR.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-MR.js",
		467
	],
	"./extra/ff-Latn-NE.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-NE.js",
		468
	],
	"./extra/ff-Latn-NG.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-NG.js",
		469
	],
	"./extra/ff-Latn-SL.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn-SL.js",
		470
	],
	"./extra/ff-Latn.js": [
		"./node_modules/@angular/common/locales/extra/ff-Latn.js",
		471
	],
	"./extra/ff-MR.js": [
		"./node_modules/@angular/common/locales/extra/ff-MR.js",
		472
	],
	"./extra/ff.js": [
		"./node_modules/@angular/common/locales/extra/ff.js",
		473
	],
	"./extra/fi.js": [
		"./node_modules/@angular/common/locales/extra/fi.js",
		474
	],
	"./extra/fil.js": [
		"./node_modules/@angular/common/locales/extra/fil.js",
		475
	],
	"./extra/fo-DK.js": [
		"./node_modules/@angular/common/locales/extra/fo-DK.js",
		476
	],
	"./extra/fo.js": [
		"./node_modules/@angular/common/locales/extra/fo.js",
		477
	],
	"./extra/fr-BE.js": [
		"./node_modules/@angular/common/locales/extra/fr-BE.js",
		478
	],
	"./extra/fr-BF.js": [
		"./node_modules/@angular/common/locales/extra/fr-BF.js",
		479
	],
	"./extra/fr-BI.js": [
		"./node_modules/@angular/common/locales/extra/fr-BI.js",
		480
	],
	"./extra/fr-BJ.js": [
		"./node_modules/@angular/common/locales/extra/fr-BJ.js",
		481
	],
	"./extra/fr-BL.js": [
		"./node_modules/@angular/common/locales/extra/fr-BL.js",
		482
	],
	"./extra/fr-CA.js": [
		"./node_modules/@angular/common/locales/extra/fr-CA.js",
		483
	],
	"./extra/fr-CD.js": [
		"./node_modules/@angular/common/locales/extra/fr-CD.js",
		484
	],
	"./extra/fr-CF.js": [
		"./node_modules/@angular/common/locales/extra/fr-CF.js",
		485
	],
	"./extra/fr-CG.js": [
		"./node_modules/@angular/common/locales/extra/fr-CG.js",
		486
	],
	"./extra/fr-CH.js": [
		"./node_modules/@angular/common/locales/extra/fr-CH.js",
		487
	],
	"./extra/fr-CI.js": [
		"./node_modules/@angular/common/locales/extra/fr-CI.js",
		488
	],
	"./extra/fr-CM.js": [
		"./node_modules/@angular/common/locales/extra/fr-CM.js",
		489
	],
	"./extra/fr-DJ.js": [
		"./node_modules/@angular/common/locales/extra/fr-DJ.js",
		490
	],
	"./extra/fr-DZ.js": [
		"./node_modules/@angular/common/locales/extra/fr-DZ.js",
		491
	],
	"./extra/fr-GA.js": [
		"./node_modules/@angular/common/locales/extra/fr-GA.js",
		492
	],
	"./extra/fr-GF.js": [
		"./node_modules/@angular/common/locales/extra/fr-GF.js",
		493
	],
	"./extra/fr-GN.js": [
		"./node_modules/@angular/common/locales/extra/fr-GN.js",
		494
	],
	"./extra/fr-GP.js": [
		"./node_modules/@angular/common/locales/extra/fr-GP.js",
		495
	],
	"./extra/fr-GQ.js": [
		"./node_modules/@angular/common/locales/extra/fr-GQ.js",
		496
	],
	"./extra/fr-HT.js": [
		"./node_modules/@angular/common/locales/extra/fr-HT.js",
		497
	],
	"./extra/fr-KM.js": [
		"./node_modules/@angular/common/locales/extra/fr-KM.js",
		498
	],
	"./extra/fr-LU.js": [
		"./node_modules/@angular/common/locales/extra/fr-LU.js",
		499
	],
	"./extra/fr-MA.js": [
		"./node_modules/@angular/common/locales/extra/fr-MA.js",
		500
	],
	"./extra/fr-MC.js": [
		"./node_modules/@angular/common/locales/extra/fr-MC.js",
		501
	],
	"./extra/fr-MF.js": [
		"./node_modules/@angular/common/locales/extra/fr-MF.js",
		502
	],
	"./extra/fr-MG.js": [
		"./node_modules/@angular/common/locales/extra/fr-MG.js",
		503
	],
	"./extra/fr-ML.js": [
		"./node_modules/@angular/common/locales/extra/fr-ML.js",
		504
	],
	"./extra/fr-MQ.js": [
		"./node_modules/@angular/common/locales/extra/fr-MQ.js",
		505
	],
	"./extra/fr-MR.js": [
		"./node_modules/@angular/common/locales/extra/fr-MR.js",
		506
	],
	"./extra/fr-MU.js": [
		"./node_modules/@angular/common/locales/extra/fr-MU.js",
		507
	],
	"./extra/fr-NC.js": [
		"./node_modules/@angular/common/locales/extra/fr-NC.js",
		508
	],
	"./extra/fr-NE.js": [
		"./node_modules/@angular/common/locales/extra/fr-NE.js",
		509
	],
	"./extra/fr-PF.js": [
		"./node_modules/@angular/common/locales/extra/fr-PF.js",
		510
	],
	"./extra/fr-PM.js": [
		"./node_modules/@angular/common/locales/extra/fr-PM.js",
		511
	],
	"./extra/fr-RE.js": [
		"./node_modules/@angular/common/locales/extra/fr-RE.js",
		512
	],
	"./extra/fr-RW.js": [
		"./node_modules/@angular/common/locales/extra/fr-RW.js",
		513
	],
	"./extra/fr-SC.js": [
		"./node_modules/@angular/common/locales/extra/fr-SC.js",
		514
	],
	"./extra/fr-SN.js": [
		"./node_modules/@angular/common/locales/extra/fr-SN.js",
		515
	],
	"./extra/fr-SY.js": [
		"./node_modules/@angular/common/locales/extra/fr-SY.js",
		516
	],
	"./extra/fr-TD.js": [
		"./node_modules/@angular/common/locales/extra/fr-TD.js",
		517
	],
	"./extra/fr-TG.js": [
		"./node_modules/@angular/common/locales/extra/fr-TG.js",
		518
	],
	"./extra/fr-TN.js": [
		"./node_modules/@angular/common/locales/extra/fr-TN.js",
		519
	],
	"./extra/fr-VU.js": [
		"./node_modules/@angular/common/locales/extra/fr-VU.js",
		520
	],
	"./extra/fr-WF.js": [
		"./node_modules/@angular/common/locales/extra/fr-WF.js",
		521
	],
	"./extra/fr-YT.js": [
		"./node_modules/@angular/common/locales/extra/fr-YT.js",
		522
	],
	"./extra/fr.js": [
		"./node_modules/@angular/common/locales/extra/fr.js",
		523
	],
	"./extra/fur.js": [
		"./node_modules/@angular/common/locales/extra/fur.js",
		524
	],
	"./extra/fy.js": [
		"./node_modules/@angular/common/locales/extra/fy.js",
		525
	],
	"./extra/ga-GB.js": [
		"./node_modules/@angular/common/locales/extra/ga-GB.js",
		526
	],
	"./extra/ga.js": [
		"./node_modules/@angular/common/locales/extra/ga.js",
		527
	],
	"./extra/gd.js": [
		"./node_modules/@angular/common/locales/extra/gd.js",
		528
	],
	"./extra/gl.js": [
		"./node_modules/@angular/common/locales/extra/gl.js",
		529
	],
	"./extra/gsw-FR.js": [
		"./node_modules/@angular/common/locales/extra/gsw-FR.js",
		530
	],
	"./extra/gsw-LI.js": [
		"./node_modules/@angular/common/locales/extra/gsw-LI.js",
		531
	],
	"./extra/gsw.js": [
		"./node_modules/@angular/common/locales/extra/gsw.js",
		532
	],
	"./extra/gu.js": [
		"./node_modules/@angular/common/locales/extra/gu.js",
		533
	],
	"./extra/guz.js": [
		"./node_modules/@angular/common/locales/extra/guz.js",
		534
	],
	"./extra/gv.js": [
		"./node_modules/@angular/common/locales/extra/gv.js",
		535
	],
	"./extra/ha-GH.js": [
		"./node_modules/@angular/common/locales/extra/ha-GH.js",
		536
	],
	"./extra/ha-NE.js": [
		"./node_modules/@angular/common/locales/extra/ha-NE.js",
		537
	],
	"./extra/ha.js": [
		"./node_modules/@angular/common/locales/extra/ha.js",
		538
	],
	"./extra/haw.js": [
		"./node_modules/@angular/common/locales/extra/haw.js",
		539
	],
	"./extra/he.js": [
		"./node_modules/@angular/common/locales/extra/he.js",
		540
	],
	"./extra/hi.js": [
		"./node_modules/@angular/common/locales/extra/hi.js",
		541
	],
	"./extra/hr-BA.js": [
		"./node_modules/@angular/common/locales/extra/hr-BA.js",
		542
	],
	"./extra/hr.js": [
		"./node_modules/@angular/common/locales/extra/hr.js",
		543
	],
	"./extra/hsb.js": [
		"./node_modules/@angular/common/locales/extra/hsb.js",
		544
	],
	"./extra/hu.js": [
		"./node_modules/@angular/common/locales/extra/hu.js",
		545
	],
	"./extra/hy.js": [
		"./node_modules/@angular/common/locales/extra/hy.js",
		546
	],
	"./extra/ia.js": [
		"./node_modules/@angular/common/locales/extra/ia.js",
		547
	],
	"./extra/id.js": [
		"./node_modules/@angular/common/locales/extra/id.js",
		548
	],
	"./extra/ig.js": [
		"./node_modules/@angular/common/locales/extra/ig.js",
		549
	],
	"./extra/ii.js": [
		"./node_modules/@angular/common/locales/extra/ii.js",
		550
	],
	"./extra/is.js": [
		"./node_modules/@angular/common/locales/extra/is.js",
		551
	],
	"./extra/it-CH.js": [
		"./node_modules/@angular/common/locales/extra/it-CH.js",
		552
	],
	"./extra/it-SM.js": [
		"./node_modules/@angular/common/locales/extra/it-SM.js",
		553
	],
	"./extra/it-VA.js": [
		"./node_modules/@angular/common/locales/extra/it-VA.js",
		554
	],
	"./extra/it.js": [
		"./node_modules/@angular/common/locales/extra/it.js",
		555
	],
	"./extra/ja.js": [
		"./node_modules/@angular/common/locales/extra/ja.js",
		556
	],
	"./extra/jgo.js": [
		"./node_modules/@angular/common/locales/extra/jgo.js",
		557
	],
	"./extra/jmc.js": [
		"./node_modules/@angular/common/locales/extra/jmc.js",
		558
	],
	"./extra/jv.js": [
		"./node_modules/@angular/common/locales/extra/jv.js",
		559
	],
	"./extra/ka.js": [
		"./node_modules/@angular/common/locales/extra/ka.js",
		560
	],
	"./extra/kab.js": [
		"./node_modules/@angular/common/locales/extra/kab.js",
		561
	],
	"./extra/kam.js": [
		"./node_modules/@angular/common/locales/extra/kam.js",
		562
	],
	"./extra/kde.js": [
		"./node_modules/@angular/common/locales/extra/kde.js",
		563
	],
	"./extra/kea.js": [
		"./node_modules/@angular/common/locales/extra/kea.js",
		564
	],
	"./extra/khq.js": [
		"./node_modules/@angular/common/locales/extra/khq.js",
		565
	],
	"./extra/ki.js": [
		"./node_modules/@angular/common/locales/extra/ki.js",
		566
	],
	"./extra/kk.js": [
		"./node_modules/@angular/common/locales/extra/kk.js",
		567
	],
	"./extra/kkj.js": [
		"./node_modules/@angular/common/locales/extra/kkj.js",
		568
	],
	"./extra/kl.js": [
		"./node_modules/@angular/common/locales/extra/kl.js",
		569
	],
	"./extra/kln.js": [
		"./node_modules/@angular/common/locales/extra/kln.js",
		570
	],
	"./extra/km.js": [
		"./node_modules/@angular/common/locales/extra/km.js",
		571
	],
	"./extra/kn.js": [
		"./node_modules/@angular/common/locales/extra/kn.js",
		572
	],
	"./extra/ko-KP.js": [
		"./node_modules/@angular/common/locales/extra/ko-KP.js",
		573
	],
	"./extra/ko.js": [
		"./node_modules/@angular/common/locales/extra/ko.js",
		574
	],
	"./extra/kok.js": [
		"./node_modules/@angular/common/locales/extra/kok.js",
		575
	],
	"./extra/ks.js": [
		"./node_modules/@angular/common/locales/extra/ks.js",
		576
	],
	"./extra/ksb.js": [
		"./node_modules/@angular/common/locales/extra/ksb.js",
		577
	],
	"./extra/ksf.js": [
		"./node_modules/@angular/common/locales/extra/ksf.js",
		578
	],
	"./extra/ksh.js": [
		"./node_modules/@angular/common/locales/extra/ksh.js",
		579
	],
	"./extra/ku.js": [
		"./node_modules/@angular/common/locales/extra/ku.js",
		580
	],
	"./extra/kw.js": [
		"./node_modules/@angular/common/locales/extra/kw.js",
		581
	],
	"./extra/ky.js": [
		"./node_modules/@angular/common/locales/extra/ky.js",
		582
	],
	"./extra/lag.js": [
		"./node_modules/@angular/common/locales/extra/lag.js",
		583
	],
	"./extra/lb.js": [
		"./node_modules/@angular/common/locales/extra/lb.js",
		584
	],
	"./extra/lg.js": [
		"./node_modules/@angular/common/locales/extra/lg.js",
		585
	],
	"./extra/lkt.js": [
		"./node_modules/@angular/common/locales/extra/lkt.js",
		586
	],
	"./extra/ln-AO.js": [
		"./node_modules/@angular/common/locales/extra/ln-AO.js",
		587
	],
	"./extra/ln-CF.js": [
		"./node_modules/@angular/common/locales/extra/ln-CF.js",
		588
	],
	"./extra/ln-CG.js": [
		"./node_modules/@angular/common/locales/extra/ln-CG.js",
		589
	],
	"./extra/ln.js": [
		"./node_modules/@angular/common/locales/extra/ln.js",
		590
	],
	"./extra/lo.js": [
		"./node_modules/@angular/common/locales/extra/lo.js",
		591
	],
	"./extra/lrc-IQ.js": [
		"./node_modules/@angular/common/locales/extra/lrc-IQ.js",
		592
	],
	"./extra/lrc.js": [
		"./node_modules/@angular/common/locales/extra/lrc.js",
		593
	],
	"./extra/lt.js": [
		"./node_modules/@angular/common/locales/extra/lt.js",
		594
	],
	"./extra/lu.js": [
		"./node_modules/@angular/common/locales/extra/lu.js",
		595
	],
	"./extra/luo.js": [
		"./node_modules/@angular/common/locales/extra/luo.js",
		596
	],
	"./extra/luy.js": [
		"./node_modules/@angular/common/locales/extra/luy.js",
		597
	],
	"./extra/lv.js": [
		"./node_modules/@angular/common/locales/extra/lv.js",
		598
	],
	"./extra/mas-TZ.js": [
		"./node_modules/@angular/common/locales/extra/mas-TZ.js",
		599
	],
	"./extra/mas.js": [
		"./node_modules/@angular/common/locales/extra/mas.js",
		600
	],
	"./extra/mer.js": [
		"./node_modules/@angular/common/locales/extra/mer.js",
		601
	],
	"./extra/mfe.js": [
		"./node_modules/@angular/common/locales/extra/mfe.js",
		602
	],
	"./extra/mg.js": [
		"./node_modules/@angular/common/locales/extra/mg.js",
		603
	],
	"./extra/mgh.js": [
		"./node_modules/@angular/common/locales/extra/mgh.js",
		604
	],
	"./extra/mgo.js": [
		"./node_modules/@angular/common/locales/extra/mgo.js",
		605
	],
	"./extra/mi.js": [
		"./node_modules/@angular/common/locales/extra/mi.js",
		606
	],
	"./extra/mk.js": [
		"./node_modules/@angular/common/locales/extra/mk.js",
		607
	],
	"./extra/ml.js": [
		"./node_modules/@angular/common/locales/extra/ml.js",
		608
	],
	"./extra/mn.js": [
		"./node_modules/@angular/common/locales/extra/mn.js",
		609
	],
	"./extra/mr.js": [
		"./node_modules/@angular/common/locales/extra/mr.js",
		610
	],
	"./extra/ms-BN.js": [
		"./node_modules/@angular/common/locales/extra/ms-BN.js",
		611
	],
	"./extra/ms-SG.js": [
		"./node_modules/@angular/common/locales/extra/ms-SG.js",
		612
	],
	"./extra/ms.js": [
		"./node_modules/@angular/common/locales/extra/ms.js",
		613
	],
	"./extra/mt.js": [
		"./node_modules/@angular/common/locales/extra/mt.js",
		614
	],
	"./extra/mua.js": [
		"./node_modules/@angular/common/locales/extra/mua.js",
		615
	],
	"./extra/my.js": [
		"./node_modules/@angular/common/locales/extra/my.js",
		616
	],
	"./extra/mzn.js": [
		"./node_modules/@angular/common/locales/extra/mzn.js",
		617
	],
	"./extra/naq.js": [
		"./node_modules/@angular/common/locales/extra/naq.js",
		618
	],
	"./extra/nb-SJ.js": [
		"./node_modules/@angular/common/locales/extra/nb-SJ.js",
		619
	],
	"./extra/nb.js": [
		"./node_modules/@angular/common/locales/extra/nb.js",
		620
	],
	"./extra/nd.js": [
		"./node_modules/@angular/common/locales/extra/nd.js",
		621
	],
	"./extra/nds-NL.js": [
		"./node_modules/@angular/common/locales/extra/nds-NL.js",
		622
	],
	"./extra/nds.js": [
		"./node_modules/@angular/common/locales/extra/nds.js",
		623
	],
	"./extra/ne-IN.js": [
		"./node_modules/@angular/common/locales/extra/ne-IN.js",
		624
	],
	"./extra/ne.js": [
		"./node_modules/@angular/common/locales/extra/ne.js",
		625
	],
	"./extra/nl-AW.js": [
		"./node_modules/@angular/common/locales/extra/nl-AW.js",
		626
	],
	"./extra/nl-BE.js": [
		"./node_modules/@angular/common/locales/extra/nl-BE.js",
		627
	],
	"./extra/nl-BQ.js": [
		"./node_modules/@angular/common/locales/extra/nl-BQ.js",
		628
	],
	"./extra/nl-CW.js": [
		"./node_modules/@angular/common/locales/extra/nl-CW.js",
		629
	],
	"./extra/nl-SR.js": [
		"./node_modules/@angular/common/locales/extra/nl-SR.js",
		630
	],
	"./extra/nl-SX.js": [
		"./node_modules/@angular/common/locales/extra/nl-SX.js",
		631
	],
	"./extra/nl.js": [
		"./node_modules/@angular/common/locales/extra/nl.js",
		632
	],
	"./extra/nmg.js": [
		"./node_modules/@angular/common/locales/extra/nmg.js",
		633
	],
	"./extra/nn.js": [
		"./node_modules/@angular/common/locales/extra/nn.js",
		634
	],
	"./extra/nnh.js": [
		"./node_modules/@angular/common/locales/extra/nnh.js",
		635
	],
	"./extra/nus.js": [
		"./node_modules/@angular/common/locales/extra/nus.js",
		636
	],
	"./extra/nyn.js": [
		"./node_modules/@angular/common/locales/extra/nyn.js",
		637
	],
	"./extra/om-KE.js": [
		"./node_modules/@angular/common/locales/extra/om-KE.js",
		638
	],
	"./extra/om.js": [
		"./node_modules/@angular/common/locales/extra/om.js",
		639
	],
	"./extra/or.js": [
		"./node_modules/@angular/common/locales/extra/or.js",
		640
	],
	"./extra/os-RU.js": [
		"./node_modules/@angular/common/locales/extra/os-RU.js",
		641
	],
	"./extra/os.js": [
		"./node_modules/@angular/common/locales/extra/os.js",
		642
	],
	"./extra/pa-Arab.js": [
		"./node_modules/@angular/common/locales/extra/pa-Arab.js",
		643
	],
	"./extra/pa-Guru.js": [
		"./node_modules/@angular/common/locales/extra/pa-Guru.js",
		644
	],
	"./extra/pa.js": [
		"./node_modules/@angular/common/locales/extra/pa.js",
		645
	],
	"./extra/pl.js": [
		"./node_modules/@angular/common/locales/extra/pl.js",
		646
	],
	"./extra/prg.js": [
		"./node_modules/@angular/common/locales/extra/prg.js",
		647
	],
	"./extra/ps-PK.js": [
		"./node_modules/@angular/common/locales/extra/ps-PK.js",
		648
	],
	"./extra/ps.js": [
		"./node_modules/@angular/common/locales/extra/ps.js",
		649
	],
	"./extra/pt-AO.js": [
		"./node_modules/@angular/common/locales/extra/pt-AO.js",
		650
	],
	"./extra/pt-CH.js": [
		"./node_modules/@angular/common/locales/extra/pt-CH.js",
		651
	],
	"./extra/pt-CV.js": [
		"./node_modules/@angular/common/locales/extra/pt-CV.js",
		652
	],
	"./extra/pt-GQ.js": [
		"./node_modules/@angular/common/locales/extra/pt-GQ.js",
		653
	],
	"./extra/pt-GW.js": [
		"./node_modules/@angular/common/locales/extra/pt-GW.js",
		654
	],
	"./extra/pt-LU.js": [
		"./node_modules/@angular/common/locales/extra/pt-LU.js",
		655
	],
	"./extra/pt-MO.js": [
		"./node_modules/@angular/common/locales/extra/pt-MO.js",
		656
	],
	"./extra/pt-MZ.js": [
		"./node_modules/@angular/common/locales/extra/pt-MZ.js",
		657
	],
	"./extra/pt-PT.js": [
		"./node_modules/@angular/common/locales/extra/pt-PT.js",
		658
	],
	"./extra/pt-ST.js": [
		"./node_modules/@angular/common/locales/extra/pt-ST.js",
		659
	],
	"./extra/pt-TL.js": [
		"./node_modules/@angular/common/locales/extra/pt-TL.js",
		660
	],
	"./extra/pt.js": [
		"./node_modules/@angular/common/locales/extra/pt.js",
		661
	],
	"./extra/qu-BO.js": [
		"./node_modules/@angular/common/locales/extra/qu-BO.js",
		662
	],
	"./extra/qu-EC.js": [
		"./node_modules/@angular/common/locales/extra/qu-EC.js",
		663
	],
	"./extra/qu.js": [
		"./node_modules/@angular/common/locales/extra/qu.js",
		664
	],
	"./extra/rm.js": [
		"./node_modules/@angular/common/locales/extra/rm.js",
		665
	],
	"./extra/rn.js": [
		"./node_modules/@angular/common/locales/extra/rn.js",
		666
	],
	"./extra/ro-MD.js": [
		"./node_modules/@angular/common/locales/extra/ro-MD.js",
		667
	],
	"./extra/ro.js": [
		"./node_modules/@angular/common/locales/extra/ro.js",
		668
	],
	"./extra/rof.js": [
		"./node_modules/@angular/common/locales/extra/rof.js",
		669
	],
	"./extra/root.js": [
		"./node_modules/@angular/common/locales/extra/root.js",
		670
	],
	"./extra/ru-BY.js": [
		"./node_modules/@angular/common/locales/extra/ru-BY.js",
		671
	],
	"./extra/ru-KG.js": [
		"./node_modules/@angular/common/locales/extra/ru-KG.js",
		672
	],
	"./extra/ru-KZ.js": [
		"./node_modules/@angular/common/locales/extra/ru-KZ.js",
		673
	],
	"./extra/ru-MD.js": [
		"./node_modules/@angular/common/locales/extra/ru-MD.js",
		674
	],
	"./extra/ru-UA.js": [
		"./node_modules/@angular/common/locales/extra/ru-UA.js",
		675
	],
	"./extra/ru.js": [
		"./node_modules/@angular/common/locales/extra/ru.js",
		676
	],
	"./extra/rw.js": [
		"./node_modules/@angular/common/locales/extra/rw.js",
		677
	],
	"./extra/rwk.js": [
		"./node_modules/@angular/common/locales/extra/rwk.js",
		678
	],
	"./extra/sah.js": [
		"./node_modules/@angular/common/locales/extra/sah.js",
		679
	],
	"./extra/saq.js": [
		"./node_modules/@angular/common/locales/extra/saq.js",
		680
	],
	"./extra/sbp.js": [
		"./node_modules/@angular/common/locales/extra/sbp.js",
		681
	],
	"./extra/sd.js": [
		"./node_modules/@angular/common/locales/extra/sd.js",
		682
	],
	"./extra/se-FI.js": [
		"./node_modules/@angular/common/locales/extra/se-FI.js",
		683
	],
	"./extra/se-SE.js": [
		"./node_modules/@angular/common/locales/extra/se-SE.js",
		684
	],
	"./extra/se.js": [
		"./node_modules/@angular/common/locales/extra/se.js",
		685
	],
	"./extra/seh.js": [
		"./node_modules/@angular/common/locales/extra/seh.js",
		686
	],
	"./extra/ses.js": [
		"./node_modules/@angular/common/locales/extra/ses.js",
		687
	],
	"./extra/sg.js": [
		"./node_modules/@angular/common/locales/extra/sg.js",
		688
	],
	"./extra/shi-Latn.js": [
		"./node_modules/@angular/common/locales/extra/shi-Latn.js",
		689
	],
	"./extra/shi-Tfng.js": [
		"./node_modules/@angular/common/locales/extra/shi-Tfng.js",
		690
	],
	"./extra/shi.js": [
		"./node_modules/@angular/common/locales/extra/shi.js",
		691
	],
	"./extra/si.js": [
		"./node_modules/@angular/common/locales/extra/si.js",
		692
	],
	"./extra/sk.js": [
		"./node_modules/@angular/common/locales/extra/sk.js",
		693
	],
	"./extra/sl.js": [
		"./node_modules/@angular/common/locales/extra/sl.js",
		694
	],
	"./extra/smn.js": [
		"./node_modules/@angular/common/locales/extra/smn.js",
		695
	],
	"./extra/sn.js": [
		"./node_modules/@angular/common/locales/extra/sn.js",
		696
	],
	"./extra/so-DJ.js": [
		"./node_modules/@angular/common/locales/extra/so-DJ.js",
		697
	],
	"./extra/so-ET.js": [
		"./node_modules/@angular/common/locales/extra/so-ET.js",
		698
	],
	"./extra/so-KE.js": [
		"./node_modules/@angular/common/locales/extra/so-KE.js",
		699
	],
	"./extra/so.js": [
		"./node_modules/@angular/common/locales/extra/so.js",
		700
	],
	"./extra/sq-MK.js": [
		"./node_modules/@angular/common/locales/extra/sq-MK.js",
		701
	],
	"./extra/sq-XK.js": [
		"./node_modules/@angular/common/locales/extra/sq-XK.js",
		702
	],
	"./extra/sq.js": [
		"./node_modules/@angular/common/locales/extra/sq.js",
		703
	],
	"./extra/sr-Cyrl-BA.js": [
		"./node_modules/@angular/common/locales/extra/sr-Cyrl-BA.js",
		704
	],
	"./extra/sr-Cyrl-ME.js": [
		"./node_modules/@angular/common/locales/extra/sr-Cyrl-ME.js",
		705
	],
	"./extra/sr-Cyrl-XK.js": [
		"./node_modules/@angular/common/locales/extra/sr-Cyrl-XK.js",
		706
	],
	"./extra/sr-Cyrl.js": [
		"./node_modules/@angular/common/locales/extra/sr-Cyrl.js",
		707
	],
	"./extra/sr-Latn-BA.js": [
		"./node_modules/@angular/common/locales/extra/sr-Latn-BA.js",
		708
	],
	"./extra/sr-Latn-ME.js": [
		"./node_modules/@angular/common/locales/extra/sr-Latn-ME.js",
		709
	],
	"./extra/sr-Latn-XK.js": [
		"./node_modules/@angular/common/locales/extra/sr-Latn-XK.js",
		710
	],
	"./extra/sr-Latn.js": [
		"./node_modules/@angular/common/locales/extra/sr-Latn.js",
		711
	],
	"./extra/sr.js": [
		"./node_modules/@angular/common/locales/extra/sr.js",
		712
	],
	"./extra/sv-AX.js": [
		"./node_modules/@angular/common/locales/extra/sv-AX.js",
		713
	],
	"./extra/sv-FI.js": [
		"./node_modules/@angular/common/locales/extra/sv-FI.js",
		714
	],
	"./extra/sv.js": [
		"./node_modules/@angular/common/locales/extra/sv.js",
		715
	],
	"./extra/sw-CD.js": [
		"./node_modules/@angular/common/locales/extra/sw-CD.js",
		716
	],
	"./extra/sw-KE.js": [
		"./node_modules/@angular/common/locales/extra/sw-KE.js",
		717
	],
	"./extra/sw-UG.js": [
		"./node_modules/@angular/common/locales/extra/sw-UG.js",
		718
	],
	"./extra/sw.js": [
		"./node_modules/@angular/common/locales/extra/sw.js",
		719
	],
	"./extra/ta-LK.js": [
		"./node_modules/@angular/common/locales/extra/ta-LK.js",
		720
	],
	"./extra/ta-MY.js": [
		"./node_modules/@angular/common/locales/extra/ta-MY.js",
		721
	],
	"./extra/ta-SG.js": [
		"./node_modules/@angular/common/locales/extra/ta-SG.js",
		722
	],
	"./extra/ta.js": [
		"./node_modules/@angular/common/locales/extra/ta.js",
		723
	],
	"./extra/te.js": [
		"./node_modules/@angular/common/locales/extra/te.js",
		724
	],
	"./extra/teo-KE.js": [
		"./node_modules/@angular/common/locales/extra/teo-KE.js",
		725
	],
	"./extra/teo.js": [
		"./node_modules/@angular/common/locales/extra/teo.js",
		726
	],
	"./extra/tg.js": [
		"./node_modules/@angular/common/locales/extra/tg.js",
		727
	],
	"./extra/th.js": [
		"./node_modules/@angular/common/locales/extra/th.js",
		728
	],
	"./extra/ti-ER.js": [
		"./node_modules/@angular/common/locales/extra/ti-ER.js",
		729
	],
	"./extra/ti.js": [
		"./node_modules/@angular/common/locales/extra/ti.js",
		730
	],
	"./extra/tk.js": [
		"./node_modules/@angular/common/locales/extra/tk.js",
		731
	],
	"./extra/to.js": [
		"./node_modules/@angular/common/locales/extra/to.js",
		732
	],
	"./extra/tr-CY.js": [
		"./node_modules/@angular/common/locales/extra/tr-CY.js",
		733
	],
	"./extra/tr.js": [
		"./node_modules/@angular/common/locales/extra/tr.js",
		734
	],
	"./extra/tt.js": [
		"./node_modules/@angular/common/locales/extra/tt.js",
		735
	],
	"./extra/twq.js": [
		"./node_modules/@angular/common/locales/extra/twq.js",
		736
	],
	"./extra/tzm.js": [
		"./node_modules/@angular/common/locales/extra/tzm.js",
		737
	],
	"./extra/ug.js": [
		"./node_modules/@angular/common/locales/extra/ug.js",
		738
	],
	"./extra/uk.js": [
		"./node_modules/@angular/common/locales/extra/uk.js",
		739
	],
	"./extra/ur-IN.js": [
		"./node_modules/@angular/common/locales/extra/ur-IN.js",
		740
	],
	"./extra/ur.js": [
		"./node_modules/@angular/common/locales/extra/ur.js",
		741
	],
	"./extra/uz-Arab.js": [
		"./node_modules/@angular/common/locales/extra/uz-Arab.js",
		742
	],
	"./extra/uz-Cyrl.js": [
		"./node_modules/@angular/common/locales/extra/uz-Cyrl.js",
		743
	],
	"./extra/uz-Latn.js": [
		"./node_modules/@angular/common/locales/extra/uz-Latn.js",
		744
	],
	"./extra/uz.js": [
		"./node_modules/@angular/common/locales/extra/uz.js",
		745
	],
	"./extra/vai-Latn.js": [
		"./node_modules/@angular/common/locales/extra/vai-Latn.js",
		746
	],
	"./extra/vai-Vaii.js": [
		"./node_modules/@angular/common/locales/extra/vai-Vaii.js",
		747
	],
	"./extra/vai.js": [
		"./node_modules/@angular/common/locales/extra/vai.js",
		748
	],
	"./extra/vi.js": [
		"./node_modules/@angular/common/locales/extra/vi.js",
		749
	],
	"./extra/vo.js": [
		"./node_modules/@angular/common/locales/extra/vo.js",
		750
	],
	"./extra/vun.js": [
		"./node_modules/@angular/common/locales/extra/vun.js",
		751
	],
	"./extra/wae.js": [
		"./node_modules/@angular/common/locales/extra/wae.js",
		752
	],
	"./extra/wo.js": [
		"./node_modules/@angular/common/locales/extra/wo.js",
		753
	],
	"./extra/xh.js": [
		"./node_modules/@angular/common/locales/extra/xh.js",
		754
	],
	"./extra/xog.js": [
		"./node_modules/@angular/common/locales/extra/xog.js",
		755
	],
	"./extra/yav.js": [
		"./node_modules/@angular/common/locales/extra/yav.js",
		756
	],
	"./extra/yi.js": [
		"./node_modules/@angular/common/locales/extra/yi.js",
		757
	],
	"./extra/yo-BJ.js": [
		"./node_modules/@angular/common/locales/extra/yo-BJ.js",
		758
	],
	"./extra/yo.js": [
		"./node_modules/@angular/common/locales/extra/yo.js",
		759
	],
	"./extra/yue-Hans.js": [
		"./node_modules/@angular/common/locales/extra/yue-Hans.js",
		760
	],
	"./extra/yue-Hant.js": [
		"./node_modules/@angular/common/locales/extra/yue-Hant.js",
		761
	],
	"./extra/yue.js": [
		"./node_modules/@angular/common/locales/extra/yue.js",
		762
	],
	"./extra/zgh.js": [
		"./node_modules/@angular/common/locales/extra/zgh.js",
		763
	],
	"./extra/zh-Hans-HK.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hans-HK.js",
		764
	],
	"./extra/zh-Hans-MO.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hans-MO.js",
		765
	],
	"./extra/zh-Hans-SG.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hans-SG.js",
		766
	],
	"./extra/zh-Hans.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hans.js",
		767
	],
	"./extra/zh-Hant-HK.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hant-HK.js",
		768
	],
	"./extra/zh-Hant-MO.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hant-MO.js",
		769
	],
	"./extra/zh-Hant.js": [
		"./node_modules/@angular/common/locales/extra/zh-Hant.js",
		770
	],
	"./extra/zh.js": [
		"./node_modules/@angular/common/locales/extra/zh.js",
		771
	],
	"./extra/zu.js": [
		"./node_modules/@angular/common/locales/extra/zu.js",
		772
	],
	"./fa-AF.js": [
		"./node_modules/@angular/common/locales/fa-AF.js",
		773
	],
	"./fa.js": [
		"./node_modules/@angular/common/locales/fa.js",
		774
	],
	"./ff-CM.js": [
		"./node_modules/@angular/common/locales/ff-CM.js",
		775
	],
	"./ff-GN.js": [
		"./node_modules/@angular/common/locales/ff-GN.js",
		776
	],
	"./ff-Latn-BF.js": [
		"./node_modules/@angular/common/locales/ff-Latn-BF.js",
		777
	],
	"./ff-Latn-CM.js": [
		"./node_modules/@angular/common/locales/ff-Latn-CM.js",
		778
	],
	"./ff-Latn-GH.js": [
		"./node_modules/@angular/common/locales/ff-Latn-GH.js",
		779
	],
	"./ff-Latn-GM.js": [
		"./node_modules/@angular/common/locales/ff-Latn-GM.js",
		780
	],
	"./ff-Latn-GN.js": [
		"./node_modules/@angular/common/locales/ff-Latn-GN.js",
		781
	],
	"./ff-Latn-GW.js": [
		"./node_modules/@angular/common/locales/ff-Latn-GW.js",
		782
	],
	"./ff-Latn-LR.js": [
		"./node_modules/@angular/common/locales/ff-Latn-LR.js",
		783
	],
	"./ff-Latn-MR.js": [
		"./node_modules/@angular/common/locales/ff-Latn-MR.js",
		784
	],
	"./ff-Latn-NE.js": [
		"./node_modules/@angular/common/locales/ff-Latn-NE.js",
		785
	],
	"./ff-Latn-NG.js": [
		"./node_modules/@angular/common/locales/ff-Latn-NG.js",
		786
	],
	"./ff-Latn-SL.js": [
		"./node_modules/@angular/common/locales/ff-Latn-SL.js",
		787
	],
	"./ff-Latn.js": [
		"./node_modules/@angular/common/locales/ff-Latn.js",
		788
	],
	"./ff-MR.js": [
		"./node_modules/@angular/common/locales/ff-MR.js",
		789
	],
	"./ff.js": [
		"./node_modules/@angular/common/locales/ff.js",
		790
	],
	"./fi.js": [
		"./node_modules/@angular/common/locales/fi.js",
		791
	],
	"./fil.js": [
		"./node_modules/@angular/common/locales/fil.js",
		792
	],
	"./fo-DK.js": [
		"./node_modules/@angular/common/locales/fo-DK.js",
		793
	],
	"./fo.js": [
		"./node_modules/@angular/common/locales/fo.js",
		794
	],
	"./fr-BE.js": [
		"./node_modules/@angular/common/locales/fr-BE.js",
		795
	],
	"./fr-BF.js": [
		"./node_modules/@angular/common/locales/fr-BF.js",
		796
	],
	"./fr-BI.js": [
		"./node_modules/@angular/common/locales/fr-BI.js",
		797
	],
	"./fr-BJ.js": [
		"./node_modules/@angular/common/locales/fr-BJ.js",
		798
	],
	"./fr-BL.js": [
		"./node_modules/@angular/common/locales/fr-BL.js",
		799
	],
	"./fr-CA.js": [
		"./node_modules/@angular/common/locales/fr-CA.js",
		800
	],
	"./fr-CD.js": [
		"./node_modules/@angular/common/locales/fr-CD.js",
		801
	],
	"./fr-CF.js": [
		"./node_modules/@angular/common/locales/fr-CF.js",
		802
	],
	"./fr-CG.js": [
		"./node_modules/@angular/common/locales/fr-CG.js",
		803
	],
	"./fr-CH.js": [
		"./node_modules/@angular/common/locales/fr-CH.js",
		804
	],
	"./fr-CI.js": [
		"./node_modules/@angular/common/locales/fr-CI.js",
		805
	],
	"./fr-CM.js": [
		"./node_modules/@angular/common/locales/fr-CM.js",
		806
	],
	"./fr-DJ.js": [
		"./node_modules/@angular/common/locales/fr-DJ.js",
		807
	],
	"./fr-DZ.js": [
		"./node_modules/@angular/common/locales/fr-DZ.js",
		808
	],
	"./fr-GA.js": [
		"./node_modules/@angular/common/locales/fr-GA.js",
		809
	],
	"./fr-GF.js": [
		"./node_modules/@angular/common/locales/fr-GF.js",
		810
	],
	"./fr-GN.js": [
		"./node_modules/@angular/common/locales/fr-GN.js",
		811
	],
	"./fr-GP.js": [
		"./node_modules/@angular/common/locales/fr-GP.js",
		812
	],
	"./fr-GQ.js": [
		"./node_modules/@angular/common/locales/fr-GQ.js",
		813
	],
	"./fr-HT.js": [
		"./node_modules/@angular/common/locales/fr-HT.js",
		814
	],
	"./fr-KM.js": [
		"./node_modules/@angular/common/locales/fr-KM.js",
		815
	],
	"./fr-LU.js": [
		"./node_modules/@angular/common/locales/fr-LU.js",
		816
	],
	"./fr-MA.js": [
		"./node_modules/@angular/common/locales/fr-MA.js",
		817
	],
	"./fr-MC.js": [
		"./node_modules/@angular/common/locales/fr-MC.js",
		818
	],
	"./fr-MF.js": [
		"./node_modules/@angular/common/locales/fr-MF.js",
		819
	],
	"./fr-MG.js": [
		"./node_modules/@angular/common/locales/fr-MG.js",
		820
	],
	"./fr-ML.js": [
		"./node_modules/@angular/common/locales/fr-ML.js",
		821
	],
	"./fr-MQ.js": [
		"./node_modules/@angular/common/locales/fr-MQ.js",
		822
	],
	"./fr-MR.js": [
		"./node_modules/@angular/common/locales/fr-MR.js",
		823
	],
	"./fr-MU.js": [
		"./node_modules/@angular/common/locales/fr-MU.js",
		824
	],
	"./fr-NC.js": [
		"./node_modules/@angular/common/locales/fr-NC.js",
		825
	],
	"./fr-NE.js": [
		"./node_modules/@angular/common/locales/fr-NE.js",
		826
	],
	"./fr-PF.js": [
		"./node_modules/@angular/common/locales/fr-PF.js",
		827
	],
	"./fr-PM.js": [
		"./node_modules/@angular/common/locales/fr-PM.js",
		828
	],
	"./fr-RE.js": [
		"./node_modules/@angular/common/locales/fr-RE.js",
		829
	],
	"./fr-RW.js": [
		"./node_modules/@angular/common/locales/fr-RW.js",
		830
	],
	"./fr-SC.js": [
		"./node_modules/@angular/common/locales/fr-SC.js",
		831
	],
	"./fr-SN.js": [
		"./node_modules/@angular/common/locales/fr-SN.js",
		832
	],
	"./fr-SY.js": [
		"./node_modules/@angular/common/locales/fr-SY.js",
		833
	],
	"./fr-TD.js": [
		"./node_modules/@angular/common/locales/fr-TD.js",
		834
	],
	"./fr-TG.js": [
		"./node_modules/@angular/common/locales/fr-TG.js",
		835
	],
	"./fr-TN.js": [
		"./node_modules/@angular/common/locales/fr-TN.js",
		836
	],
	"./fr-VU.js": [
		"./node_modules/@angular/common/locales/fr-VU.js",
		837
	],
	"./fr-WF.js": [
		"./node_modules/@angular/common/locales/fr-WF.js",
		838
	],
	"./fr-YT.js": [
		"./node_modules/@angular/common/locales/fr-YT.js",
		839
	],
	"./fr.js": [
		"./node_modules/@angular/common/locales/fr.js",
		840
	],
	"./fur.js": [
		"./node_modules/@angular/common/locales/fur.js",
		841
	],
	"./fy.js": [
		"./node_modules/@angular/common/locales/fy.js",
		842
	],
	"./ga-GB.js": [
		"./node_modules/@angular/common/locales/ga-GB.js",
		843
	],
	"./ga.js": [
		"./node_modules/@angular/common/locales/ga.js",
		844
	],
	"./gd.js": [
		"./node_modules/@angular/common/locales/gd.js",
		845
	],
	"./gl.js": [
		"./node_modules/@angular/common/locales/gl.js",
		846
	],
	"./global/af-NA.js": [
		"./node_modules/@angular/common/locales/global/af-NA.js",
		847
	],
	"./global/af.js": [
		"./node_modules/@angular/common/locales/global/af.js",
		848
	],
	"./global/agq.js": [
		"./node_modules/@angular/common/locales/global/agq.js",
		849
	],
	"./global/ak.js": [
		"./node_modules/@angular/common/locales/global/ak.js",
		850
	],
	"./global/am.js": [
		"./node_modules/@angular/common/locales/global/am.js",
		851
	],
	"./global/ar-AE.js": [
		"./node_modules/@angular/common/locales/global/ar-AE.js",
		852
	],
	"./global/ar-BH.js": [
		"./node_modules/@angular/common/locales/global/ar-BH.js",
		853
	],
	"./global/ar-DJ.js": [
		"./node_modules/@angular/common/locales/global/ar-DJ.js",
		854
	],
	"./global/ar-DZ.js": [
		"./node_modules/@angular/common/locales/global/ar-DZ.js",
		855
	],
	"./global/ar-EG.js": [
		"./node_modules/@angular/common/locales/global/ar-EG.js",
		856
	],
	"./global/ar-EH.js": [
		"./node_modules/@angular/common/locales/global/ar-EH.js",
		857
	],
	"./global/ar-ER.js": [
		"./node_modules/@angular/common/locales/global/ar-ER.js",
		858
	],
	"./global/ar-IL.js": [
		"./node_modules/@angular/common/locales/global/ar-IL.js",
		859
	],
	"./global/ar-IQ.js": [
		"./node_modules/@angular/common/locales/global/ar-IQ.js",
		860
	],
	"./global/ar-JO.js": [
		"./node_modules/@angular/common/locales/global/ar-JO.js",
		861
	],
	"./global/ar-KM.js": [
		"./node_modules/@angular/common/locales/global/ar-KM.js",
		862
	],
	"./global/ar-KW.js": [
		"./node_modules/@angular/common/locales/global/ar-KW.js",
		863
	],
	"./global/ar-LB.js": [
		"./node_modules/@angular/common/locales/global/ar-LB.js",
		864
	],
	"./global/ar-LY.js": [
		"./node_modules/@angular/common/locales/global/ar-LY.js",
		865
	],
	"./global/ar-MA.js": [
		"./node_modules/@angular/common/locales/global/ar-MA.js",
		866
	],
	"./global/ar-MR.js": [
		"./node_modules/@angular/common/locales/global/ar-MR.js",
		867
	],
	"./global/ar-OM.js": [
		"./node_modules/@angular/common/locales/global/ar-OM.js",
		868
	],
	"./global/ar-PS.js": [
		"./node_modules/@angular/common/locales/global/ar-PS.js",
		869
	],
	"./global/ar-QA.js": [
		"./node_modules/@angular/common/locales/global/ar-QA.js",
		870
	],
	"./global/ar-SA.js": [
		"./node_modules/@angular/common/locales/global/ar-SA.js",
		871
	],
	"./global/ar-SD.js": [
		"./node_modules/@angular/common/locales/global/ar-SD.js",
		872
	],
	"./global/ar-SO.js": [
		"./node_modules/@angular/common/locales/global/ar-SO.js",
		873
	],
	"./global/ar-SS.js": [
		"./node_modules/@angular/common/locales/global/ar-SS.js",
		874
	],
	"./global/ar-SY.js": [
		"./node_modules/@angular/common/locales/global/ar-SY.js",
		875
	],
	"./global/ar-TD.js": [
		"./node_modules/@angular/common/locales/global/ar-TD.js",
		876
	],
	"./global/ar-TN.js": [
		"./node_modules/@angular/common/locales/global/ar-TN.js",
		877
	],
	"./global/ar-YE.js": [
		"./node_modules/@angular/common/locales/global/ar-YE.js",
		878
	],
	"./global/ar.js": [
		"./node_modules/@angular/common/locales/global/ar.js",
		879
	],
	"./global/as.js": [
		"./node_modules/@angular/common/locales/global/as.js",
		880
	],
	"./global/asa.js": [
		"./node_modules/@angular/common/locales/global/asa.js",
		881
	],
	"./global/ast.js": [
		"./node_modules/@angular/common/locales/global/ast.js",
		882
	],
	"./global/az-Cyrl.js": [
		"./node_modules/@angular/common/locales/global/az-Cyrl.js",
		883
	],
	"./global/az-Latn.js": [
		"./node_modules/@angular/common/locales/global/az-Latn.js",
		884
	],
	"./global/az.js": [
		"./node_modules/@angular/common/locales/global/az.js",
		885
	],
	"./global/bas.js": [
		"./node_modules/@angular/common/locales/global/bas.js",
		886
	],
	"./global/be.js": [
		"./node_modules/@angular/common/locales/global/be.js",
		887
	],
	"./global/bem.js": [
		"./node_modules/@angular/common/locales/global/bem.js",
		888
	],
	"./global/bez.js": [
		"./node_modules/@angular/common/locales/global/bez.js",
		889
	],
	"./global/bg.js": [
		"./node_modules/@angular/common/locales/global/bg.js",
		890
	],
	"./global/bm.js": [
		"./node_modules/@angular/common/locales/global/bm.js",
		891
	],
	"./global/bn-IN.js": [
		"./node_modules/@angular/common/locales/global/bn-IN.js",
		892
	],
	"./global/bn.js": [
		"./node_modules/@angular/common/locales/global/bn.js",
		893
	],
	"./global/bo-IN.js": [
		"./node_modules/@angular/common/locales/global/bo-IN.js",
		894
	],
	"./global/bo.js": [
		"./node_modules/@angular/common/locales/global/bo.js",
		895
	],
	"./global/br.js": [
		"./node_modules/@angular/common/locales/global/br.js",
		896
	],
	"./global/brx.js": [
		"./node_modules/@angular/common/locales/global/brx.js",
		897
	],
	"./global/bs-Cyrl.js": [
		"./node_modules/@angular/common/locales/global/bs-Cyrl.js",
		898
	],
	"./global/bs-Latn.js": [
		"./node_modules/@angular/common/locales/global/bs-Latn.js",
		899
	],
	"./global/bs.js": [
		"./node_modules/@angular/common/locales/global/bs.js",
		900
	],
	"./global/ca-AD.js": [
		"./node_modules/@angular/common/locales/global/ca-AD.js",
		901
	],
	"./global/ca-ES-VALENCIA.js": [
		"./node_modules/@angular/common/locales/global/ca-ES-VALENCIA.js",
		902
	],
	"./global/ca-FR.js": [
		"./node_modules/@angular/common/locales/global/ca-FR.js",
		903
	],
	"./global/ca-IT.js": [
		"./node_modules/@angular/common/locales/global/ca-IT.js",
		904
	],
	"./global/ca.js": [
		"./node_modules/@angular/common/locales/global/ca.js",
		905
	],
	"./global/ccp-IN.js": [
		"./node_modules/@angular/common/locales/global/ccp-IN.js",
		906
	],
	"./global/ccp.js": [
		"./node_modules/@angular/common/locales/global/ccp.js",
		907
	],
	"./global/ce.js": [
		"./node_modules/@angular/common/locales/global/ce.js",
		908
	],
	"./global/ceb.js": [
		"./node_modules/@angular/common/locales/global/ceb.js",
		909
	],
	"./global/cgg.js": [
		"./node_modules/@angular/common/locales/global/cgg.js",
		910
	],
	"./global/chr.js": [
		"./node_modules/@angular/common/locales/global/chr.js",
		911
	],
	"./global/ckb-IR.js": [
		"./node_modules/@angular/common/locales/global/ckb-IR.js",
		912
	],
	"./global/ckb.js": [
		"./node_modules/@angular/common/locales/global/ckb.js",
		913
	],
	"./global/cs.js": [
		"./node_modules/@angular/common/locales/global/cs.js",
		914
	],
	"./global/cu.js": [
		"./node_modules/@angular/common/locales/global/cu.js",
		915
	],
	"./global/cy.js": [
		"./node_modules/@angular/common/locales/global/cy.js",
		916
	],
	"./global/da-GL.js": [
		"./node_modules/@angular/common/locales/global/da-GL.js",
		917
	],
	"./global/da.js": [
		"./node_modules/@angular/common/locales/global/da.js",
		918
	],
	"./global/dav.js": [
		"./node_modules/@angular/common/locales/global/dav.js",
		919
	],
	"./global/de-AT.js": [
		"./node_modules/@angular/common/locales/global/de-AT.js",
		920
	],
	"./global/de-BE.js": [
		"./node_modules/@angular/common/locales/global/de-BE.js",
		921
	],
	"./global/de-CH.js": [
		"./node_modules/@angular/common/locales/global/de-CH.js",
		922
	],
	"./global/de-IT.js": [
		"./node_modules/@angular/common/locales/global/de-IT.js",
		923
	],
	"./global/de-LI.js": [
		"./node_modules/@angular/common/locales/global/de-LI.js",
		924
	],
	"./global/de-LU.js": [
		"./node_modules/@angular/common/locales/global/de-LU.js",
		925
	],
	"./global/de.js": [
		"./node_modules/@angular/common/locales/global/de.js",
		926
	],
	"./global/dje.js": [
		"./node_modules/@angular/common/locales/global/dje.js",
		927
	],
	"./global/dsb.js": [
		"./node_modules/@angular/common/locales/global/dsb.js",
		928
	],
	"./global/dua.js": [
		"./node_modules/@angular/common/locales/global/dua.js",
		929
	],
	"./global/dyo.js": [
		"./node_modules/@angular/common/locales/global/dyo.js",
		930
	],
	"./global/dz.js": [
		"./node_modules/@angular/common/locales/global/dz.js",
		931
	],
	"./global/ebu.js": [
		"./node_modules/@angular/common/locales/global/ebu.js",
		932
	],
	"./global/ee-TG.js": [
		"./node_modules/@angular/common/locales/global/ee-TG.js",
		933
	],
	"./global/ee.js": [
		"./node_modules/@angular/common/locales/global/ee.js",
		934
	],
	"./global/el-CY.js": [
		"./node_modules/@angular/common/locales/global/el-CY.js",
		935
	],
	"./global/el.js": [
		"./node_modules/@angular/common/locales/global/el.js",
		936
	],
	"./global/en-001.js": [
		"./node_modules/@angular/common/locales/global/en-001.js",
		937
	],
	"./global/en-150.js": [
		"./node_modules/@angular/common/locales/global/en-150.js",
		938
	],
	"./global/en-AE.js": [
		"./node_modules/@angular/common/locales/global/en-AE.js",
		939
	],
	"./global/en-AG.js": [
		"./node_modules/@angular/common/locales/global/en-AG.js",
		940
	],
	"./global/en-AI.js": [
		"./node_modules/@angular/common/locales/global/en-AI.js",
		941
	],
	"./global/en-AS.js": [
		"./node_modules/@angular/common/locales/global/en-AS.js",
		942
	],
	"./global/en-AT.js": [
		"./node_modules/@angular/common/locales/global/en-AT.js",
		943
	],
	"./global/en-AU.js": [
		"./node_modules/@angular/common/locales/global/en-AU.js",
		944
	],
	"./global/en-BB.js": [
		"./node_modules/@angular/common/locales/global/en-BB.js",
		945
	],
	"./global/en-BE.js": [
		"./node_modules/@angular/common/locales/global/en-BE.js",
		946
	],
	"./global/en-BI.js": [
		"./node_modules/@angular/common/locales/global/en-BI.js",
		947
	],
	"./global/en-BM.js": [
		"./node_modules/@angular/common/locales/global/en-BM.js",
		948
	],
	"./global/en-BS.js": [
		"./node_modules/@angular/common/locales/global/en-BS.js",
		949
	],
	"./global/en-BW.js": [
		"./node_modules/@angular/common/locales/global/en-BW.js",
		950
	],
	"./global/en-BZ.js": [
		"./node_modules/@angular/common/locales/global/en-BZ.js",
		951
	],
	"./global/en-CA.js": [
		"./node_modules/@angular/common/locales/global/en-CA.js",
		952
	],
	"./global/en-CC.js": [
		"./node_modules/@angular/common/locales/global/en-CC.js",
		953
	],
	"./global/en-CH.js": [
		"./node_modules/@angular/common/locales/global/en-CH.js",
		954
	],
	"./global/en-CK.js": [
		"./node_modules/@angular/common/locales/global/en-CK.js",
		955
	],
	"./global/en-CM.js": [
		"./node_modules/@angular/common/locales/global/en-CM.js",
		956
	],
	"./global/en-CX.js": [
		"./node_modules/@angular/common/locales/global/en-CX.js",
		957
	],
	"./global/en-CY.js": [
		"./node_modules/@angular/common/locales/global/en-CY.js",
		958
	],
	"./global/en-DE.js": [
		"./node_modules/@angular/common/locales/global/en-DE.js",
		959
	],
	"./global/en-DG.js": [
		"./node_modules/@angular/common/locales/global/en-DG.js",
		960
	],
	"./global/en-DK.js": [
		"./node_modules/@angular/common/locales/global/en-DK.js",
		961
	],
	"./global/en-DM.js": [
		"./node_modules/@angular/common/locales/global/en-DM.js",
		962
	],
	"./global/en-ER.js": [
		"./node_modules/@angular/common/locales/global/en-ER.js",
		963
	],
	"./global/en-FI.js": [
		"./node_modules/@angular/common/locales/global/en-FI.js",
		964
	],
	"./global/en-FJ.js": [
		"./node_modules/@angular/common/locales/global/en-FJ.js",
		965
	],
	"./global/en-FK.js": [
		"./node_modules/@angular/common/locales/global/en-FK.js",
		966
	],
	"./global/en-FM.js": [
		"./node_modules/@angular/common/locales/global/en-FM.js",
		967
	],
	"./global/en-GB.js": [
		"./node_modules/@angular/common/locales/global/en-GB.js",
		968
	],
	"./global/en-GD.js": [
		"./node_modules/@angular/common/locales/global/en-GD.js",
		969
	],
	"./global/en-GG.js": [
		"./node_modules/@angular/common/locales/global/en-GG.js",
		970
	],
	"./global/en-GH.js": [
		"./node_modules/@angular/common/locales/global/en-GH.js",
		971
	],
	"./global/en-GI.js": [
		"./node_modules/@angular/common/locales/global/en-GI.js",
		972
	],
	"./global/en-GM.js": [
		"./node_modules/@angular/common/locales/global/en-GM.js",
		973
	],
	"./global/en-GU.js": [
		"./node_modules/@angular/common/locales/global/en-GU.js",
		974
	],
	"./global/en-GY.js": [
		"./node_modules/@angular/common/locales/global/en-GY.js",
		975
	],
	"./global/en-HK.js": [
		"./node_modules/@angular/common/locales/global/en-HK.js",
		976
	],
	"./global/en-IE.js": [
		"./node_modules/@angular/common/locales/global/en-IE.js",
		977
	],
	"./global/en-IL.js": [
		"./node_modules/@angular/common/locales/global/en-IL.js",
		978
	],
	"./global/en-IM.js": [
		"./node_modules/@angular/common/locales/global/en-IM.js",
		979
	],
	"./global/en-IN.js": [
		"./node_modules/@angular/common/locales/global/en-IN.js",
		980
	],
	"./global/en-IO.js": [
		"./node_modules/@angular/common/locales/global/en-IO.js",
		981
	],
	"./global/en-JE.js": [
		"./node_modules/@angular/common/locales/global/en-JE.js",
		982
	],
	"./global/en-JM.js": [
		"./node_modules/@angular/common/locales/global/en-JM.js",
		983
	],
	"./global/en-KE.js": [
		"./node_modules/@angular/common/locales/global/en-KE.js",
		984
	],
	"./global/en-KI.js": [
		"./node_modules/@angular/common/locales/global/en-KI.js",
		985
	],
	"./global/en-KN.js": [
		"./node_modules/@angular/common/locales/global/en-KN.js",
		986
	],
	"./global/en-KY.js": [
		"./node_modules/@angular/common/locales/global/en-KY.js",
		987
	],
	"./global/en-LC.js": [
		"./node_modules/@angular/common/locales/global/en-LC.js",
		988
	],
	"./global/en-LR.js": [
		"./node_modules/@angular/common/locales/global/en-LR.js",
		989
	],
	"./global/en-LS.js": [
		"./node_modules/@angular/common/locales/global/en-LS.js",
		990
	],
	"./global/en-MG.js": [
		"./node_modules/@angular/common/locales/global/en-MG.js",
		991
	],
	"./global/en-MH.js": [
		"./node_modules/@angular/common/locales/global/en-MH.js",
		992
	],
	"./global/en-MO.js": [
		"./node_modules/@angular/common/locales/global/en-MO.js",
		993
	],
	"./global/en-MP.js": [
		"./node_modules/@angular/common/locales/global/en-MP.js",
		994
	],
	"./global/en-MS.js": [
		"./node_modules/@angular/common/locales/global/en-MS.js",
		995
	],
	"./global/en-MT.js": [
		"./node_modules/@angular/common/locales/global/en-MT.js",
		996
	],
	"./global/en-MU.js": [
		"./node_modules/@angular/common/locales/global/en-MU.js",
		997
	],
	"./global/en-MW.js": [
		"./node_modules/@angular/common/locales/global/en-MW.js",
		998
	],
	"./global/en-MY.js": [
		"./node_modules/@angular/common/locales/global/en-MY.js",
		999
	],
	"./global/en-NA.js": [
		"./node_modules/@angular/common/locales/global/en-NA.js",
		1000
	],
	"./global/en-NF.js": [
		"./node_modules/@angular/common/locales/global/en-NF.js",
		1001
	],
	"./global/en-NG.js": [
		"./node_modules/@angular/common/locales/global/en-NG.js",
		1002
	],
	"./global/en-NL.js": [
		"./node_modules/@angular/common/locales/global/en-NL.js",
		1003
	],
	"./global/en-NR.js": [
		"./node_modules/@angular/common/locales/global/en-NR.js",
		1004
	],
	"./global/en-NU.js": [
		"./node_modules/@angular/common/locales/global/en-NU.js",
		1005
	],
	"./global/en-NZ.js": [
		"./node_modules/@angular/common/locales/global/en-NZ.js",
		1006
	],
	"./global/en-PG.js": [
		"./node_modules/@angular/common/locales/global/en-PG.js",
		1007
	],
	"./global/en-PH.js": [
		"./node_modules/@angular/common/locales/global/en-PH.js",
		1008
	],
	"./global/en-PK.js": [
		"./node_modules/@angular/common/locales/global/en-PK.js",
		1009
	],
	"./global/en-PN.js": [
		"./node_modules/@angular/common/locales/global/en-PN.js",
		1010
	],
	"./global/en-PR.js": [
		"./node_modules/@angular/common/locales/global/en-PR.js",
		1011
	],
	"./global/en-PW.js": [
		"./node_modules/@angular/common/locales/global/en-PW.js",
		1012
	],
	"./global/en-RW.js": [
		"./node_modules/@angular/common/locales/global/en-RW.js",
		1013
	],
	"./global/en-SB.js": [
		"./node_modules/@angular/common/locales/global/en-SB.js",
		1014
	],
	"./global/en-SC.js": [
		"./node_modules/@angular/common/locales/global/en-SC.js",
		1015
	],
	"./global/en-SD.js": [
		"./node_modules/@angular/common/locales/global/en-SD.js",
		1016
	],
	"./global/en-SE.js": [
		"./node_modules/@angular/common/locales/global/en-SE.js",
		1017
	],
	"./global/en-SG.js": [
		"./node_modules/@angular/common/locales/global/en-SG.js",
		1018
	],
	"./global/en-SH.js": [
		"./node_modules/@angular/common/locales/global/en-SH.js",
		1019
	],
	"./global/en-SI.js": [
		"./node_modules/@angular/common/locales/global/en-SI.js",
		1020
	],
	"./global/en-SL.js": [
		"./node_modules/@angular/common/locales/global/en-SL.js",
		1021
	],
	"./global/en-SS.js": [
		"./node_modules/@angular/common/locales/global/en-SS.js",
		1022
	],
	"./global/en-SX.js": [
		"./node_modules/@angular/common/locales/global/en-SX.js",
		1023
	],
	"./global/en-SZ.js": [
		"./node_modules/@angular/common/locales/global/en-SZ.js",
		1024
	],
	"./global/en-TC.js": [
		"./node_modules/@angular/common/locales/global/en-TC.js",
		1025
	],
	"./global/en-TK.js": [
		"./node_modules/@angular/common/locales/global/en-TK.js",
		1026
	],
	"./global/en-TO.js": [
		"./node_modules/@angular/common/locales/global/en-TO.js",
		1027
	],
	"./global/en-TT.js": [
		"./node_modules/@angular/common/locales/global/en-TT.js",
		1028
	],
	"./global/en-TV.js": [
		"./node_modules/@angular/common/locales/global/en-TV.js",
		1029
	],
	"./global/en-TZ.js": [
		"./node_modules/@angular/common/locales/global/en-TZ.js",
		1030
	],
	"./global/en-UG.js": [
		"./node_modules/@angular/common/locales/global/en-UG.js",
		1031
	],
	"./global/en-UM.js": [
		"./node_modules/@angular/common/locales/global/en-UM.js",
		1032
	],
	"./global/en-US-POSIX.js": [
		"./node_modules/@angular/common/locales/global/en-US-POSIX.js",
		1033
	],
	"./global/en-VC.js": [
		"./node_modules/@angular/common/locales/global/en-VC.js",
		1034
	],
	"./global/en-VG.js": [
		"./node_modules/@angular/common/locales/global/en-VG.js",
		1035
	],
	"./global/en-VI.js": [
		"./node_modules/@angular/common/locales/global/en-VI.js",
		1036
	],
	"./global/en-VU.js": [
		"./node_modules/@angular/common/locales/global/en-VU.js",
		1037
	],
	"./global/en-WS.js": [
		"./node_modules/@angular/common/locales/global/en-WS.js",
		1038
	],
	"./global/en-ZA.js": [
		"./node_modules/@angular/common/locales/global/en-ZA.js",
		1039
	],
	"./global/en-ZM.js": [
		"./node_modules/@angular/common/locales/global/en-ZM.js",
		1040
	],
	"./global/en-ZW.js": [
		"./node_modules/@angular/common/locales/global/en-ZW.js",
		1041
	],
	"./global/en.js": [
		"./node_modules/@angular/common/locales/global/en.js",
		1042
	],
	"./global/eo.js": [
		"./node_modules/@angular/common/locales/global/eo.js",
		1043
	],
	"./global/es-419.js": [
		"./node_modules/@angular/common/locales/global/es-419.js",
		1044
	],
	"./global/es-AR.js": [
		"./node_modules/@angular/common/locales/global/es-AR.js",
		1045
	],
	"./global/es-BO.js": [
		"./node_modules/@angular/common/locales/global/es-BO.js",
		1046
	],
	"./global/es-BR.js": [
		"./node_modules/@angular/common/locales/global/es-BR.js",
		1047
	],
	"./global/es-BZ.js": [
		"./node_modules/@angular/common/locales/global/es-BZ.js",
		1048
	],
	"./global/es-CL.js": [
		"./node_modules/@angular/common/locales/global/es-CL.js",
		1049
	],
	"./global/es-CO.js": [
		"./node_modules/@angular/common/locales/global/es-CO.js",
		1050
	],
	"./global/es-CR.js": [
		"./node_modules/@angular/common/locales/global/es-CR.js",
		1051
	],
	"./global/es-CU.js": [
		"./node_modules/@angular/common/locales/global/es-CU.js",
		1052
	],
	"./global/es-DO.js": [
		"./node_modules/@angular/common/locales/global/es-DO.js",
		1053
	],
	"./global/es-EA.js": [
		"./node_modules/@angular/common/locales/global/es-EA.js",
		1054
	],
	"./global/es-EC.js": [
		"./node_modules/@angular/common/locales/global/es-EC.js",
		1055
	],
	"./global/es-GQ.js": [
		"./node_modules/@angular/common/locales/global/es-GQ.js",
		1056
	],
	"./global/es-GT.js": [
		"./node_modules/@angular/common/locales/global/es-GT.js",
		1057
	],
	"./global/es-HN.js": [
		"./node_modules/@angular/common/locales/global/es-HN.js",
		1058
	],
	"./global/es-IC.js": [
		"./node_modules/@angular/common/locales/global/es-IC.js",
		1059
	],
	"./global/es-MX.js": [
		"./node_modules/@angular/common/locales/global/es-MX.js",
		1060
	],
	"./global/es-NI.js": [
		"./node_modules/@angular/common/locales/global/es-NI.js",
		1061
	],
	"./global/es-PA.js": [
		"./node_modules/@angular/common/locales/global/es-PA.js",
		1062
	],
	"./global/es-PE.js": [
		"./node_modules/@angular/common/locales/global/es-PE.js",
		1063
	],
	"./global/es-PH.js": [
		"./node_modules/@angular/common/locales/global/es-PH.js",
		1064
	],
	"./global/es-PR.js": [
		"./node_modules/@angular/common/locales/global/es-PR.js",
		1065
	],
	"./global/es-PY.js": [
		"./node_modules/@angular/common/locales/global/es-PY.js",
		1066
	],
	"./global/es-SV.js": [
		"./node_modules/@angular/common/locales/global/es-SV.js",
		1067
	],
	"./global/es-US.js": [
		"./node_modules/@angular/common/locales/global/es-US.js",
		1068
	],
	"./global/es-UY.js": [
		"./node_modules/@angular/common/locales/global/es-UY.js",
		1069
	],
	"./global/es-VE.js": [
		"./node_modules/@angular/common/locales/global/es-VE.js",
		1070
	],
	"./global/es.js": [
		"./node_modules/@angular/common/locales/global/es.js",
		1071
	],
	"./global/et.js": [
		"./node_modules/@angular/common/locales/global/et.js",
		1072
	],
	"./global/eu.js": [
		"./node_modules/@angular/common/locales/global/eu.js",
		1073
	],
	"./global/ewo.js": [
		"./node_modules/@angular/common/locales/global/ewo.js",
		1074
	],
	"./global/fa-AF.js": [
		"./node_modules/@angular/common/locales/global/fa-AF.js",
		1075
	],
	"./global/fa.js": [
		"./node_modules/@angular/common/locales/global/fa.js",
		1076
	],
	"./global/ff-CM.js": [
		"./node_modules/@angular/common/locales/global/ff-CM.js",
		1077
	],
	"./global/ff-GN.js": [
		"./node_modules/@angular/common/locales/global/ff-GN.js",
		1078
	],
	"./global/ff-Latn-BF.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-BF.js",
		1079
	],
	"./global/ff-Latn-CM.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-CM.js",
		1080
	],
	"./global/ff-Latn-GH.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-GH.js",
		1081
	],
	"./global/ff-Latn-GM.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-GM.js",
		1082
	],
	"./global/ff-Latn-GN.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-GN.js",
		1083
	],
	"./global/ff-Latn-GW.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-GW.js",
		1084
	],
	"./global/ff-Latn-LR.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-LR.js",
		1085
	],
	"./global/ff-Latn-MR.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-MR.js",
		1086
	],
	"./global/ff-Latn-NE.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-NE.js",
		1087
	],
	"./global/ff-Latn-NG.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-NG.js",
		1088
	],
	"./global/ff-Latn-SL.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn-SL.js",
		1089
	],
	"./global/ff-Latn.js": [
		"./node_modules/@angular/common/locales/global/ff-Latn.js",
		1090
	],
	"./global/ff-MR.js": [
		"./node_modules/@angular/common/locales/global/ff-MR.js",
		1091
	],
	"./global/ff.js": [
		"./node_modules/@angular/common/locales/global/ff.js",
		1092
	],
	"./global/fi.js": [
		"./node_modules/@angular/common/locales/global/fi.js",
		1093
	],
	"./global/fil.js": [
		"./node_modules/@angular/common/locales/global/fil.js",
		1094
	],
	"./global/fo-DK.js": [
		"./node_modules/@angular/common/locales/global/fo-DK.js",
		1095
	],
	"./global/fo.js": [
		"./node_modules/@angular/common/locales/global/fo.js",
		1096
	],
	"./global/fr-BE.js": [
		"./node_modules/@angular/common/locales/global/fr-BE.js",
		1097
	],
	"./global/fr-BF.js": [
		"./node_modules/@angular/common/locales/global/fr-BF.js",
		1098
	],
	"./global/fr-BI.js": [
		"./node_modules/@angular/common/locales/global/fr-BI.js",
		1099
	],
	"./global/fr-BJ.js": [
		"./node_modules/@angular/common/locales/global/fr-BJ.js",
		1100
	],
	"./global/fr-BL.js": [
		"./node_modules/@angular/common/locales/global/fr-BL.js",
		1101
	],
	"./global/fr-CA.js": [
		"./node_modules/@angular/common/locales/global/fr-CA.js",
		1102
	],
	"./global/fr-CD.js": [
		"./node_modules/@angular/common/locales/global/fr-CD.js",
		1103
	],
	"./global/fr-CF.js": [
		"./node_modules/@angular/common/locales/global/fr-CF.js",
		1104
	],
	"./global/fr-CG.js": [
		"./node_modules/@angular/common/locales/global/fr-CG.js",
		1105
	],
	"./global/fr-CH.js": [
		"./node_modules/@angular/common/locales/global/fr-CH.js",
		1106
	],
	"./global/fr-CI.js": [
		"./node_modules/@angular/common/locales/global/fr-CI.js",
		1107
	],
	"./global/fr-CM.js": [
		"./node_modules/@angular/common/locales/global/fr-CM.js",
		1108
	],
	"./global/fr-DJ.js": [
		"./node_modules/@angular/common/locales/global/fr-DJ.js",
		1109
	],
	"./global/fr-DZ.js": [
		"./node_modules/@angular/common/locales/global/fr-DZ.js",
		1110
	],
	"./global/fr-GA.js": [
		"./node_modules/@angular/common/locales/global/fr-GA.js",
		1111
	],
	"./global/fr-GF.js": [
		"./node_modules/@angular/common/locales/global/fr-GF.js",
		1112
	],
	"./global/fr-GN.js": [
		"./node_modules/@angular/common/locales/global/fr-GN.js",
		1113
	],
	"./global/fr-GP.js": [
		"./node_modules/@angular/common/locales/global/fr-GP.js",
		1114
	],
	"./global/fr-GQ.js": [
		"./node_modules/@angular/common/locales/global/fr-GQ.js",
		1115
	],
	"./global/fr-HT.js": [
		"./node_modules/@angular/common/locales/global/fr-HT.js",
		1116
	],
	"./global/fr-KM.js": [
		"./node_modules/@angular/common/locales/global/fr-KM.js",
		1117
	],
	"./global/fr-LU.js": [
		"./node_modules/@angular/common/locales/global/fr-LU.js",
		1118
	],
	"./global/fr-MA.js": [
		"./node_modules/@angular/common/locales/global/fr-MA.js",
		1119
	],
	"./global/fr-MC.js": [
		"./node_modules/@angular/common/locales/global/fr-MC.js",
		1120
	],
	"./global/fr-MF.js": [
		"./node_modules/@angular/common/locales/global/fr-MF.js",
		1121
	],
	"./global/fr-MG.js": [
		"./node_modules/@angular/common/locales/global/fr-MG.js",
		1122
	],
	"./global/fr-ML.js": [
		"./node_modules/@angular/common/locales/global/fr-ML.js",
		1123
	],
	"./global/fr-MQ.js": [
		"./node_modules/@angular/common/locales/global/fr-MQ.js",
		1124
	],
	"./global/fr-MR.js": [
		"./node_modules/@angular/common/locales/global/fr-MR.js",
		1125
	],
	"./global/fr-MU.js": [
		"./node_modules/@angular/common/locales/global/fr-MU.js",
		1126
	],
	"./global/fr-NC.js": [
		"./node_modules/@angular/common/locales/global/fr-NC.js",
		1127
	],
	"./global/fr-NE.js": [
		"./node_modules/@angular/common/locales/global/fr-NE.js",
		1128
	],
	"./global/fr-PF.js": [
		"./node_modules/@angular/common/locales/global/fr-PF.js",
		1129
	],
	"./global/fr-PM.js": [
		"./node_modules/@angular/common/locales/global/fr-PM.js",
		1130
	],
	"./global/fr-RE.js": [
		"./node_modules/@angular/common/locales/global/fr-RE.js",
		1131
	],
	"./global/fr-RW.js": [
		"./node_modules/@angular/common/locales/global/fr-RW.js",
		1132
	],
	"./global/fr-SC.js": [
		"./node_modules/@angular/common/locales/global/fr-SC.js",
		1133
	],
	"./global/fr-SN.js": [
		"./node_modules/@angular/common/locales/global/fr-SN.js",
		1134
	],
	"./global/fr-SY.js": [
		"./node_modules/@angular/common/locales/global/fr-SY.js",
		1135
	],
	"./global/fr-TD.js": [
		"./node_modules/@angular/common/locales/global/fr-TD.js",
		1136
	],
	"./global/fr-TG.js": [
		"./node_modules/@angular/common/locales/global/fr-TG.js",
		1137
	],
	"./global/fr-TN.js": [
		"./node_modules/@angular/common/locales/global/fr-TN.js",
		1138
	],
	"./global/fr-VU.js": [
		"./node_modules/@angular/common/locales/global/fr-VU.js",
		1139
	],
	"./global/fr-WF.js": [
		"./node_modules/@angular/common/locales/global/fr-WF.js",
		1140
	],
	"./global/fr-YT.js": [
		"./node_modules/@angular/common/locales/global/fr-YT.js",
		1141
	],
	"./global/fr.js": [
		"./node_modules/@angular/common/locales/global/fr.js",
		1142
	],
	"./global/fur.js": [
		"./node_modules/@angular/common/locales/global/fur.js",
		1143
	],
	"./global/fy.js": [
		"./node_modules/@angular/common/locales/global/fy.js",
		1144
	],
	"./global/ga-GB.js": [
		"./node_modules/@angular/common/locales/global/ga-GB.js",
		1145
	],
	"./global/ga.js": [
		"./node_modules/@angular/common/locales/global/ga.js",
		1146
	],
	"./global/gd.js": [
		"./node_modules/@angular/common/locales/global/gd.js",
		1147
	],
	"./global/gl.js": [
		"./node_modules/@angular/common/locales/global/gl.js",
		1148
	],
	"./global/gsw-FR.js": [
		"./node_modules/@angular/common/locales/global/gsw-FR.js",
		1149
	],
	"./global/gsw-LI.js": [
		"./node_modules/@angular/common/locales/global/gsw-LI.js",
		1150
	],
	"./global/gsw.js": [
		"./node_modules/@angular/common/locales/global/gsw.js",
		1151
	],
	"./global/gu.js": [
		"./node_modules/@angular/common/locales/global/gu.js",
		1152
	],
	"./global/guz.js": [
		"./node_modules/@angular/common/locales/global/guz.js",
		1153
	],
	"./global/gv.js": [
		"./node_modules/@angular/common/locales/global/gv.js",
		1154
	],
	"./global/ha-GH.js": [
		"./node_modules/@angular/common/locales/global/ha-GH.js",
		1155
	],
	"./global/ha-NE.js": [
		"./node_modules/@angular/common/locales/global/ha-NE.js",
		1156
	],
	"./global/ha.js": [
		"./node_modules/@angular/common/locales/global/ha.js",
		1157
	],
	"./global/haw.js": [
		"./node_modules/@angular/common/locales/global/haw.js",
		1158
	],
	"./global/he.js": [
		"./node_modules/@angular/common/locales/global/he.js",
		1159
	],
	"./global/hi.js": [
		"./node_modules/@angular/common/locales/global/hi.js",
		1160
	],
	"./global/hr-BA.js": [
		"./node_modules/@angular/common/locales/global/hr-BA.js",
		1161
	],
	"./global/hr.js": [
		"./node_modules/@angular/common/locales/global/hr.js",
		1162
	],
	"./global/hsb.js": [
		"./node_modules/@angular/common/locales/global/hsb.js",
		1163
	],
	"./global/hu.js": [
		"./node_modules/@angular/common/locales/global/hu.js",
		1164
	],
	"./global/hy.js": [
		"./node_modules/@angular/common/locales/global/hy.js",
		1165
	],
	"./global/ia.js": [
		"./node_modules/@angular/common/locales/global/ia.js",
		1166
	],
	"./global/id.js": [
		"./node_modules/@angular/common/locales/global/id.js",
		1167
	],
	"./global/ig.js": [
		"./node_modules/@angular/common/locales/global/ig.js",
		1168
	],
	"./global/ii.js": [
		"./node_modules/@angular/common/locales/global/ii.js",
		1169
	],
	"./global/is.js": [
		"./node_modules/@angular/common/locales/global/is.js",
		1170
	],
	"./global/it-CH.js": [
		"./node_modules/@angular/common/locales/global/it-CH.js",
		1171
	],
	"./global/it-SM.js": [
		"./node_modules/@angular/common/locales/global/it-SM.js",
		1172
	],
	"./global/it-VA.js": [
		"./node_modules/@angular/common/locales/global/it-VA.js",
		1173
	],
	"./global/it.js": [
		"./node_modules/@angular/common/locales/global/it.js",
		1174
	],
	"./global/ja.js": [
		"./node_modules/@angular/common/locales/global/ja.js",
		1175
	],
	"./global/jgo.js": [
		"./node_modules/@angular/common/locales/global/jgo.js",
		1176
	],
	"./global/jmc.js": [
		"./node_modules/@angular/common/locales/global/jmc.js",
		1177
	],
	"./global/jv.js": [
		"./node_modules/@angular/common/locales/global/jv.js",
		1178
	],
	"./global/ka.js": [
		"./node_modules/@angular/common/locales/global/ka.js",
		1179
	],
	"./global/kab.js": [
		"./node_modules/@angular/common/locales/global/kab.js",
		1180
	],
	"./global/kam.js": [
		"./node_modules/@angular/common/locales/global/kam.js",
		1181
	],
	"./global/kde.js": [
		"./node_modules/@angular/common/locales/global/kde.js",
		1182
	],
	"./global/kea.js": [
		"./node_modules/@angular/common/locales/global/kea.js",
		1183
	],
	"./global/khq.js": [
		"./node_modules/@angular/common/locales/global/khq.js",
		1184
	],
	"./global/ki.js": [
		"./node_modules/@angular/common/locales/global/ki.js",
		1185
	],
	"./global/kk.js": [
		"./node_modules/@angular/common/locales/global/kk.js",
		1186
	],
	"./global/kkj.js": [
		"./node_modules/@angular/common/locales/global/kkj.js",
		1187
	],
	"./global/kl.js": [
		"./node_modules/@angular/common/locales/global/kl.js",
		1188
	],
	"./global/kln.js": [
		"./node_modules/@angular/common/locales/global/kln.js",
		1189
	],
	"./global/km.js": [
		"./node_modules/@angular/common/locales/global/km.js",
		1190
	],
	"./global/kn.js": [
		"./node_modules/@angular/common/locales/global/kn.js",
		1191
	],
	"./global/ko-KP.js": [
		"./node_modules/@angular/common/locales/global/ko-KP.js",
		1192
	],
	"./global/ko.js": [
		"./node_modules/@angular/common/locales/global/ko.js",
		1193
	],
	"./global/kok.js": [
		"./node_modules/@angular/common/locales/global/kok.js",
		1194
	],
	"./global/ks.js": [
		"./node_modules/@angular/common/locales/global/ks.js",
		1195
	],
	"./global/ksb.js": [
		"./node_modules/@angular/common/locales/global/ksb.js",
		1196
	],
	"./global/ksf.js": [
		"./node_modules/@angular/common/locales/global/ksf.js",
		1197
	],
	"./global/ksh.js": [
		"./node_modules/@angular/common/locales/global/ksh.js",
		1198
	],
	"./global/ku.js": [
		"./node_modules/@angular/common/locales/global/ku.js",
		1199
	],
	"./global/kw.js": [
		"./node_modules/@angular/common/locales/global/kw.js",
		1200
	],
	"./global/ky.js": [
		"./node_modules/@angular/common/locales/global/ky.js",
		1201
	],
	"./global/lag.js": [
		"./node_modules/@angular/common/locales/global/lag.js",
		1202
	],
	"./global/lb.js": [
		"./node_modules/@angular/common/locales/global/lb.js",
		1203
	],
	"./global/lg.js": [
		"./node_modules/@angular/common/locales/global/lg.js",
		1204
	],
	"./global/lkt.js": [
		"./node_modules/@angular/common/locales/global/lkt.js",
		1205
	],
	"./global/ln-AO.js": [
		"./node_modules/@angular/common/locales/global/ln-AO.js",
		1206
	],
	"./global/ln-CF.js": [
		"./node_modules/@angular/common/locales/global/ln-CF.js",
		1207
	],
	"./global/ln-CG.js": [
		"./node_modules/@angular/common/locales/global/ln-CG.js",
		1208
	],
	"./global/ln.js": [
		"./node_modules/@angular/common/locales/global/ln.js",
		1209
	],
	"./global/lo.js": [
		"./node_modules/@angular/common/locales/global/lo.js",
		1210
	],
	"./global/lrc-IQ.js": [
		"./node_modules/@angular/common/locales/global/lrc-IQ.js",
		1211
	],
	"./global/lrc.js": [
		"./node_modules/@angular/common/locales/global/lrc.js",
		1212
	],
	"./global/lt.js": [
		"./node_modules/@angular/common/locales/global/lt.js",
		1213
	],
	"./global/lu.js": [
		"./node_modules/@angular/common/locales/global/lu.js",
		1214
	],
	"./global/luo.js": [
		"./node_modules/@angular/common/locales/global/luo.js",
		1215
	],
	"./global/luy.js": [
		"./node_modules/@angular/common/locales/global/luy.js",
		1216
	],
	"./global/lv.js": [
		"./node_modules/@angular/common/locales/global/lv.js",
		1217
	],
	"./global/mas-TZ.js": [
		"./node_modules/@angular/common/locales/global/mas-TZ.js",
		1218
	],
	"./global/mas.js": [
		"./node_modules/@angular/common/locales/global/mas.js",
		1219
	],
	"./global/mer.js": [
		"./node_modules/@angular/common/locales/global/mer.js",
		1220
	],
	"./global/mfe.js": [
		"./node_modules/@angular/common/locales/global/mfe.js",
		1221
	],
	"./global/mg.js": [
		"./node_modules/@angular/common/locales/global/mg.js",
		1222
	],
	"./global/mgh.js": [
		"./node_modules/@angular/common/locales/global/mgh.js",
		1223
	],
	"./global/mgo.js": [
		"./node_modules/@angular/common/locales/global/mgo.js",
		1224
	],
	"./global/mi.js": [
		"./node_modules/@angular/common/locales/global/mi.js",
		1225
	],
	"./global/mk.js": [
		"./node_modules/@angular/common/locales/global/mk.js",
		1226
	],
	"./global/ml.js": [
		"./node_modules/@angular/common/locales/global/ml.js",
		1227
	],
	"./global/mn.js": [
		"./node_modules/@angular/common/locales/global/mn.js",
		1228
	],
	"./global/mr.js": [
		"./node_modules/@angular/common/locales/global/mr.js",
		1229
	],
	"./global/ms-BN.js": [
		"./node_modules/@angular/common/locales/global/ms-BN.js",
		1230
	],
	"./global/ms-SG.js": [
		"./node_modules/@angular/common/locales/global/ms-SG.js",
		1231
	],
	"./global/ms.js": [
		"./node_modules/@angular/common/locales/global/ms.js",
		1232
	],
	"./global/mt.js": [
		"./node_modules/@angular/common/locales/global/mt.js",
		1233
	],
	"./global/mua.js": [
		"./node_modules/@angular/common/locales/global/mua.js",
		1234
	],
	"./global/my.js": [
		"./node_modules/@angular/common/locales/global/my.js",
		1235
	],
	"./global/mzn.js": [
		"./node_modules/@angular/common/locales/global/mzn.js",
		1236
	],
	"./global/naq.js": [
		"./node_modules/@angular/common/locales/global/naq.js",
		1237
	],
	"./global/nb-SJ.js": [
		"./node_modules/@angular/common/locales/global/nb-SJ.js",
		1238
	],
	"./global/nb.js": [
		"./node_modules/@angular/common/locales/global/nb.js",
		1239
	],
	"./global/nd.js": [
		"./node_modules/@angular/common/locales/global/nd.js",
		1240
	],
	"./global/nds-NL.js": [
		"./node_modules/@angular/common/locales/global/nds-NL.js",
		1241
	],
	"./global/nds.js": [
		"./node_modules/@angular/common/locales/global/nds.js",
		1242
	],
	"./global/ne-IN.js": [
		"./node_modules/@angular/common/locales/global/ne-IN.js",
		1243
	],
	"./global/ne.js": [
		"./node_modules/@angular/common/locales/global/ne.js",
		1244
	],
	"./global/nl-AW.js": [
		"./node_modules/@angular/common/locales/global/nl-AW.js",
		1245
	],
	"./global/nl-BE.js": [
		"./node_modules/@angular/common/locales/global/nl-BE.js",
		1246
	],
	"./global/nl-BQ.js": [
		"./node_modules/@angular/common/locales/global/nl-BQ.js",
		1247
	],
	"./global/nl-CW.js": [
		"./node_modules/@angular/common/locales/global/nl-CW.js",
		1248
	],
	"./global/nl-SR.js": [
		"./node_modules/@angular/common/locales/global/nl-SR.js",
		1249
	],
	"./global/nl-SX.js": [
		"./node_modules/@angular/common/locales/global/nl-SX.js",
		1250
	],
	"./global/nl.js": [
		"./node_modules/@angular/common/locales/global/nl.js",
		1251
	],
	"./global/nmg.js": [
		"./node_modules/@angular/common/locales/global/nmg.js",
		1252
	],
	"./global/nn.js": [
		"./node_modules/@angular/common/locales/global/nn.js",
		1253
	],
	"./global/nnh.js": [
		"./node_modules/@angular/common/locales/global/nnh.js",
		1254
	],
	"./global/nus.js": [
		"./node_modules/@angular/common/locales/global/nus.js",
		1255
	],
	"./global/nyn.js": [
		"./node_modules/@angular/common/locales/global/nyn.js",
		1256
	],
	"./global/om-KE.js": [
		"./node_modules/@angular/common/locales/global/om-KE.js",
		1257
	],
	"./global/om.js": [
		"./node_modules/@angular/common/locales/global/om.js",
		1258
	],
	"./global/or.js": [
		"./node_modules/@angular/common/locales/global/or.js",
		1259
	],
	"./global/os-RU.js": [
		"./node_modules/@angular/common/locales/global/os-RU.js",
		1260
	],
	"./global/os.js": [
		"./node_modules/@angular/common/locales/global/os.js",
		1261
	],
	"./global/pa-Arab.js": [
		"./node_modules/@angular/common/locales/global/pa-Arab.js",
		1262
	],
	"./global/pa-Guru.js": [
		"./node_modules/@angular/common/locales/global/pa-Guru.js",
		1263
	],
	"./global/pa.js": [
		"./node_modules/@angular/common/locales/global/pa.js",
		1264
	],
	"./global/pl.js": [
		"./node_modules/@angular/common/locales/global/pl.js",
		1265
	],
	"./global/prg.js": [
		"./node_modules/@angular/common/locales/global/prg.js",
		1266
	],
	"./global/ps-PK.js": [
		"./node_modules/@angular/common/locales/global/ps-PK.js",
		1267
	],
	"./global/ps.js": [
		"./node_modules/@angular/common/locales/global/ps.js",
		1268
	],
	"./global/pt-AO.js": [
		"./node_modules/@angular/common/locales/global/pt-AO.js",
		1269
	],
	"./global/pt-CH.js": [
		"./node_modules/@angular/common/locales/global/pt-CH.js",
		1270
	],
	"./global/pt-CV.js": [
		"./node_modules/@angular/common/locales/global/pt-CV.js",
		1271
	],
	"./global/pt-GQ.js": [
		"./node_modules/@angular/common/locales/global/pt-GQ.js",
		1272
	],
	"./global/pt-GW.js": [
		"./node_modules/@angular/common/locales/global/pt-GW.js",
		1273
	],
	"./global/pt-LU.js": [
		"./node_modules/@angular/common/locales/global/pt-LU.js",
		1274
	],
	"./global/pt-MO.js": [
		"./node_modules/@angular/common/locales/global/pt-MO.js",
		1275
	],
	"./global/pt-MZ.js": [
		"./node_modules/@angular/common/locales/global/pt-MZ.js",
		1276
	],
	"./global/pt-PT.js": [
		"./node_modules/@angular/common/locales/global/pt-PT.js",
		1277
	],
	"./global/pt-ST.js": [
		"./node_modules/@angular/common/locales/global/pt-ST.js",
		1278
	],
	"./global/pt-TL.js": [
		"./node_modules/@angular/common/locales/global/pt-TL.js",
		1279
	],
	"./global/pt.js": [
		"./node_modules/@angular/common/locales/global/pt.js",
		1280
	],
	"./global/qu-BO.js": [
		"./node_modules/@angular/common/locales/global/qu-BO.js",
		1281
	],
	"./global/qu-EC.js": [
		"./node_modules/@angular/common/locales/global/qu-EC.js",
		1282
	],
	"./global/qu.js": [
		"./node_modules/@angular/common/locales/global/qu.js",
		1283
	],
	"./global/rm.js": [
		"./node_modules/@angular/common/locales/global/rm.js",
		1284
	],
	"./global/rn.js": [
		"./node_modules/@angular/common/locales/global/rn.js",
		1285
	],
	"./global/ro-MD.js": [
		"./node_modules/@angular/common/locales/global/ro-MD.js",
		1286
	],
	"./global/ro.js": [
		"./node_modules/@angular/common/locales/global/ro.js",
		1287
	],
	"./global/rof.js": [
		"./node_modules/@angular/common/locales/global/rof.js",
		1288
	],
	"./global/root.js": [
		"./node_modules/@angular/common/locales/global/root.js",
		1289
	],
	"./global/ru-BY.js": [
		"./node_modules/@angular/common/locales/global/ru-BY.js",
		1290
	],
	"./global/ru-KG.js": [
		"./node_modules/@angular/common/locales/global/ru-KG.js",
		1291
	],
	"./global/ru-KZ.js": [
		"./node_modules/@angular/common/locales/global/ru-KZ.js",
		1292
	],
	"./global/ru-MD.js": [
		"./node_modules/@angular/common/locales/global/ru-MD.js",
		1293
	],
	"./global/ru-UA.js": [
		"./node_modules/@angular/common/locales/global/ru-UA.js",
		1294
	],
	"./global/ru.js": [
		"./node_modules/@angular/common/locales/global/ru.js",
		1295
	],
	"./global/rw.js": [
		"./node_modules/@angular/common/locales/global/rw.js",
		1296
	],
	"./global/rwk.js": [
		"./node_modules/@angular/common/locales/global/rwk.js",
		1297
	],
	"./global/sah.js": [
		"./node_modules/@angular/common/locales/global/sah.js",
		1298
	],
	"./global/saq.js": [
		"./node_modules/@angular/common/locales/global/saq.js",
		1299
	],
	"./global/sbp.js": [
		"./node_modules/@angular/common/locales/global/sbp.js",
		1300
	],
	"./global/sd.js": [
		"./node_modules/@angular/common/locales/global/sd.js",
		1301
	],
	"./global/se-FI.js": [
		"./node_modules/@angular/common/locales/global/se-FI.js",
		1302
	],
	"./global/se-SE.js": [
		"./node_modules/@angular/common/locales/global/se-SE.js",
		1303
	],
	"./global/se.js": [
		"./node_modules/@angular/common/locales/global/se.js",
		1304
	],
	"./global/seh.js": [
		"./node_modules/@angular/common/locales/global/seh.js",
		1305
	],
	"./global/ses.js": [
		"./node_modules/@angular/common/locales/global/ses.js",
		1306
	],
	"./global/sg.js": [
		"./node_modules/@angular/common/locales/global/sg.js",
		1307
	],
	"./global/shi-Latn.js": [
		"./node_modules/@angular/common/locales/global/shi-Latn.js",
		1308
	],
	"./global/shi-Tfng.js": [
		"./node_modules/@angular/common/locales/global/shi-Tfng.js",
		1309
	],
	"./global/shi.js": [
		"./node_modules/@angular/common/locales/global/shi.js",
		1310
	],
	"./global/si.js": [
		"./node_modules/@angular/common/locales/global/si.js",
		1311
	],
	"./global/sk.js": [
		"./node_modules/@angular/common/locales/global/sk.js",
		1312
	],
	"./global/sl.js": [
		"./node_modules/@angular/common/locales/global/sl.js",
		1313
	],
	"./global/smn.js": [
		"./node_modules/@angular/common/locales/global/smn.js",
		1314
	],
	"./global/sn.js": [
		"./node_modules/@angular/common/locales/global/sn.js",
		1315
	],
	"./global/so-DJ.js": [
		"./node_modules/@angular/common/locales/global/so-DJ.js",
		1316
	],
	"./global/so-ET.js": [
		"./node_modules/@angular/common/locales/global/so-ET.js",
		1317
	],
	"./global/so-KE.js": [
		"./node_modules/@angular/common/locales/global/so-KE.js",
		1318
	],
	"./global/so.js": [
		"./node_modules/@angular/common/locales/global/so.js",
		1319
	],
	"./global/sq-MK.js": [
		"./node_modules/@angular/common/locales/global/sq-MK.js",
		1320
	],
	"./global/sq-XK.js": [
		"./node_modules/@angular/common/locales/global/sq-XK.js",
		1321
	],
	"./global/sq.js": [
		"./node_modules/@angular/common/locales/global/sq.js",
		1322
	],
	"./global/sr-Cyrl-BA.js": [
		"./node_modules/@angular/common/locales/global/sr-Cyrl-BA.js",
		1323
	],
	"./global/sr-Cyrl-ME.js": [
		"./node_modules/@angular/common/locales/global/sr-Cyrl-ME.js",
		1324
	],
	"./global/sr-Cyrl-XK.js": [
		"./node_modules/@angular/common/locales/global/sr-Cyrl-XK.js",
		1325
	],
	"./global/sr-Cyrl.js": [
		"./node_modules/@angular/common/locales/global/sr-Cyrl.js",
		1326
	],
	"./global/sr-Latn-BA.js": [
		"./node_modules/@angular/common/locales/global/sr-Latn-BA.js",
		1327
	],
	"./global/sr-Latn-ME.js": [
		"./node_modules/@angular/common/locales/global/sr-Latn-ME.js",
		1328
	],
	"./global/sr-Latn-XK.js": [
		"./node_modules/@angular/common/locales/global/sr-Latn-XK.js",
		1329
	],
	"./global/sr-Latn.js": [
		"./node_modules/@angular/common/locales/global/sr-Latn.js",
		1330
	],
	"./global/sr.js": [
		"./node_modules/@angular/common/locales/global/sr.js",
		1331
	],
	"./global/sv-AX.js": [
		"./node_modules/@angular/common/locales/global/sv-AX.js",
		1332
	],
	"./global/sv-FI.js": [
		"./node_modules/@angular/common/locales/global/sv-FI.js",
		1333
	],
	"./global/sv.js": [
		"./node_modules/@angular/common/locales/global/sv.js",
		1334
	],
	"./global/sw-CD.js": [
		"./node_modules/@angular/common/locales/global/sw-CD.js",
		1335
	],
	"./global/sw-KE.js": [
		"./node_modules/@angular/common/locales/global/sw-KE.js",
		1336
	],
	"./global/sw-UG.js": [
		"./node_modules/@angular/common/locales/global/sw-UG.js",
		1337
	],
	"./global/sw.js": [
		"./node_modules/@angular/common/locales/global/sw.js",
		1338
	],
	"./global/ta-LK.js": [
		"./node_modules/@angular/common/locales/global/ta-LK.js",
		1339
	],
	"./global/ta-MY.js": [
		"./node_modules/@angular/common/locales/global/ta-MY.js",
		1340
	],
	"./global/ta-SG.js": [
		"./node_modules/@angular/common/locales/global/ta-SG.js",
		1341
	],
	"./global/ta.js": [
		"./node_modules/@angular/common/locales/global/ta.js",
		1342
	],
	"./global/te.js": [
		"./node_modules/@angular/common/locales/global/te.js",
		1343
	],
	"./global/teo-KE.js": [
		"./node_modules/@angular/common/locales/global/teo-KE.js",
		1344
	],
	"./global/teo.js": [
		"./node_modules/@angular/common/locales/global/teo.js",
		1345
	],
	"./global/tg.js": [
		"./node_modules/@angular/common/locales/global/tg.js",
		1346
	],
	"./global/th.js": [
		"./node_modules/@angular/common/locales/global/th.js",
		1347
	],
	"./global/ti-ER.js": [
		"./node_modules/@angular/common/locales/global/ti-ER.js",
		1348
	],
	"./global/ti.js": [
		"./node_modules/@angular/common/locales/global/ti.js",
		1349
	],
	"./global/tk.js": [
		"./node_modules/@angular/common/locales/global/tk.js",
		1350
	],
	"./global/to.js": [
		"./node_modules/@angular/common/locales/global/to.js",
		1351
	],
	"./global/tr-CY.js": [
		"./node_modules/@angular/common/locales/global/tr-CY.js",
		1352
	],
	"./global/tr.js": [
		"./node_modules/@angular/common/locales/global/tr.js",
		1353
	],
	"./global/tt.js": [
		"./node_modules/@angular/common/locales/global/tt.js",
		1354
	],
	"./global/twq.js": [
		"./node_modules/@angular/common/locales/global/twq.js",
		1355
	],
	"./global/tzm.js": [
		"./node_modules/@angular/common/locales/global/tzm.js",
		1356
	],
	"./global/ug.js": [
		"./node_modules/@angular/common/locales/global/ug.js",
		1357
	],
	"./global/uk.js": [
		"./node_modules/@angular/common/locales/global/uk.js",
		1358
	],
	"./global/ur-IN.js": [
		"./node_modules/@angular/common/locales/global/ur-IN.js",
		1359
	],
	"./global/ur.js": [
		"./node_modules/@angular/common/locales/global/ur.js",
		1360
	],
	"./global/uz-Arab.js": [
		"./node_modules/@angular/common/locales/global/uz-Arab.js",
		1361
	],
	"./global/uz-Cyrl.js": [
		"./node_modules/@angular/common/locales/global/uz-Cyrl.js",
		1362
	],
	"./global/uz-Latn.js": [
		"./node_modules/@angular/common/locales/global/uz-Latn.js",
		1363
	],
	"./global/uz.js": [
		"./node_modules/@angular/common/locales/global/uz.js",
		1364
	],
	"./global/vai-Latn.js": [
		"./node_modules/@angular/common/locales/global/vai-Latn.js",
		1365
	],
	"./global/vai-Vaii.js": [
		"./node_modules/@angular/common/locales/global/vai-Vaii.js",
		1366
	],
	"./global/vai.js": [
		"./node_modules/@angular/common/locales/global/vai.js",
		1367
	],
	"./global/vi.js": [
		"./node_modules/@angular/common/locales/global/vi.js",
		1368
	],
	"./global/vo.js": [
		"./node_modules/@angular/common/locales/global/vo.js",
		1369
	],
	"./global/vun.js": [
		"./node_modules/@angular/common/locales/global/vun.js",
		1370
	],
	"./global/wae.js": [
		"./node_modules/@angular/common/locales/global/wae.js",
		1371
	],
	"./global/wo.js": [
		"./node_modules/@angular/common/locales/global/wo.js",
		1372
	],
	"./global/xh.js": [
		"./node_modules/@angular/common/locales/global/xh.js",
		1373
	],
	"./global/xog.js": [
		"./node_modules/@angular/common/locales/global/xog.js",
		1374
	],
	"./global/yav.js": [
		"./node_modules/@angular/common/locales/global/yav.js",
		1375
	],
	"./global/yi.js": [
		"./node_modules/@angular/common/locales/global/yi.js",
		1376
	],
	"./global/yo-BJ.js": [
		"./node_modules/@angular/common/locales/global/yo-BJ.js",
		1377
	],
	"./global/yo.js": [
		"./node_modules/@angular/common/locales/global/yo.js",
		1378
	],
	"./global/yue-Hans.js": [
		"./node_modules/@angular/common/locales/global/yue-Hans.js",
		1379
	],
	"./global/yue-Hant.js": [
		"./node_modules/@angular/common/locales/global/yue-Hant.js",
		1380
	],
	"./global/yue.js": [
		"./node_modules/@angular/common/locales/global/yue.js",
		1381
	],
	"./global/zgh.js": [
		"./node_modules/@angular/common/locales/global/zgh.js",
		1382
	],
	"./global/zh-Hans-HK.js": [
		"./node_modules/@angular/common/locales/global/zh-Hans-HK.js",
		1383
	],
	"./global/zh-Hans-MO.js": [
		"./node_modules/@angular/common/locales/global/zh-Hans-MO.js",
		1384
	],
	"./global/zh-Hans-SG.js": [
		"./node_modules/@angular/common/locales/global/zh-Hans-SG.js",
		1385
	],
	"./global/zh-Hans.js": [
		"./node_modules/@angular/common/locales/global/zh-Hans.js",
		1386
	],
	"./global/zh-Hant-HK.js": [
		"./node_modules/@angular/common/locales/global/zh-Hant-HK.js",
		1387
	],
	"./global/zh-Hant-MO.js": [
		"./node_modules/@angular/common/locales/global/zh-Hant-MO.js",
		1388
	],
	"./global/zh-Hant.js": [
		"./node_modules/@angular/common/locales/global/zh-Hant.js",
		1389
	],
	"./global/zh.js": [
		"./node_modules/@angular/common/locales/global/zh.js",
		1390
	],
	"./global/zu.js": [
		"./node_modules/@angular/common/locales/global/zu.js",
		1391
	],
	"./gsw-FR.js": [
		"./node_modules/@angular/common/locales/gsw-FR.js",
		1392
	],
	"./gsw-LI.js": [
		"./node_modules/@angular/common/locales/gsw-LI.js",
		1393
	],
	"./gsw.js": [
		"./node_modules/@angular/common/locales/gsw.js",
		1394
	],
	"./gu.js": [
		"./node_modules/@angular/common/locales/gu.js",
		1395
	],
	"./guz.js": [
		"./node_modules/@angular/common/locales/guz.js",
		1396
	],
	"./gv.js": [
		"./node_modules/@angular/common/locales/gv.js",
		1397
	],
	"./ha-GH.js": [
		"./node_modules/@angular/common/locales/ha-GH.js",
		1398
	],
	"./ha-NE.js": [
		"./node_modules/@angular/common/locales/ha-NE.js",
		1399
	],
	"./ha.js": [
		"./node_modules/@angular/common/locales/ha.js",
		1400
	],
	"./haw.js": [
		"./node_modules/@angular/common/locales/haw.js",
		1401
	],
	"./he.js": [
		"./node_modules/@angular/common/locales/he.js",
		1402
	],
	"./hi.js": [
		"./node_modules/@angular/common/locales/hi.js",
		1403
	],
	"./hr-BA.js": [
		"./node_modules/@angular/common/locales/hr-BA.js",
		1404
	],
	"./hr.js": [
		"./node_modules/@angular/common/locales/hr.js",
		1405
	],
	"./hsb.js": [
		"./node_modules/@angular/common/locales/hsb.js",
		1406
	],
	"./hu.js": [
		"./node_modules/@angular/common/locales/hu.js",
		1407
	],
	"./hy.js": [
		"./node_modules/@angular/common/locales/hy.js",
		1408
	],
	"./ia.js": [
		"./node_modules/@angular/common/locales/ia.js",
		1409
	],
	"./id.js": [
		"./node_modules/@angular/common/locales/id.js",
		1410
	],
	"./ig.js": [
		"./node_modules/@angular/common/locales/ig.js",
		1411
	],
	"./ii.js": [
		"./node_modules/@angular/common/locales/ii.js",
		1412
	],
	"./is.js": [
		"./node_modules/@angular/common/locales/is.js",
		1413
	],
	"./it-CH.js": [
		"./node_modules/@angular/common/locales/it-CH.js",
		1414
	],
	"./it-SM.js": [
		"./node_modules/@angular/common/locales/it-SM.js",
		1415
	],
	"./it-VA.js": [
		"./node_modules/@angular/common/locales/it-VA.js",
		1416
	],
	"./it.js": [
		"./node_modules/@angular/common/locales/it.js",
		1417
	],
	"./ja.js": [
		"./node_modules/@angular/common/locales/ja.js",
		1418
	],
	"./jgo.js": [
		"./node_modules/@angular/common/locales/jgo.js",
		1419
	],
	"./jmc.js": [
		"./node_modules/@angular/common/locales/jmc.js",
		1420
	],
	"./jv.js": [
		"./node_modules/@angular/common/locales/jv.js",
		1421
	],
	"./ka.js": [
		"./node_modules/@angular/common/locales/ka.js",
		1422
	],
	"./kab.js": [
		"./node_modules/@angular/common/locales/kab.js",
		1423
	],
	"./kam.js": [
		"./node_modules/@angular/common/locales/kam.js",
		1424
	],
	"./kde.js": [
		"./node_modules/@angular/common/locales/kde.js",
		1425
	],
	"./kea.js": [
		"./node_modules/@angular/common/locales/kea.js",
		1426
	],
	"./khq.js": [
		"./node_modules/@angular/common/locales/khq.js",
		1427
	],
	"./ki.js": [
		"./node_modules/@angular/common/locales/ki.js",
		1428
	],
	"./kk.js": [
		"./node_modules/@angular/common/locales/kk.js",
		1429
	],
	"./kkj.js": [
		"./node_modules/@angular/common/locales/kkj.js",
		1430
	],
	"./kl.js": [
		"./node_modules/@angular/common/locales/kl.js",
		1431
	],
	"./kln.js": [
		"./node_modules/@angular/common/locales/kln.js",
		1432
	],
	"./km.js": [
		"./node_modules/@angular/common/locales/km.js",
		1433
	],
	"./kn.js": [
		"./node_modules/@angular/common/locales/kn.js",
		1434
	],
	"./ko-KP.js": [
		"./node_modules/@angular/common/locales/ko-KP.js",
		1435
	],
	"./ko.js": [
		"./node_modules/@angular/common/locales/ko.js",
		1436
	],
	"./kok.js": [
		"./node_modules/@angular/common/locales/kok.js",
		1437
	],
	"./ks.js": [
		"./node_modules/@angular/common/locales/ks.js",
		1438
	],
	"./ksb.js": [
		"./node_modules/@angular/common/locales/ksb.js",
		1439
	],
	"./ksf.js": [
		"./node_modules/@angular/common/locales/ksf.js",
		1440
	],
	"./ksh.js": [
		"./node_modules/@angular/common/locales/ksh.js",
		1441
	],
	"./ku.js": [
		"./node_modules/@angular/common/locales/ku.js",
		1442
	],
	"./kw.js": [
		"./node_modules/@angular/common/locales/kw.js",
		1443
	],
	"./ky.js": [
		"./node_modules/@angular/common/locales/ky.js",
		1444
	],
	"./lag.js": [
		"./node_modules/@angular/common/locales/lag.js",
		1445
	],
	"./lb.js": [
		"./node_modules/@angular/common/locales/lb.js",
		1446
	],
	"./lg.js": [
		"./node_modules/@angular/common/locales/lg.js",
		1447
	],
	"./lkt.js": [
		"./node_modules/@angular/common/locales/lkt.js",
		1448
	],
	"./ln-AO.js": [
		"./node_modules/@angular/common/locales/ln-AO.js",
		1449
	],
	"./ln-CF.js": [
		"./node_modules/@angular/common/locales/ln-CF.js",
		1450
	],
	"./ln-CG.js": [
		"./node_modules/@angular/common/locales/ln-CG.js",
		1451
	],
	"./ln.js": [
		"./node_modules/@angular/common/locales/ln.js",
		1452
	],
	"./lo.js": [
		"./node_modules/@angular/common/locales/lo.js",
		1453
	],
	"./lrc-IQ.js": [
		"./node_modules/@angular/common/locales/lrc-IQ.js",
		1454
	],
	"./lrc.js": [
		"./node_modules/@angular/common/locales/lrc.js",
		1455
	],
	"./lt.js": [
		"./node_modules/@angular/common/locales/lt.js",
		1456
	],
	"./lu.js": [
		"./node_modules/@angular/common/locales/lu.js",
		1457
	],
	"./luo.js": [
		"./node_modules/@angular/common/locales/luo.js",
		1458
	],
	"./luy.js": [
		"./node_modules/@angular/common/locales/luy.js",
		1459
	],
	"./lv.js": [
		"./node_modules/@angular/common/locales/lv.js",
		1460
	],
	"./mas-TZ.js": [
		"./node_modules/@angular/common/locales/mas-TZ.js",
		1461
	],
	"./mas.js": [
		"./node_modules/@angular/common/locales/mas.js",
		1462
	],
	"./mer.js": [
		"./node_modules/@angular/common/locales/mer.js",
		1463
	],
	"./mfe.js": [
		"./node_modules/@angular/common/locales/mfe.js",
		1464
	],
	"./mg.js": [
		"./node_modules/@angular/common/locales/mg.js",
		1465
	],
	"./mgh.js": [
		"./node_modules/@angular/common/locales/mgh.js",
		1466
	],
	"./mgo.js": [
		"./node_modules/@angular/common/locales/mgo.js",
		1467
	],
	"./mi.js": [
		"./node_modules/@angular/common/locales/mi.js",
		1468
	],
	"./mk.js": [
		"./node_modules/@angular/common/locales/mk.js",
		1469
	],
	"./ml.js": [
		"./node_modules/@angular/common/locales/ml.js",
		1470
	],
	"./mn.js": [
		"./node_modules/@angular/common/locales/mn.js",
		1471
	],
	"./mr.js": [
		"./node_modules/@angular/common/locales/mr.js",
		1472
	],
	"./ms-BN.js": [
		"./node_modules/@angular/common/locales/ms-BN.js",
		1473
	],
	"./ms-SG.js": [
		"./node_modules/@angular/common/locales/ms-SG.js",
		1474
	],
	"./ms.js": [
		"./node_modules/@angular/common/locales/ms.js",
		1475
	],
	"./mt.js": [
		"./node_modules/@angular/common/locales/mt.js",
		1476
	],
	"./mua.js": [
		"./node_modules/@angular/common/locales/mua.js",
		1477
	],
	"./my.js": [
		"./node_modules/@angular/common/locales/my.js",
		1478
	],
	"./mzn.js": [
		"./node_modules/@angular/common/locales/mzn.js",
		1479
	],
	"./naq.js": [
		"./node_modules/@angular/common/locales/naq.js",
		1480
	],
	"./nb-SJ.js": [
		"./node_modules/@angular/common/locales/nb-SJ.js",
		1481
	],
	"./nb.js": [
		"./node_modules/@angular/common/locales/nb.js",
		1482
	],
	"./nd.js": [
		"./node_modules/@angular/common/locales/nd.js",
		1483
	],
	"./nds-NL.js": [
		"./node_modules/@angular/common/locales/nds-NL.js",
		1484
	],
	"./nds.js": [
		"./node_modules/@angular/common/locales/nds.js",
		1485
	],
	"./ne-IN.js": [
		"./node_modules/@angular/common/locales/ne-IN.js",
		1486
	],
	"./ne.js": [
		"./node_modules/@angular/common/locales/ne.js",
		1487
	],
	"./nl-AW.js": [
		"./node_modules/@angular/common/locales/nl-AW.js",
		1488
	],
	"./nl-BE.js": [
		"./node_modules/@angular/common/locales/nl-BE.js",
		1489
	],
	"./nl-BQ.js": [
		"./node_modules/@angular/common/locales/nl-BQ.js",
		1490
	],
	"./nl-CW.js": [
		"./node_modules/@angular/common/locales/nl-CW.js",
		1491
	],
	"./nl-SR.js": [
		"./node_modules/@angular/common/locales/nl-SR.js",
		1492
	],
	"./nl-SX.js": [
		"./node_modules/@angular/common/locales/nl-SX.js",
		1493
	],
	"./nl.js": [
		"./node_modules/@angular/common/locales/nl.js",
		1494
	],
	"./nmg.js": [
		"./node_modules/@angular/common/locales/nmg.js",
		1495
	],
	"./nn.js": [
		"./node_modules/@angular/common/locales/nn.js",
		1496
	],
	"./nnh.js": [
		"./node_modules/@angular/common/locales/nnh.js",
		1497
	],
	"./nus.js": [
		"./node_modules/@angular/common/locales/nus.js",
		1498
	],
	"./nyn.js": [
		"./node_modules/@angular/common/locales/nyn.js",
		1499
	],
	"./om-KE.js": [
		"./node_modules/@angular/common/locales/om-KE.js",
		1500
	],
	"./om.js": [
		"./node_modules/@angular/common/locales/om.js",
		1501
	],
	"./or.js": [
		"./node_modules/@angular/common/locales/or.js",
		1502
	],
	"./os-RU.js": [
		"./node_modules/@angular/common/locales/os-RU.js",
		1503
	],
	"./os.js": [
		"./node_modules/@angular/common/locales/os.js",
		1504
	],
	"./pa-Arab.js": [
		"./node_modules/@angular/common/locales/pa-Arab.js",
		1505
	],
	"./pa-Guru.js": [
		"./node_modules/@angular/common/locales/pa-Guru.js",
		1506
	],
	"./pa.js": [
		"./node_modules/@angular/common/locales/pa.js",
		1507
	],
	"./pl.js": [
		"./node_modules/@angular/common/locales/pl.js",
		1508
	],
	"./prg.js": [
		"./node_modules/@angular/common/locales/prg.js",
		1509
	],
	"./ps-PK.js": [
		"./node_modules/@angular/common/locales/ps-PK.js",
		1510
	],
	"./ps.js": [
		"./node_modules/@angular/common/locales/ps.js",
		1511
	],
	"./pt-AO.js": [
		"./node_modules/@angular/common/locales/pt-AO.js",
		1512
	],
	"./pt-CH.js": [
		"./node_modules/@angular/common/locales/pt-CH.js",
		1513
	],
	"./pt-CV.js": [
		"./node_modules/@angular/common/locales/pt-CV.js",
		1514
	],
	"./pt-GQ.js": [
		"./node_modules/@angular/common/locales/pt-GQ.js",
		1515
	],
	"./pt-GW.js": [
		"./node_modules/@angular/common/locales/pt-GW.js",
		1516
	],
	"./pt-LU.js": [
		"./node_modules/@angular/common/locales/pt-LU.js",
		1517
	],
	"./pt-MO.js": [
		"./node_modules/@angular/common/locales/pt-MO.js",
		1518
	],
	"./pt-MZ.js": [
		"./node_modules/@angular/common/locales/pt-MZ.js",
		1519
	],
	"./pt-PT.js": [
		"./node_modules/@angular/common/locales/pt-PT.js",
		1520
	],
	"./pt-ST.js": [
		"./node_modules/@angular/common/locales/pt-ST.js",
		1521
	],
	"./pt-TL.js": [
		"./node_modules/@angular/common/locales/pt-TL.js",
		1522
	],
	"./pt.js": [
		"./node_modules/@angular/common/locales/pt.js",
		1523
	],
	"./qu-BO.js": [
		"./node_modules/@angular/common/locales/qu-BO.js",
		1524
	],
	"./qu-EC.js": [
		"./node_modules/@angular/common/locales/qu-EC.js",
		1525
	],
	"./qu.js": [
		"./node_modules/@angular/common/locales/qu.js",
		1526
	],
	"./rm.js": [
		"./node_modules/@angular/common/locales/rm.js",
		1527
	],
	"./rn.js": [
		"./node_modules/@angular/common/locales/rn.js",
		1528
	],
	"./ro-MD.js": [
		"./node_modules/@angular/common/locales/ro-MD.js",
		1529
	],
	"./ro.js": [
		"./node_modules/@angular/common/locales/ro.js",
		1530
	],
	"./rof.js": [
		"./node_modules/@angular/common/locales/rof.js",
		1531
	],
	"./root.js": [
		"./node_modules/@angular/common/locales/root.js",
		1532
	],
	"./ru-BY.js": [
		"./node_modules/@angular/common/locales/ru-BY.js",
		1533
	],
	"./ru-KG.js": [
		"./node_modules/@angular/common/locales/ru-KG.js",
		1534
	],
	"./ru-KZ.js": [
		"./node_modules/@angular/common/locales/ru-KZ.js",
		1535
	],
	"./ru-MD.js": [
		"./node_modules/@angular/common/locales/ru-MD.js",
		1536
	],
	"./ru-UA.js": [
		"./node_modules/@angular/common/locales/ru-UA.js",
		1537
	],
	"./ru.js": [
		"./node_modules/@angular/common/locales/ru.js",
		1538
	],
	"./rw.js": [
		"./node_modules/@angular/common/locales/rw.js",
		1539
	],
	"./rwk.js": [
		"./node_modules/@angular/common/locales/rwk.js",
		1540
	],
	"./sah.js": [
		"./node_modules/@angular/common/locales/sah.js",
		1541
	],
	"./saq.js": [
		"./node_modules/@angular/common/locales/saq.js",
		1542
	],
	"./sbp.js": [
		"./node_modules/@angular/common/locales/sbp.js",
		1543
	],
	"./sd.js": [
		"./node_modules/@angular/common/locales/sd.js",
		1544
	],
	"./se-FI.js": [
		"./node_modules/@angular/common/locales/se-FI.js",
		1545
	],
	"./se-SE.js": [
		"./node_modules/@angular/common/locales/se-SE.js",
		1546
	],
	"./se.js": [
		"./node_modules/@angular/common/locales/se.js",
		1547
	],
	"./seh.js": [
		"./node_modules/@angular/common/locales/seh.js",
		1548
	],
	"./ses.js": [
		"./node_modules/@angular/common/locales/ses.js",
		1549
	],
	"./sg.js": [
		"./node_modules/@angular/common/locales/sg.js",
		1550
	],
	"./shi-Latn.js": [
		"./node_modules/@angular/common/locales/shi-Latn.js",
		1551
	],
	"./shi-Tfng.js": [
		"./node_modules/@angular/common/locales/shi-Tfng.js",
		1552
	],
	"./shi.js": [
		"./node_modules/@angular/common/locales/shi.js",
		1553
	],
	"./si.js": [
		"./node_modules/@angular/common/locales/si.js",
		1554
	],
	"./sk.js": [
		"./node_modules/@angular/common/locales/sk.js",
		1555
	],
	"./sl.js": [
		"./node_modules/@angular/common/locales/sl.js",
		1556
	],
	"./smn.js": [
		"./node_modules/@angular/common/locales/smn.js",
		1557
	],
	"./sn.js": [
		"./node_modules/@angular/common/locales/sn.js",
		1558
	],
	"./so-DJ.js": [
		"./node_modules/@angular/common/locales/so-DJ.js",
		1559
	],
	"./so-ET.js": [
		"./node_modules/@angular/common/locales/so-ET.js",
		1560
	],
	"./so-KE.js": [
		"./node_modules/@angular/common/locales/so-KE.js",
		1561
	],
	"./so.js": [
		"./node_modules/@angular/common/locales/so.js",
		1562
	],
	"./sq-MK.js": [
		"./node_modules/@angular/common/locales/sq-MK.js",
		1563
	],
	"./sq-XK.js": [
		"./node_modules/@angular/common/locales/sq-XK.js",
		1564
	],
	"./sq.js": [
		"./node_modules/@angular/common/locales/sq.js",
		1565
	],
	"./sr-Cyrl-BA.js": [
		"./node_modules/@angular/common/locales/sr-Cyrl-BA.js",
		1566
	],
	"./sr-Cyrl-ME.js": [
		"./node_modules/@angular/common/locales/sr-Cyrl-ME.js",
		1567
	],
	"./sr-Cyrl-XK.js": [
		"./node_modules/@angular/common/locales/sr-Cyrl-XK.js",
		1568
	],
	"./sr-Cyrl.js": [
		"./node_modules/@angular/common/locales/sr-Cyrl.js",
		1569
	],
	"./sr-Latn-BA.js": [
		"./node_modules/@angular/common/locales/sr-Latn-BA.js",
		1570
	],
	"./sr-Latn-ME.js": [
		"./node_modules/@angular/common/locales/sr-Latn-ME.js",
		1571
	],
	"./sr-Latn-XK.js": [
		"./node_modules/@angular/common/locales/sr-Latn-XK.js",
		1572
	],
	"./sr-Latn.js": [
		"./node_modules/@angular/common/locales/sr-Latn.js",
		1573
	],
	"./sr.js": [
		"./node_modules/@angular/common/locales/sr.js",
		1574
	],
	"./sv-AX.js": [
		"./node_modules/@angular/common/locales/sv-AX.js",
		1575
	],
	"./sv-FI.js": [
		"./node_modules/@angular/common/locales/sv-FI.js",
		1576
	],
	"./sv.js": [
		"./node_modules/@angular/common/locales/sv.js",
		1577
	],
	"./sw-CD.js": [
		"./node_modules/@angular/common/locales/sw-CD.js",
		1578
	],
	"./sw-KE.js": [
		"./node_modules/@angular/common/locales/sw-KE.js",
		1579
	],
	"./sw-UG.js": [
		"./node_modules/@angular/common/locales/sw-UG.js",
		1580
	],
	"./sw.js": [
		"./node_modules/@angular/common/locales/sw.js",
		1581
	],
	"./ta-LK.js": [
		"./node_modules/@angular/common/locales/ta-LK.js",
		1582
	],
	"./ta-MY.js": [
		"./node_modules/@angular/common/locales/ta-MY.js",
		1583
	],
	"./ta-SG.js": [
		"./node_modules/@angular/common/locales/ta-SG.js",
		1584
	],
	"./ta.js": [
		"./node_modules/@angular/common/locales/ta.js",
		1585
	],
	"./te.js": [
		"./node_modules/@angular/common/locales/te.js",
		1586
	],
	"./teo-KE.js": [
		"./node_modules/@angular/common/locales/teo-KE.js",
		1587
	],
	"./teo.js": [
		"./node_modules/@angular/common/locales/teo.js",
		1588
	],
	"./tg.js": [
		"./node_modules/@angular/common/locales/tg.js",
		1589
	],
	"./th.js": [
		"./node_modules/@angular/common/locales/th.js",
		1590
	],
	"./ti-ER.js": [
		"./node_modules/@angular/common/locales/ti-ER.js",
		1591
	],
	"./ti.js": [
		"./node_modules/@angular/common/locales/ti.js",
		1592
	],
	"./tk.js": [
		"./node_modules/@angular/common/locales/tk.js",
		1593
	],
	"./to.js": [
		"./node_modules/@angular/common/locales/to.js",
		1594
	],
	"./tr-CY.js": [
		"./node_modules/@angular/common/locales/tr-CY.js",
		1595
	],
	"./tr.js": [
		"./node_modules/@angular/common/locales/tr.js",
		1596
	],
	"./tt.js": [
		"./node_modules/@angular/common/locales/tt.js",
		1597
	],
	"./twq.js": [
		"./node_modules/@angular/common/locales/twq.js",
		1598
	],
	"./tzm.js": [
		"./node_modules/@angular/common/locales/tzm.js",
		1599
	],
	"./ug.js": [
		"./node_modules/@angular/common/locales/ug.js",
		1600
	],
	"./uk.js": [
		"./node_modules/@angular/common/locales/uk.js",
		1601
	],
	"./ur-IN.js": [
		"./node_modules/@angular/common/locales/ur-IN.js",
		1602
	],
	"./ur.js": [
		"./node_modules/@angular/common/locales/ur.js",
		1603
	],
	"./uz-Arab.js": [
		"./node_modules/@angular/common/locales/uz-Arab.js",
		1604
	],
	"./uz-Cyrl.js": [
		"./node_modules/@angular/common/locales/uz-Cyrl.js",
		1605
	],
	"./uz-Latn.js": [
		"./node_modules/@angular/common/locales/uz-Latn.js",
		1606
	],
	"./uz.js": [
		"./node_modules/@angular/common/locales/uz.js",
		1607
	],
	"./vai-Latn.js": [
		"./node_modules/@angular/common/locales/vai-Latn.js",
		1608
	],
	"./vai-Vaii.js": [
		"./node_modules/@angular/common/locales/vai-Vaii.js",
		1609
	],
	"./vai.js": [
		"./node_modules/@angular/common/locales/vai.js",
		1610
	],
	"./vi.js": [
		"./node_modules/@angular/common/locales/vi.js",
		1611
	],
	"./vo.js": [
		"./node_modules/@angular/common/locales/vo.js",
		1612
	],
	"./vun.js": [
		"./node_modules/@angular/common/locales/vun.js",
		1613
	],
	"./wae.js": [
		"./node_modules/@angular/common/locales/wae.js",
		1614
	],
	"./wo.js": [
		"./node_modules/@angular/common/locales/wo.js",
		1615
	],
	"./xh.js": [
		"./node_modules/@angular/common/locales/xh.js",
		1616
	],
	"./xog.js": [
		"./node_modules/@angular/common/locales/xog.js",
		1617
	],
	"./yav.js": [
		"./node_modules/@angular/common/locales/yav.js",
		1618
	],
	"./yi.js": [
		"./node_modules/@angular/common/locales/yi.js",
		1619
	],
	"./yo-BJ.js": [
		"./node_modules/@angular/common/locales/yo-BJ.js",
		1620
	],
	"./yo.js": [
		"./node_modules/@angular/common/locales/yo.js",
		1621
	],
	"./yue-Hans.js": [
		"./node_modules/@angular/common/locales/yue-Hans.js",
		1622
	],
	"./yue-Hant.js": [
		"./node_modules/@angular/common/locales/yue-Hant.js",
		1623
	],
	"./yue.js": [
		"./node_modules/@angular/common/locales/yue.js",
		1624
	],
	"./zgh.js": [
		"./node_modules/@angular/common/locales/zgh.js",
		1625
	],
	"./zh-Hans-HK.js": [
		"./node_modules/@angular/common/locales/zh-Hans-HK.js",
		1626
	],
	"./zh-Hans-MO.js": [
		"./node_modules/@angular/common/locales/zh-Hans-MO.js",
		1627
	],
	"./zh-Hans-SG.js": [
		"./node_modules/@angular/common/locales/zh-Hans-SG.js",
		1628
	],
	"./zh-Hans.js": [
		"./node_modules/@angular/common/locales/zh-Hans.js",
		1629
	],
	"./zh-Hant-HK.js": [
		"./node_modules/@angular/common/locales/zh-Hant-HK.js",
		1630
	],
	"./zh-Hant-MO.js": [
		"./node_modules/@angular/common/locales/zh-Hant-MO.js",
		1631
	],
	"./zh-Hant.js": [
		"./node_modules/@angular/common/locales/zh-Hant.js",
		1632
	],
	"./zh.js": [
		"./node_modules/@angular/common/locales/zh.js",
		1633
	],
	"./zu.js": [
		"./node_modules/@angular/common/locales/zu.js",
		1634
	]
};
function webpackAsyncContext(req) {
	if(!__webpack_require__.o(map, req)) {
		return Promise.resolve().then(function() {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}

	var ids = map[req], id = ids[0];
	return __webpack_require__.e(ids[1]).then(function() {
		return __webpack_require__.t(id, 7);
	});
}
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = "./node_modules/@angular/common/locales lazy recursive ^\\.\\/.*\\.js$";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "./node_modules/moment-timezone/node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!*******************************************************************************!*\
  !*** ./node_modules/moment-timezone/node_modules/moment/locale sync ^\.\/.*$ ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment-timezone/node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment-timezone/node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment-timezone/node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment-timezone/node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment-timezone/node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ma.js",
	"./ar-ps": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ps.js",
	"./ar-ps.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-ps.js",
	"./ar-sa": "./node_modules/moment-timezone/node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment-timezone/node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment-timezone/node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment-timezone/node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment-timezone/node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment-timezone/node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment-timezone/node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment-timezone/node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment-timezone/node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment-timezone/node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment-timezone/node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment-timezone/node_modules/moment/locale/bn.js",
	"./bn-bd": "./node_modules/moment-timezone/node_modules/moment/locale/bn-bd.js",
	"./bn-bd.js": "./node_modules/moment-timezone/node_modules/moment/locale/bn-bd.js",
	"./bn.js": "./node_modules/moment-timezone/node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment-timezone/node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment-timezone/node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment-timezone/node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment-timezone/node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment-timezone/node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment-timezone/node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment-timezone/node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment-timezone/node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment-timezone/node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment-timezone/node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment-timezone/node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment-timezone/node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment-timezone/node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment-timezone/node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment-timezone/node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment-timezone/node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment-timezone/node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment-timezone/node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment-timezone/node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment-timezone/node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment-timezone/node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment-timezone/node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment-timezone/node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment-timezone/node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment-timezone/node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment-timezone/node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/moment-timezone/node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment-timezone/node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment-timezone/node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment-timezone/node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment-timezone/node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-il.js",
	"./en-in": "./node_modules/moment-timezone/node_modules/moment/locale/en-in.js",
	"./en-in.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-in.js",
	"./en-nz": "./node_modules/moment-timezone/node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-nz.js",
	"./en-sg": "./node_modules/moment-timezone/node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "./node_modules/moment-timezone/node_modules/moment/locale/en-sg.js",
	"./eo": "./node_modules/moment-timezone/node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment-timezone/node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment-timezone/node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment-timezone/node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment-timezone/node_modules/moment/locale/es-do.js",
	"./es-mx": "./node_modules/moment-timezone/node_modules/moment/locale/es-mx.js",
	"./es-mx.js": "./node_modules/moment-timezone/node_modules/moment/locale/es-mx.js",
	"./es-us": "./node_modules/moment-timezone/node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment-timezone/node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment-timezone/node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment-timezone/node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment-timezone/node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment-timezone/node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment-timezone/node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment-timezone/node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment-timezone/node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment-timezone/node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment-timezone/node_modules/moment/locale/fi.js",
	"./fil": "./node_modules/moment-timezone/node_modules/moment/locale/fil.js",
	"./fil.js": "./node_modules/moment-timezone/node_modules/moment/locale/fil.js",
	"./fo": "./node_modules/moment-timezone/node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment-timezone/node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment-timezone/node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment-timezone/node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment-timezone/node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment-timezone/node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment-timezone/node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment-timezone/node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment-timezone/node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment-timezone/node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment-timezone/node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment-timezone/node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment-timezone/node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment-timezone/node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment-timezone/node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment-timezone/node_modules/moment/locale/gl.js",
	"./gom-deva": "./node_modules/moment-timezone/node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "./node_modules/moment-timezone/node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "./node_modules/moment-timezone/node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment-timezone/node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment-timezone/node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment-timezone/node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment-timezone/node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment-timezone/node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment-timezone/node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment-timezone/node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment-timezone/node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment-timezone/node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment-timezone/node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment-timezone/node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment-timezone/node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment-timezone/node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment-timezone/node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment-timezone/node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment-timezone/node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment-timezone/node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment-timezone/node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment-timezone/node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment-timezone/node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment-timezone/node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment-timezone/node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment-timezone/node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment-timezone/node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment-timezone/node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment-timezone/node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment-timezone/node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment-timezone/node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment-timezone/node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment-timezone/node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment-timezone/node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment-timezone/node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment-timezone/node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment-timezone/node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment-timezone/node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment-timezone/node_modules/moment/locale/ku.js",
	"./ku-kmr": "./node_modules/moment-timezone/node_modules/moment/locale/ku-kmr.js",
	"./ku-kmr.js": "./node_modules/moment-timezone/node_modules/moment/locale/ku-kmr.js",
	"./ku.js": "./node_modules/moment-timezone/node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment-timezone/node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment-timezone/node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment-timezone/node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment-timezone/node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment-timezone/node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment-timezone/node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment-timezone/node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment-timezone/node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment-timezone/node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment-timezone/node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment-timezone/node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment-timezone/node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment-timezone/node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment-timezone/node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment-timezone/node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment-timezone/node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment-timezone/node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment-timezone/node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment-timezone/node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment-timezone/node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment-timezone/node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment-timezone/node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment-timezone/node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment-timezone/node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment-timezone/node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment-timezone/node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment-timezone/node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment-timezone/node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment-timezone/node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment-timezone/node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment-timezone/node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment-timezone/node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment-timezone/node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment-timezone/node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment-timezone/node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment-timezone/node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment-timezone/node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment-timezone/node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment-timezone/node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment-timezone/node_modules/moment/locale/nn.js",
	"./oc-lnc": "./node_modules/moment-timezone/node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "./node_modules/moment-timezone/node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "./node_modules/moment-timezone/node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment-timezone/node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment-timezone/node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment-timezone/node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment-timezone/node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment-timezone/node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment-timezone/node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment-timezone/node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment-timezone/node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment-timezone/node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment-timezone/node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment-timezone/node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment-timezone/node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment-timezone/node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment-timezone/node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment-timezone/node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment-timezone/node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment-timezone/node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment-timezone/node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment-timezone/node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment-timezone/node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment-timezone/node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment-timezone/node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment-timezone/node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment-timezone/node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment-timezone/node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment-timezone/node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment-timezone/node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment-timezone/node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment-timezone/node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment-timezone/node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment-timezone/node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment-timezone/node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment-timezone/node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment-timezone/node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment-timezone/node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment-timezone/node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment-timezone/node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment-timezone/node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment-timezone/node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment-timezone/node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment-timezone/node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment-timezone/node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment-timezone/node_modules/moment/locale/th.js",
	"./tk": "./node_modules/moment-timezone/node_modules/moment/locale/tk.js",
	"./tk.js": "./node_modules/moment-timezone/node_modules/moment/locale/tk.js",
	"./tl-ph": "./node_modules/moment-timezone/node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment-timezone/node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment-timezone/node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment-timezone/node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment-timezone/node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment-timezone/node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment-timezone/node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment-timezone/node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment-timezone/node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment-timezone/node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment-timezone/node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment-timezone/node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment-timezone/node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment-timezone/node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment-timezone/node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment-timezone/node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment-timezone/node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment-timezone/node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment-timezone/node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment-timezone/node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment-timezone/node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment-timezone/node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment-timezone/node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment-timezone/node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment-timezone/node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment-timezone/node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment-timezone/node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment-timezone/node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment-timezone/node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment-timezone/node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment-timezone/node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment-timezone/node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "./node_modules/moment-timezone/node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "./node_modules/moment-timezone/node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "./node_modules/moment-timezone/node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment-timezone/node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment-timezone/node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app-initializer.ts":
/*!********************************!*\
  !*** ./src/app-initializer.ts ***!
  \********************************/
/*! exports provided: AppInitializer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppInitializer", function() { return AppInitializer; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/AppConsts */ "./src/shared/AppConsts.ts");
/* harmony import */ var _shared_session_app_session_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/session/app-session.service */ "./src/shared/session/app-session.service.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");











class AppInitializer {
    constructor(_injector, _platformLocation, _httpClient) {
        this._injector = _injector;
        this._platformLocation = _platformLocation;
        this._httpClient = _httpClient;
    }
    init() {
        return () => {
            abp.ui.setBusy();
            return new Promise((resolve, reject) => {
                _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].appBaseHref = this.getBaseHref();
                const appBaseUrl = this.getDocumentOrigin() + _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].appBaseHref;
                this.getApplicationConfig(appBaseUrl, () => {
                    this.getUserConfiguration(() => {
                        abp.event.trigger("abp.dynamicScriptsInitialized");
                        // do not use constructor injection for AppSessionService
                        const appSessionService = this._injector.get(_shared_session_app_session_service__WEBPACK_IMPORTED_MODULE_6__["AppSessionService"]);
                        appSessionService.init().then((result) => {
                            abp.ui.clearBusy();
                            if (this.shouldLoadLocale()) {
                                const angularLocale = this.convertAbpLocaleToAngularLocale(abp.localization.currentLanguage.name);
                                __webpack_require__("./node_modules/@angular/common/locales lazy recursive ^\\.\\/.*\\.js$")(`./${angularLocale}.js`).then((module) => {
                                    Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["registerLocaleData"])(module.default);
                                    resolve(result);
                                }, reject);
                            }
                            else {
                                resolve(result);
                            }
                        }, (err) => {
                            abp.ui.clearBusy();
                            reject(err);
                        });
                    });
                });
            });
        };
    }
    getBaseHref() {
        const baseUrl = this._platformLocation.getBaseHrefFromDOM();
        if (baseUrl) {
            return baseUrl;
        }
        return "/";
    }
    getDocumentOrigin() {
        if (!document.location.origin) {
            const port = document.location.port ? ":" + document.location.port : "";
            return (document.location.protocol + "//" + document.location.hostname + port);
        }
        return document.location.origin;
    }
    shouldLoadLocale() {
        return (abp.localization.currentLanguage.name &&
            abp.localization.currentLanguage.name !== "en-US");
    }
    convertAbpLocaleToAngularLocale(locale) {
        if (!_shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].localeMappings) {
            return locale;
        }
        const localeMapings = lodash__WEBPACK_IMPORTED_MODULE_4__["filter"](_shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].localeMappings, { from: locale });
        if (localeMapings && localeMapings.length) {
            return localeMapings[0]["to"];
        }
        return locale;
    }
    getCurrentClockProvider(currentProviderName) {
        if (currentProviderName === "unspecifiedClockProvider") {
            return abp.timing.unspecifiedClockProvider;
        }
        if (currentProviderName === "utcClockProvider") {
            return abp.timing.utcClockProvider;
        }
        return abp.timing.localClockProvider;
    }
    getUserConfiguration(callback) {
        const cookieLangValue = abp.utils.getCookieValue("Abp.Localization.CultureName");
        const token = abp.auth.getToken();
        const requestHeaders = {
            "Abp.TenantId": `${abp.multiTenancy.getTenantIdCookie()}`,
            ".AspNetCore.Culture": `c=${cookieLangValue}|uic=${cookieLangValue}`,
        };
        if (token) {
            requestHeaders["Authorization"] = `Bearer ${token}`;
        }
        this._httpClient
            .get(`${_shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].remoteServiceBaseUrl}/AbpUserConfiguration/GetAll`, {
            headers: requestHeaders,
        })
            .subscribe((response) => {
            const result = response.result;
            lodash__WEBPACK_IMPORTED_MODULE_4__["merge"](abp, result);
            abp.clock.provider = this.getCurrentClockProvider(result.clock.provider);
            moment__WEBPACK_IMPORTED_MODULE_3__["locale"](abp.localization.currentLanguage.name);
            if (abp.clock.provider.supportsMultipleTimezone) {
                // moment.tz.setDefault(abp.timing.timeZoneInfo.iana.timeZoneId);
            }
            callback();
        });
    }
    getApplicationConfig(appRootUrl, callback) {
        this._httpClient
            .get(`${appRootUrl}assets/${_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].appConfig}`, {
            headers: {
                "Abp.TenantId": `${abp.multiTenancy.getTenantIdCookie()}`,
            },
        })
            .subscribe((response) => {
            _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].appBaseUrl = response.appBaseUrl;
            _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].remoteServiceBaseUrl = response.remoteServiceBaseUrl;
            _shared_AppConsts__WEBPACK_IMPORTED_MODULE_5__["AppConsts"].localeMappings = response.localeMappings;
            callback();
        });
    }
}
AppInitializer.ɵfac = function AppInitializer_Factory(t) { return new (t || AppInitializer)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__["PlatformLocation"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"])); };
AppInitializer.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AppInitializer, factory: AppInitializer.ɵfac, providedIn: "root" });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppInitializer, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: "root",
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["PlatformLocation"] }, { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }]; }, null); })();


/***/ }),

/***/ "./src/app/services/customvalidation.service.ts":
/*!******************************************************!*\
  !*** ./src/app/services/customvalidation.service.ts ***!
  \******************************************************/
/*! exports provided: CustomvalidationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomvalidationService", function() { return CustomvalidationService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


class CustomvalidationService {
    constructor() { }
    MatchPassword(password, confirmPassword) {
        return (formGroup) => {
            const passwordControl = formGroup.controls[password];
            const confirmPasswordControl = formGroup.controls[confirmPassword];
            if (!passwordControl || !confirmPasswordControl) {
                return null;
            }
            if (confirmPasswordControl.errors &&
                !confirmPasswordControl.errors.passwordMismatch) {
                return null;
            }
            if (passwordControl.value !== confirmPasswordControl.value) {
                confirmPasswordControl.setErrors({ passwordMismatch: true });
            }
            else {
                confirmPasswordControl.setErrors(null);
            }
        };
    }
}
CustomvalidationService.ɵfac = function CustomvalidationService_Factory(t) { return new (t || CustomvalidationService)(); };
CustomvalidationService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: CustomvalidationService, factory: CustomvalidationService.ɵfac, providedIn: "root" });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CustomvalidationService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: "root",
            }]
    }], function () { return []; }, null); })();


/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `angular-cli.json`.
const environment = {
    production: false,
    hmr: false,
    appConfig: "appconfig.json",
    baseApi: "https://staging.ezonlinemortgage.com/loan-backend/api/services/app/",
    apiUrl: "https://staging.ezonlinemortgage.com/loan-backend/api/services/app/"
};


/***/ }),

/***/ "./src/hmr.ts":
/*!********************!*\
  !*** ./src/hmr.ts ***!
  \********************/
/*! exports provided: hmrBootstrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hmrBootstrap", function() { return hmrBootstrap; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angularclass_hmr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angularclass/hmr */ "./node_modules/@angularclass/hmr/dist/index.js");
/* harmony import */ var _angularclass_hmr__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angularclass_hmr__WEBPACK_IMPORTED_MODULE_1__);


const hmrBootstrap = (module, bootstrap) => {
    let ngModule;
    module.hot.accept();
    bootstrap().then((mod) => (ngModule = mod));
    module.hot.dispose(() => {
        const appRef = ngModule.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]);
        const elements = appRef.components.map((c) => c.location.nativeElement);
        const makeVisible = Object(_angularclass_hmr__WEBPACK_IMPORTED_MODULE_1__["createNewHosts"])(elements);
        ngModule.destroy();
        makeVisible();
    });
};


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _hmr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hmr */ "./src/hmr.ts");
/* harmony import */ var moment_min_locales_min__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment/min/locales.min */ "./node_modules/moment/min/locales.min.js");
/* harmony import */ var moment_min_locales_min__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment_min_locales_min__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _root_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./root.module */ "./src/root.module.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");







if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
const bootstrap = () => {
    return _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["platformBrowser"]().bootstrapModule(_root_module__WEBPACK_IMPORTED_MODULE_5__["RootModule"]);
};
/* "Hot Module Replacement" is enabled as described on
 * https://medium.com/@beeman/tutorial-enable-hrm-in-angular-cli-apps-1b0d13b80130#.sa87zkloh
 */
if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].hmr) {
    if (false) {}
    else {
        console.error("HMR is not enabled for webpack-dev-server!");
        console.log("Are you using the --hmr flag for ng serve?");
    }
}
else {
    bootstrap(); // Regular bootstrap
}


/***/ }),

/***/ "./src/root-routing.module.ts":
/*!************************************!*\
  !*** ./src/root-routing.module.ts ***!
  \************************************/
/*! exports provided: RootRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RootRoutingModule", function() { return RootRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");




const routes = [
    { path: "", redirectTo: "/app/home", pathMatch: "full" },
    {
        path: "account",
        loadChildren: () => Promise.all(/*! import() | account-account-module */[__webpack_require__.e("common"), __webpack_require__.e("account-account-module")]).then(__webpack_require__.bind(null, /*! account/account.module */ "./src/account/account.module.ts")).then((m) => m.AccountModule),
        data: { preload: true },
    },
    {
        path: "app",
        loadChildren: () => Promise.all(/*! import() | app-app-module */[__webpack_require__.e("common"), __webpack_require__.e("app-app-module")]).then(__webpack_require__.bind(null, /*! app/app.module */ "./src/app/app.module.ts")).then((m) => m.AppModule),
        data: { preload: true },
    },
];
class RootRoutingModule {
}
RootRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: RootRoutingModule });
RootRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function RootRoutingModule_Factory(t) { return new (t || RootRoutingModule)(); }, providers: [], imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes)],
        _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](RootRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RootRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes)],
                exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
                providers: [],
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/root.component.ts":
/*!*******************************!*\
  !*** ./src/root.component.ts ***!
  \*******************************/
/*! exports provided: RootComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RootComponent", function() { return RootComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");



class RootComponent {
}
RootComponent.ɵfac = function RootComponent_Factory(t) { return new (t || RootComponent)(); };
RootComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: RootComponent, selectors: [["app-root"]], decls: 1, vars: 0, template: function RootComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "router-outlet");
    } }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterOutlet"]], encapsulation: 2 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RootComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "app-root",
                template: `<router-outlet></router-outlet>`,
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/root.module.ts":
/*!****************************!*\
  !*** ./src/root.module.ts ***!
  \****************************/
/*! exports provided: getCurrentLanguage, RootModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentLanguage", function() { return getCurrentLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RootModule", function() { return RootModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/animations.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/modal/fesm2015/ngx-bootstrap-modal.js");
/* harmony import */ var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/dropdown */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/dropdown/fesm2015/ngx-bootstrap-dropdown.js");
/* harmony import */ var ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/collapse */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/collapse/fesm2015/ngx-bootstrap-collapse.js");
/* harmony import */ var ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/tabs */ "./node_modules/ngx-bootstrap/__ivy_ngcc__/tabs/fesm2015/ngx-bootstrap-tabs.js");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/shared.module */ "./src/shared/shared.module.ts");
/* harmony import */ var _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/service-proxies/service-proxy.module */ "./src/shared/service-proxies/service-proxy.module.ts");
/* harmony import */ var _root_routing_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./root-routing.module */ "./src/root-routing.module.ts");
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @shared/AppConsts */ "./src/shared/AppConsts.ts");
/* harmony import */ var _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @shared/service-proxies/service-proxies */ "./src/shared/service-proxies/service-proxies.ts");
/* harmony import */ var _root_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./root.component */ "./src/root.component.ts");
/* harmony import */ var _app_initializer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./app-initializer */ "./src/app-initializer.ts");






















function getCurrentLanguage() {
    if (abp.localization.currentLanguage.name) {
        return abp.localization.currentLanguage.name;
    }
    // todo: Waiting for https://github.com/angular/angular/issues/31465 to be fixed.
    return "en";
}
class RootModule {
}
RootModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: RootModule, bootstrap: [_root_component__WEBPACK_IMPORTED_MODULE_14__["RootComponent"]] });
RootModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function RootModule_Factory(t) { return new (t || RootModule)(); }, providers: [
        { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HTTP_INTERCEPTORS"], useClass: abp_ng2_module__WEBPACK_IMPORTED_MODULE_8__["AbpHttpInterceptor"], multi: true },
        {
            provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_INITIALIZER"],
            useFactory: (appInitializer) => appInitializer.init(),
            deps: [_app_initializer__WEBPACK_IMPORTED_MODULE_15__["AppInitializer"]],
            multi: true,
        },
        { provide: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_13__["API_BASE_URL"], useFactory: () => _shared_AppConsts__WEBPACK_IMPORTED_MODULE_12__["AppConsts"].remoteServiceBaseUrl },
        {
            provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"],
            useFactory: getCurrentLanguage,
        },
        ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__["BsDropdownConfig"],
    ], imports: [[
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"],
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"].forRoot(),
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["ModalModule"].forRoot(),
            ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__["BsDropdownModule"].forRoot(),
            ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_6__["CollapseModule"].forRoot(),
            ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_7__["TabsModule"].forRoot(),
            _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_10__["ServiceProxyModule"],
            _root_routing_module__WEBPACK_IMPORTED_MODULE_11__["RootRoutingModule"],
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](RootModule, { declarations: [_root_component__WEBPACK_IMPORTED_MODULE_14__["RootComponent"]], imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
        _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
        _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"], ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["ModalModule"], ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__["BsDropdownModule"], ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_6__["CollapseModule"], ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_7__["TabsModule"], _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_10__["ServiceProxyModule"],
        _root_routing_module__WEBPACK_IMPORTED_MODULE_11__["RootRoutingModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RootModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                    _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
                    _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"],
                    _shared_shared_module__WEBPACK_IMPORTED_MODULE_9__["SharedModule"].forRoot(),
                    ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__["ModalModule"].forRoot(),
                    ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__["BsDropdownModule"].forRoot(),
                    ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_6__["CollapseModule"].forRoot(),
                    ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_7__["TabsModule"].forRoot(),
                    _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_10__["ServiceProxyModule"],
                    _root_routing_module__WEBPACK_IMPORTED_MODULE_11__["RootRoutingModule"],
                ],
                declarations: [_root_component__WEBPACK_IMPORTED_MODULE_14__["RootComponent"]],
                providers: [
                    { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HTTP_INTERCEPTORS"], useClass: abp_ng2_module__WEBPACK_IMPORTED_MODULE_8__["AbpHttpInterceptor"], multi: true },
                    {
                        provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_INITIALIZER"],
                        useFactory: (appInitializer) => appInitializer.init(),
                        deps: [_app_initializer__WEBPACK_IMPORTED_MODULE_15__["AppInitializer"]],
                        multi: true,
                    },
                    { provide: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_13__["API_BASE_URL"], useFactory: () => _shared_AppConsts__WEBPACK_IMPORTED_MODULE_12__["AppConsts"].remoteServiceBaseUrl },
                    {
                        provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"],
                        useFactory: getCurrentLanguage,
                    },
                    ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__["BsDropdownConfig"],
                ],
                bootstrap: [_root_component__WEBPACK_IMPORTED_MODULE_14__["RootComponent"]],
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/shared/AppConsts.ts":
/*!*********************************!*\
  !*** ./src/shared/AppConsts.ts ***!
  \*********************************/
/*! exports provided: AppConsts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppConsts", function() { return AppConsts; });
class AppConsts {
}
AppConsts.localeMappings = [];
AppConsts.userManagement = {
    defaultAdminUserName: "admin",
};
AppConsts.localization = {
    defaultLocalizationSourceName: "LoanManagement",
};
AppConsts.authorization = {
    encryptedAuthTokenName: "enc_auth_token",
};
AppConsts.typeBorrower = 1;
AppConsts.typeCoBorrower = 2;


/***/ }),

/***/ "./src/shared/app-component-base.ts":
/*!******************************************!*\
  !*** ./src/shared/app-component-base.ts ***!
  \******************************************/
/*! exports provided: AppComponentBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponentBase", function() { return AppComponentBase; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/AppConsts */ "./src/shared/AppConsts.ts");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _shared_session_app_session_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/session/app-session.service */ "./src/shared/session/app-session.service.ts");




class AppComponentBase {
    constructor(injector) {
        this.localizationSourceName = _shared_AppConsts__WEBPACK_IMPORTED_MODULE_1__["AppConsts"].localization.defaultLocalizationSourceName;
        this.localization = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["LocalizationService"]);
        this.permission = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["PermissionCheckerService"]);
        this.feature = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["FeatureCheckerService"]);
        this.notify = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["NotifyService"]);
        this.setting = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["SettingService"]);
        this.message = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["MessageService"]);
        this.multiTenancy = injector.get(abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["AbpMultiTenancyService"]);
        this.appSession = injector.get(_shared_session_app_session_service__WEBPACK_IMPORTED_MODULE_3__["AppSessionService"]);
        this.elementRef = injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]);
    }
    l(key, ...args) {
        let localizedText = this.localization.localize(key, this.localizationSourceName);
        if (!localizedText) {
            localizedText = key;
        }
        if (!args || !args.length) {
            return localizedText;
        }
        args.unshift(localizedText);
        return abp.utils.formatString.apply(this, args);
    }
    isGranted(permissionName) {
        return this.permission.isGranted(permissionName);
    }
}


/***/ }),

/***/ "./src/shared/auth/app-auth.service.ts":
/*!*********************************************!*\
  !*** ./src/shared/auth/app-auth.service.ts ***!
  \*********************************************/
/*! exports provided: AppAuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppAuthService", function() { return AppAuthService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/AppConsts */ "./src/shared/AppConsts.ts");
/* harmony import */ var _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/helpers/UrlHelper */ "./src/shared/helpers/UrlHelper.ts");
/* harmony import */ var _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/service-proxies/service-proxies */ "./src/shared/service-proxies/service-proxies.ts");











class AppAuthService {
    constructor(_tokenAuthService, _router, _utilsService, _tokenService, _logService) {
        this._tokenAuthService = _tokenAuthService;
        this._router = _router;
        this._utilsService = _utilsService;
        this._tokenService = _tokenService;
        this._logService = _logService;
        this.clear();
    }
    logout(reload) {
        abp.auth.clearToken();
        abp.utils.setCookieValue(_shared_AppConsts__WEBPACK_IMPORTED_MODULE_4__["AppConsts"].authorization.encryptedAuthTokenName, undefined, undefined, abp.appPath);
        if (reload !== false) {
            location.href = _shared_AppConsts__WEBPACK_IMPORTED_MODULE_4__["AppConsts"].appBaseUrl;
        }
    }
    authenticate(finallyCallback) {
        finallyCallback = finallyCallback || (() => { });
        this._tokenAuthService
            .authenticate(this.authenticateModel)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["finalize"])(() => {
            finallyCallback();
        }))
            .subscribe((result) => {
            this.processAuthenticateResult(result);
        });
    }
    processAuthenticateResult(authenticateResult) {
        this.authenticateResult = authenticateResult;
        if (authenticateResult.accessToken) {
            // Successfully logged in
            this.login(authenticateResult.accessToken, authenticateResult.encryptedAccessToken, authenticateResult.expireInSeconds, this.rememberMe);
        }
        else {
            // Unexpected result!
            this._logService.warn("Unexpected authenticateResult!");
            this._router.navigate(["account/login"]);
        }
    }
    login(accessToken, encryptedAccessToken, expireInSeconds, rememberMe) {
        const tokenExpireDate = rememberMe
            ? new Date(new Date().getTime() + 1000 * expireInSeconds)
            : undefined;
        this._tokenService.setToken(accessToken, tokenExpireDate);
        this._utilsService.setCookieValue(_shared_AppConsts__WEBPACK_IMPORTED_MODULE_4__["AppConsts"].authorization.encryptedAuthTokenName, encryptedAccessToken, tokenExpireDate, abp.appPath);
        let initialUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].initialUrl;
        if (initialUrl.indexOf("/login") > 0) {
            initialUrl = _shared_AppConsts__WEBPACK_IMPORTED_MODULE_4__["AppConsts"].appBaseUrl;
        }
        location.href = initialUrl;
    }
    clear() {
        this.authenticateModel = new _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_6__["AuthenticateModel"]();
        this.authenticateModel.rememberClient = false;
        this.authenticateResult = null;
        this.rememberMe = false;
    }
}
AppAuthService.ɵfac = function AppAuthService_Factory(t) { return new (t || AppAuthService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_6__["TokenAuthServiceProxy"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["UtilsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["TokenService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["LogService"])); };
AppAuthService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AppAuthService, factory: AppAuthService.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppAuthService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], function () { return [{ type: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_6__["TokenAuthServiceProxy"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["UtilsService"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["TokenService"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_3__["LogService"] }]; }, null); })();


/***/ }),

/***/ "./src/shared/auth/auth-route-guard.ts":
/*!*********************************************!*\
  !*** ./src/shared/auth/auth-route-guard.ts ***!
  \*********************************************/
/*! exports provided: AppRouteGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRouteGuard", function() { return AppRouteGuard; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _session_app_session_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../session/app-session.service */ "./src/shared/session/app-session.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");








class AppRouteGuard {
    constructor(_permissionChecker, _router, _sessionService) {
        this._permissionChecker = _permissionChecker;
        this._router = _router;
        this._sessionService = _sessionService;
    }
    canActivate(route, state) {
        if (!this._sessionService.user) {
            this._router.navigate(["/account/login"]);
            return false;
        }
        if (!route.data || !route.data["permission"]) {
            return true;
        }
        if (this._permissionChecker.isGranted(route.data["permission"])) {
            return true;
        }
        this._router.navigate([this.selectBestRoute()]);
        return false;
    }
    canActivateChild(route, state) {
        return this.canActivate(route, state);
    }
    selectBestRoute() {
        if (!this._sessionService.user) {
            return "/account/login";
        }
        if (this._permissionChecker.isGranted("Pages.Users")) {
            return "/app/admin/users";
        }
        return "/app/home";
    }
}
AppRouteGuard.ɵfac = function AppRouteGuard_Factory(t) { return new (t || AppRouteGuard)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_1__["PermissionCheckerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_session_app_session_service__WEBPACK_IMPORTED_MODULE_2__["AppSessionService"])); };
AppRouteGuard.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AppRouteGuard, factory: AppRouteGuard.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppRouteGuard, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], function () { return [{ type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_1__["PermissionCheckerService"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }, { type: _session_app_session_service__WEBPACK_IMPORTED_MODULE_2__["AppSessionService"] }]; }, null); })();


/***/ }),

/***/ "./src/shared/components/modal/abp-modal-footer.component.ts":
/*!*******************************************************************!*\
  !*** ./src/shared/components/modal/abp-modal-footer.component.ts ***!
  \*******************************************************************/
/*! exports provided: AbpModalFooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbpModalFooterComponent", function() { return AbpModalFooterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/app-component-base */ "./src/shared/app-component-base.ts");



class AbpModalFooterComponent extends _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__["AppComponentBase"] {
    constructor(injector) {
        super(injector);
        this.cancelLabel = this.l("Cancel");
        this.saveLabel = this.l("Save");
        this.onCancelClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
}
AbpModalFooterComponent.ɵfac = function AbpModalFooterComponent_Factory(t) { return new (t || AbpModalFooterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
AbpModalFooterComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AbpModalFooterComponent, selectors: [["abp-modal-footer"]], inputs: { cancelLabel: "cancelLabel", cancelDisabled: "cancelDisabled", saveLabel: "saveLabel", saveDisabled: "saveDisabled" }, outputs: { onCancelClick: "onCancelClick" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 5, vars: 4, consts: [[1, "modal-footer", "justify-content-between"], ["type", "button", 1, "btn", "btn-default", 3, "disabled", "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled"]], template: function AbpModalFooterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AbpModalFooterComponent_Template_button_click_1_listener() { return ctx.onCancelClick.emit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.cancelDisabled);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.cancelLabel, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.saveDisabled);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.saveLabel, " ");
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AbpModalFooterComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "abp-modal-footer",
                templateUrl: "./abp-modal-footer.component.html",
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { cancelLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], cancelDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], saveLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], saveDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], onCancelClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/shared/components/modal/abp-modal-header.component.ts":
/*!*******************************************************************!*\
  !*** ./src/shared/components/modal/abp-modal-header.component.ts ***!
  \*******************************************************************/
/*! exports provided: AbpModalHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbpModalHeaderComponent", function() { return AbpModalHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/app-component-base */ "./src/shared/app-component-base.ts");



class AbpModalHeaderComponent extends _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__["AppComponentBase"] {
    constructor(injector) {
        super(injector);
        this.onCloseClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
}
AbpModalHeaderComponent.ɵfac = function AbpModalHeaderComponent_Factory(t) { return new (t || AbpModalHeaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
AbpModalHeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AbpModalHeaderComponent, selectors: [["abp-modal-header"]], inputs: { title: "title" }, outputs: { onCloseClick: "onCloseClick" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 6, vars: 1, consts: [[1, "modal-header"], [1, "modal-title"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["aria-hidden", "true"]], template: function AbpModalHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AbpModalHeaderComponent_Template_button_click_3_listener() { return ctx.onCloseClick.emit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\u00D7");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AbpModalHeaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "abp-modal-header",
                templateUrl: "./abp-modal-header.component.html",
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { title: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], onCloseClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/shared/components/pagination/abp-pagination-controls.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/shared/components/pagination/abp-pagination-controls.component.ts ***!
  \*******************************************************************************/
/*! exports provided: AbpPaginationControlsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbpPaginationControlsComponent", function() { return AbpPaginationControlsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/__ivy_ngcc__/dist/ngx-pagination.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");




function AbpPaginationControlsComponent_ul_3_li_1_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AbpPaginationControlsComponent_ul_3_li_1_a_1_Template_a_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8); _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1); return _r0.previous(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function AbpPaginationControlsComponent_ul_3_li_1_a_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function AbpPaginationControlsComponent_ul_3_li_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AbpPaginationControlsComponent_ul_3_li_1_a_1_Template, 2, 0, "a", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AbpPaginationControlsComponent_ul_3_li_1_a_2_Template, 2, 0, "a", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", _r0.isFirstPage());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !_r0.isFirstPage());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.isFirstPage());
} }
function AbpPaginationControlsComponent_ul_3_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AbpPaginationControlsComponent_ul_3_li_2_Template_a_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r11); const page_r9 = ctx.$implicit; _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1); return _r0.setCurrent(page_r9.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const page_r9 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("z-index", _r0.getCurrent() === page_r9.value ? "0" : "");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("active", _r0.getCurrent() === page_r9.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", page_r9.label, " ");
} }
function AbpPaginationControlsComponent_ul_3_li_3_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AbpPaginationControlsComponent_ul_3_li_3_a_1_Template_a_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r15); _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3); const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1); return _r0.next(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function AbpPaginationControlsComponent_ul_3_li_3_a_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} }
function AbpPaginationControlsComponent_ul_3_li_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AbpPaginationControlsComponent_ul_3_li_3_a_1_Template, 2, 0, "a", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AbpPaginationControlsComponent_ul_3_li_3_a_2_Template, 2, 0, "a", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", _r0.isLastPage());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !_r0.isLastPage());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.isLastPage());
} }
function AbpPaginationControlsComponent_ul_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ul", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AbpPaginationControlsComponent_ul_3_li_1_Template, 3, 4, "li", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AbpPaginationControlsComponent_ul_3_li_2_Template, 3, 5, "li", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AbpPaginationControlsComponent_ul_3_li_3_Template, 3, 4, "li", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.directionLinks);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _r0.pages);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.directionLinks);
} }
class AbpPaginationControlsComponent {
    constructor() {
        this.maxSize = 7;
        this.previousLabel = "Previous";
        this.nextLabel = "Next";
        this.screenReaderPaginationLabel = "Pagination";
        this.screenReaderPageLabel = "page";
        this.screenReaderCurrentLabel = `You're on page`;
        this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._directionLinks = true;
        this._autoHide = false;
    }
    get directionLinks() {
        return this._directionLinks;
    }
    set directionLinks(value) {
        this._directionLinks = !!value && value !== "false";
    }
    get autoHide() {
        return this._autoHide;
    }
    set autoHide(value) {
        this._autoHide = !!value && value !== "false";
    }
}
AbpPaginationControlsComponent.ɵfac = function AbpPaginationControlsComponent_Factory(t) { return new (t || AbpPaginationControlsComponent)(); };
AbpPaginationControlsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AbpPaginationControlsComponent, selectors: [["abp-pagination-controls"]], inputs: { id: "id", maxSize: "maxSize", previousLabel: "previousLabel", nextLabel: "nextLabel", screenReaderPaginationLabel: "screenReaderPaginationLabel", screenReaderPageLabel: "screenReaderPageLabel", screenReaderCurrentLabel: "screenReaderCurrentLabel", directionLinks: "directionLinks", autoHide: "autoHide" }, outputs: { pageChange: "pageChange" }, decls: 4, vars: 3, consts: [[3, "id", "maxSize", "pageChange"], ["p", "paginationApi"], ["class", "pagination m-0", 4, "ngIf"], [1, "pagination", "m-0"], ["class", "page-item", 3, "disabled", 4, "ngIf"], ["class", "page-item", 3, "active", "z-index", 4, "ngFor", "ngForOf"], [1, "page-item"], ["class", "page-link", "href", "javascript:;", 3, "click", 4, "ngIf"], ["class", "page-link", "href", "javascript:;", 4, "ngIf"], ["href", "javascript:;", 1, "page-link", 3, "click"], [1, "fas", "fa-chevron-left"], ["href", "javascript:;", 1, "page-link"], [1, "fas", "fa-chevron-right"]], template: function AbpPaginationControlsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "pagination-template", 0, 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("pageChange", function AbpPaginationControlsComponent_Template_pagination_template_pageChange_0_listener($event) { return ctx.pageChange.emit($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "nav");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AbpPaginationControlsComponent_ul_3_Template, 4, 3, "ul", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.id)("maxSize", ctx.maxSize);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !(ctx.autoHide && _r0.pages.length <= 1));
    } }, directives: [ngx_pagination__WEBPACK_IMPORTED_MODULE_1__["PaginationControlsDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"]], encapsulation: 2 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AbpPaginationControlsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "abp-pagination-controls",
                templateUrl: "./abp-pagination-controls.component.html",
            }]
    }], null, { id: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], maxSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], previousLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], nextLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], screenReaderPaginationLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], screenReaderPageLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], screenReaderCurrentLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], pageChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }], directionLinks: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], autoHide: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();


/***/ }),

/***/ "./src/shared/components/validation/abp-validation.summary.component.ts":
/*!******************************************************************************!*\
  !*** ./src/shared/components/validation/abp-validation.summary.component.ts ***!
  \******************************************************************************/
/*! exports provided: AbpValidationSummaryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbpValidationSummaryComponent", function() { return AbpValidationSummaryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_app_component_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/app-component-base */ "./src/shared/app-component-base.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");





function AbpValidationSummaryComponent_ng_container_0_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const validationError_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("d-block", !!ctx_r3.control.errors[validationError_r2.name]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r3.getValidationErrorMessage(validationError_r2), " ");
} }
function AbpValidationSummaryComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AbpValidationSummaryComponent_ng_container_0_ng_container_1_span_1_Template, 2, 3, "span", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const validationError_r2 = ctx.$implicit;
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !!ctx_r1.control.errors[validationError_r2.name]);
} }
function AbpValidationSummaryComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AbpValidationSummaryComponent_ng_container_0_ng_container_1_Template, 2, 1, "ng-container", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.validationErrors);
} }
class AbpValidationSummaryComponent extends _shared_app_component_base__WEBPACK_IMPORTED_MODULE_2__["AppComponentBase"] {
    constructor(injector, _renderer) {
        super(injector);
        this._renderer = _renderer;
        this.defaultValidationErrors = [
            { name: "required", localizationKey: "ThisFieldIsRequired" },
            {
                name: "minlength",
                localizationKey: "PleaseEnterAtLeastNCharacter",
                propertyKey: "requiredLength",
            },
            {
                name: "maxlength",
                localizationKey: "PleaseEnterNoMoreThanNCharacter",
                propertyKey: "requiredLength",
            },
            {
                name: "email",
                localizationKey: "InvalidEmailAddress",
            },
            {
                name: "pattern",
                localizationKey: "InvalidPattern",
                propertyKey: "requiredPattern",
            },
            {
                name: "validateEqual",
                localizationKey: "PairsDoNotMatch",
            },
        ];
        this.validationErrors = this.defaultValidationErrors;
    }
    set customValidationErrors(val) {
        if (val && val.length > 0) {
            const defaults = this.defaultValidationErrors.filter((defaultValidationError) => !val.find((customValidationError) => customValidationError.name === defaultValidationError.name));
            this.validationErrors = [...defaults, ...val];
        }
    }
    ngOnInit() {
        if (this.controlEl) {
            this.control.valueChanges.subscribe(() => {
                if (this.control.valid &&
                    (this.control.dirty || this.control.touched)) {
                    this._renderer.removeClass(this.controlEl, "is-invalid");
                }
            });
        }
    }
    getValidationErrorMessage(error) {
        if (this.controlEl) {
            this._renderer.addClass(this.controlEl, "is-invalid");
        }
        const propertyValue = this.control.errors[error.name][error.propertyKey];
        return !!propertyValue
            ? this.l(error.localizationKey, propertyValue)
            : this.l(error.localizationKey);
    }
}
AbpValidationSummaryComponent.ɵfac = function AbpValidationSummaryComponent_Factory(t) { return new (t || AbpValidationSummaryComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"])); };
AbpValidationSummaryComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AbpValidationSummaryComponent, selectors: [["abp-validation-summary"]], inputs: { control: "control", controlEl: "controlEl", customValidationErrors: "customValidationErrors" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 1, consts: [[4, "ngIf"], [4, "ngFor", "ngForOf"], ["class", "error invalid-feedback", 3, "d-block", 4, "ngIf"], [1, "error", "invalid-feedback"]], template: function AbpValidationSummaryComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, AbpValidationSummaryComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.control.invalid && (ctx.control.dirty || ctx.control.touched));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgForOf"]], encapsulation: 2 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AbpValidationSummaryComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "abp-validation-summary",
                templateUrl: "./abp-validation.summary.component.html",
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }]; }, { control: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], controlEl: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], customValidationErrors: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();


/***/ }),

/***/ "./src/shared/directives/bootstrap-validation-css.directive.ts":
/*!*********************************************************************!*\
  !*** ./src/shared/directives/bootstrap-validation-css.directive.ts ***!
  \*********************************************************************/
/*! exports provided: BootstrapValidationCssDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BootstrapValidationCssDirective", function() { return BootstrapValidationCssDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");




class BootstrapValidationCssDirective {
    constructor(cd) {
        this.cd = cd;
    }
    get isInvalid() {
        const control = this.cd.control;
        return control ? control.invalid && control.touched : false;
    }
}
BootstrapValidationCssDirective.ɵfac = function BootstrapValidationCssDirective_Factory(t) { return new (t || BootstrapValidationCssDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControl"], 2)); };
BootstrapValidationCssDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: BootstrapValidationCssDirective, selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]], hostVars: 2, hostBindings: function BootstrapValidationCssDirective_HostBindings(rf, ctx) { if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("is-invalid", ctx.isInvalid);
    } } });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BootstrapValidationCssDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: "[formControlName],[ngModel],[formControl]",
            }]
    }], function () { return [{ type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControl"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Self"]
            }] }]; }, { isInvalid: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"],
            args: ["class.is-invalid"]
        }] }); })();


/***/ }),

/***/ "./src/shared/directives/busy.directive.ts":
/*!*************************************************!*\
  !*** ./src/shared/directives/busy.directive.ts ***!
  \*************************************************/
/*! exports provided: BusyDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusyDirective", function() { return BusyDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


class BusyDirective {
    constructor(_element) {
        this._element = _element;
    }
    set busy(isBusy) {
        this.refreshState(isBusy);
    }
    refreshState(isBusy) {
        if (isBusy === undefined) {
            return;
        }
        if (isBusy) {
            abp.ui.setBusy(this._element.nativeElement);
        }
        else {
            abp.ui.clearBusy(this._element.nativeElement);
        }
    }
}
BusyDirective.ɵfac = function BusyDirective_Factory(t) { return new (t || BusyDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])); };
BusyDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: BusyDirective, selectors: [["", "busy", ""]], inputs: { busy: "busy" } });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BusyDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: "[busy]",
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }]; }, { busy: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();


/***/ }),

/***/ "./src/shared/directives/equal-validator.directive.ts":
/*!************************************************************!*\
  !*** ./src/shared/directives/equal-validator.directive.ts ***!
  \************************************************************/
/*! exports provided: EqualValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EqualValidator", function() { return EqualValidator; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");



class EqualValidator {
    constructor(validateEqual, reverse) {
        this.validateEqual = validateEqual;
        this.reverse = reverse;
    }
    get isReverse() {
        if (!this.reverse) {
            return false;
        }
        return this.reverse === "true" ? true : false;
    }
    validate(control) {
        // self value
        const value = control.value;
        // second control
        const control2 = control.root.get(this.validateEqual);
        // value not equal
        if (control2 && value !== control2.value && !this.isReverse) {
            return {
                validateEqual: true,
            };
        }
        // value equal and reverse
        if (control2 && value === control2.value && this.isReverse) {
            delete control2.errors["validateEqual"];
            if (!Object.keys(control2.errors).length) {
                control2.setErrors(null);
            }
        }
        // value not equal and reverse
        if (control2 && value !== control2.value && this.isReverse) {
            control2.setErrors({ validateEqual: true });
        }
        return null;
    }
}
EqualValidator.ɵfac = function EqualValidator_Factory(t) { return new (t || EqualValidator)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]("validateEqual"), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]("reverse")); };
EqualValidator.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: EqualValidator, selectors: [["", "validateEqual", "", "formControlName", ""], ["", "validateEqual", "", "formControl", ""], ["", "validateEqual", "", "ngModel", ""]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALIDATORS"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(() => EqualValidator),
                multi: true,
            },
        ])] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EqualValidator, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 
                // tslint:disable-next-line:directive-selector
                "[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]",
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALIDATORS"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(() => EqualValidator),
                        multi: true,
                    },
                ],
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Attribute"],
                args: ["validateEqual"]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Attribute"],
                args: ["reverse"]
            }] }]; }, null); })();


/***/ }),

/***/ "./src/shared/directives/match-password.directive.ts":
/*!***********************************************************!*\
  !*** ./src/shared/directives/match-password.directive.ts ***!
  \***********************************************************/
/*! exports provided: MatchPasswordDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchPasswordDirective", function() { return MatchPasswordDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _app_services_customvalidation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../app/services/customvalidation.service */ "./src/app/services/customvalidation.service.ts");





class MatchPasswordDirective {
    constructor(customValidator) {
        this.customValidator = customValidator;
        this.MatchPassword = [];
    }
    validate(formGroup) {
        return this.customValidator.MatchPassword(this.MatchPassword[0], this.MatchPassword[1])(formGroup);
    }
}
MatchPasswordDirective.ɵfac = function MatchPasswordDirective_Factory(t) { return new (t || MatchPasswordDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_app_services_customvalidation_service__WEBPACK_IMPORTED_MODULE_2__["CustomvalidationService"])); };
MatchPasswordDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: MatchPasswordDirective, selectors: [["", "appMatchPassword", ""]], inputs: { MatchPassword: ["appMatchPassword", "MatchPassword"] }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALIDATORS"],
                useExisting: MatchPasswordDirective,
                multi: true,
            },
        ])] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatchPasswordDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: "[appMatchPassword]",
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALIDATORS"],
                        useExisting: MatchPasswordDirective,
                        multi: true,
                    },
                ],
            }]
    }], function () { return [{ type: _app_services_customvalidation_service__WEBPACK_IMPORTED_MODULE_2__["CustomvalidationService"] }]; }, { MatchPassword: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ["appMatchPassword"]
        }] }); })();


/***/ }),

/***/ "./src/shared/directives/phone-mask.directive.ts":
/*!*******************************************************!*\
  !*** ./src/shared/directives/phone-mask.directive.ts ***!
  \*******************************************************/
/*! exports provided: PhoneMaskDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhoneMaskDirective", function() { return PhoneMaskDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");




class PhoneMaskDirective {
    constructor(ngControl) {
        this.ngControl = ngControl;
    }
    onModelChange(event) {
        this.onInputChange(event.target.value, false);
    }
    keydownBackspace(event) {
        this.onInputChange(event.target.value, true);
    }
    onInputChange(event, backspace) {
        let newVal = event.replace(/\D/g, "");
        if (backspace && newVal.length <= 6) {
            newVal = newVal.substring(0, newVal.length - 1);
        }
        if (newVal.length === 0) {
            newVal = "";
        }
        else if (newVal.length <= 3) {
            newVal = newVal.replace(/^(\d{0,3})/, "($1)");
        }
        else if (newVal.length <= 6) {
            newVal = newVal.replace(/^(\d{0,3})(\d{0,3})/, "($1) $2");
        }
        else if (newVal.length <= 10) {
            newVal = newVal.replace(/^(\d{0,3})(\d{0,3})(\d{0,4})/, "($1) $2-$3");
        }
        else {
            newVal = newVal.substring(0, 10);
            newVal = newVal.replace(/^(\d{0,3})(\d{0,3})(\d{0,4})/, "($1) $2-$3");
        }
        this.ngControl.valueAccessor.writeValue(newVal);
    }
}
PhoneMaskDirective.ɵfac = function PhoneMaskDirective_Factory(t) { return new (t || PhoneMaskDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControl"])); };
PhoneMaskDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: PhoneMaskDirective, selectors: [["", "appPhoneMask", ""]], hostBindings: function PhoneMaskDirective_HostBindings(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown", function PhoneMaskDirective_keydown_HostBindingHandler($event) { return ctx.onModelChange($event); })("keydown.backspace", function PhoneMaskDirective_keydown_backspace_HostBindingHandler($event) { return ctx.keydownBackspace($event); });
    } } });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PhoneMaskDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: "[appPhoneMask]",
            }]
    }], function () { return [{ type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControl"] }]; }, { onModelChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ["keydown", ["$event"]]
        }], keydownBackspace: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ["keydown.backspace", ["$event"]]
        }] }); })();


/***/ }),

/***/ "./src/shared/helpers/UrlHelper.ts":
/*!*****************************************!*\
  !*** ./src/shared/helpers/UrlHelper.ts ***!
  \*****************************************/
/*! exports provided: UrlHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlHelper", function() { return UrlHelper; });
class UrlHelper {
    static getQueryParameters() {
        return document.location.search
            .replace(/(^\?)/, "")
            .split("&")
            .map(function (n) {
            return (n = n.split("=")), (this[n[0]] = n[1]), this;
        }.bind({}))[0];
    }
}
/**
 * The URL requested, before initial routing.
 */
UrlHelper.initialUrl = location.href;


/***/ }),

/***/ "./src/shared/layout/layout-store.service.ts":
/*!***************************************************!*\
  !*** ./src/shared/layout/layout-store.service.ts ***!
  \***************************************************/
/*! exports provided: LayoutStoreService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutStoreService", function() { return LayoutStoreService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");




class LayoutStoreService {
    constructor() {
        this.initialLayoutConfig = {
            sidebarExpanded: false,
        };
        this.configSource = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](this.initialLayoutConfig);
        this.config$ = this.configSource.asObservable();
    }
    get sidebarExpanded() {
        return this.config$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["pluck"])("sidebarExpanded"), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])());
    }
    setSidebarExpanded(value) {
        this.configSource.next(Object.assign(this.configSource.value, { sidebarExpanded: value }));
    }
}
LayoutStoreService.ɵfac = function LayoutStoreService_Factory(t) { return new (t || LayoutStoreService)(); };
LayoutStoreService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: LayoutStoreService, factory: LayoutStoreService.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LayoutStoreService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], function () { return []; }, null); })();


/***/ }),

/***/ "./src/shared/nav/app-url.service.ts":
/*!*******************************************!*\
  !*** ./src/shared/nav/app-url.service.ts ***!
  \*******************************************/
/*! exports provided: AppUrlService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppUrlService", function() { return AppUrlService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/AppConsts */ "./src/shared/AppConsts.ts");
/* harmony import */ var _session_app_session_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../session/app-session.service */ "./src/shared/session/app-session.service.ts");





class AppUrlService {
    constructor(_appSessionService) {
        this._appSessionService = _appSessionService;
    }
    get appRootUrl() {
        if (this._appSessionService.tenant) {
            return this.getAppRootUrlOfTenant(this._appSessionService.tenant.tenancyName);
        }
        else {
            return this.getAppRootUrlOfTenant(null);
        }
    }
    /**
     * Returning url ends with '/'.
     */
    getAppRootUrlOfTenant(tenancyName) {
        let baseUrl = this.ensureEndsWith(_shared_AppConsts__WEBPACK_IMPORTED_MODULE_1__["AppConsts"].appBaseUrl, "/");
        if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder) < 0) {
            return baseUrl;
        }
        if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder + ".") >= 0) {
            baseUrl = baseUrl.replace(AppUrlService.tenancyNamePlaceHolder + ".", AppUrlService.tenancyNamePlaceHolder);
            if (tenancyName) {
                tenancyName = tenancyName + ".";
            }
        }
        if (!tenancyName) {
            return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, "");
        }
        return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, tenancyName);
    }
    ensureEndsWith(str, c) {
        if (str.charAt(str.length - 1) !== c) {
            str = str + c;
        }
        return str;
    }
    removeFromEnd(str, c) {
        if (str.charAt(str.length - 1) === c) {
            str = str.substr(0, str.length - 1);
        }
        return str;
    }
}
AppUrlService.tenancyNamePlaceHolder = "{TENANCY_NAME}";
AppUrlService.ɵfac = function AppUrlService_Factory(t) { return new (t || AppUrlService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_session_app_session_service__WEBPACK_IMPORTED_MODULE_2__["AppSessionService"])); };
AppUrlService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AppUrlService, factory: AppUrlService.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AppUrlService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], function () { return [{ type: _session_app_session_service__WEBPACK_IMPORTED_MODULE_2__["AppSessionService"] }]; }, null); })();


/***/ }),

/***/ "./src/shared/pipes/OtherValue.pipe.ts":
/*!*********************************************!*\
  !*** ./src/shared/pipes/OtherValue.pipe.ts ***!
  \*********************************************/
/*! exports provided: EthnicityOtherValuePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EthnicityOtherValuePipe", function() { return EthnicityOtherValuePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


class EthnicityOtherValuePipe {
    transform(value, id) {
        if (value === undefined || value === null || value.length === 0)
            return "--";
        const obj = value.find((i) => i.id === id);
        return obj ? obj.otherValue : "--";
    }
}
EthnicityOtherValuePipe.ɵfac = function EthnicityOtherValuePipe_Factory(t) { return new (t || EthnicityOtherValuePipe)(); };
EthnicityOtherValuePipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "otherValue", type: EthnicityOtherValuePipe, pure: true });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EthnicityOtherValuePipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"],
        args: [{
                name: "otherValue",
                pure: true,
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/shared/pipes/YesNo.pipe.ts":
/*!****************************************!*\
  !*** ./src/shared/pipes/YesNo.pipe.ts ***!
  \****************************************/
/*! exports provided: EthnicityYesNoPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EthnicityYesNoPipe", function() { return EthnicityYesNoPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


class EthnicityYesNoPipe {
    transform(value, id) {
        if (value === undefined || value === null || value.length === 0)
            return "--";
        return value.findIndex((i) => i.id === id) > -1 ? "Yes" : "--";
    }
}
EthnicityYesNoPipe.ɵfac = function EthnicityYesNoPipe_Factory(t) { return new (t || EthnicityYesNoPipe)(); };
EthnicityYesNoPipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "yesNo", type: EthnicityYesNoPipe, pure: true });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EthnicityYesNoPipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"],
        args: [{
                name: "yesNo",
                pure: true,
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/shared/pipes/date-difference.pipe.ts":
/*!**************************************************!*\
  !*** ./src/shared/pipes/date-difference.pipe.ts ***!
  \**************************************************/
/*! exports provided: DateDifferencePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateDifferencePipe", function() { return DateDifferencePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");


class DateDifferencePipe {
    transform(startingDate, endingDate) {
        if (!startingDate) {
            return "";
        }
        var startDate = new Date(startingDate);
        // user not pass endingDate then set current date as end date.
        if (!endingDate) {
            endingDate = new Date();
        }
        let endDate = new Date(endingDate);
        // chack start date and end date and base on condication alter date.
        if (startDate > endDate) {
            var swap = startDate;
            startDate = endDate;
            endDate = swap;
        }
        // This is for leap year.
        const startYear = startDate.getFullYear();
        const february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0
            ? 29
            : 28;
        const daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        let yearDiff = endDate.getFullYear() - startYear;
        let monthDiff = endDate.getMonth() - startDate.getMonth();
        if (monthDiff < 0) {
            yearDiff--;
            monthDiff += 12;
        }
        return yearDiff + " " + "Years " + monthDiff + " " + "Months ";
    }
}
DateDifferencePipe.ɵfac = function DateDifferencePipe_Factory(t) { return new (t || DateDifferencePipe)(); };
DateDifferencePipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "dateDifference", type: DateDifferencePipe, pure: true });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DateDifferencePipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"],
        args: [{
                name: "dateDifference",
                pure: true,
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/shared/pipes/localize.pipe.ts":
/*!*******************************************!*\
  !*** ./src/shared/pipes/localize.pipe.ts ***!
  \*******************************************/
/*! exports provided: LocalizePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalizePipe", function() { return LocalizePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/app-component-base */ "./src/shared/app-component-base.ts");



class LocalizePipe extends _shared_app_component_base__WEBPACK_IMPORTED_MODULE_1__["AppComponentBase"] {
    constructor(injector) {
        super(injector);
    }
    transform(key, ...args) {
        return this.l(key, args);
    }
}
LocalizePipe.ɵfac = function LocalizePipe_Factory(t) { return new (t || LocalizePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
LocalizePipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({ name: "localize", type: LocalizePipe, pure: true });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LocalizePipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"],
        args: [{
                name: "localize",
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/shared/service-proxies/service-proxies.ts":
/*!*******************************************************!*\
  !*** ./src/shared/service-proxies/service-proxies.ts ***!
  \*******************************************************/
/*! exports provided: API_BASE_URL, AccountServiceProxy, AdditionalDetailServicesServiceProxy, AdditionalIncomeServiceServiceProxy, AdminDisclosureServiceServiceProxy, AdminLoanApplicationDocumentServiceServiceProxy, AdminLoanDetailServiceServiceProxy, AdminLoanProgramServiceServiceProxy, AdminLoanStatusServiceServiceProxy, AdminLoanSummaryStatusServiceServiceProxy, AdminNotificationsServiceProxy, AdminUserEnabledDeviceServiceServiceProxy, BorrowerEmploymentInformationServiceProxy, BorrowerMonthlyIncomeServicesServiceProxy, CitizenshipTypeServiceServiceProxy, CityServiceServiceProxy, ConfigurationServiceProxy, CountryServiceServiceProxy, CreditAuthAgreementServiceServiceProxy, CreditTypeServiceServiceProxy, DeclarationServiceServiceProxy, DemographicInformationServiceServiceProxy, EConsentServiceServiceProxy, EmploymentIncomeServiceServiceProxy, ExpenseServicesServiceProxy, FinancialServiceServiceProxy, HomeBuyingServiceServiceProxy, HousingTypeServiceServiceProxy, IncomeSourceServiceServiceProxy, IncomeTypeServiceServiceProxy, LeadApplicationQuestionsServiceServiceProxy, LeadApplicationTypesServiceServiceProxy, LeadAssetDetailsServiceServiceProxy, LeadAssetTypesServiceServiceProxy, LeadEmploymentDetailsServiceServiceProxy, LeadEmploymentTypesServiceServiceProxy, LeadIncomeTypesServiceServiceProxy, LeadOwnerTypesServiceServiceProxy, LeadPurchasingDetailServiceServiceProxy, LeadQuestionAnswersServiceServiceProxy, LeadRefinancingDetailsServiceServiceProxy, LeadRefinancingIncomeDetailsServiceServiceProxy, LeadTaxTypesServiceServiceProxy, LoanServiceProxy, LoanDetailServicesServiceProxy, LoanServiceServiceProxy, ManualAssetEntryServiceServiceProxy, MaritalStatusServiceServiceProxy, PersonalDetailServicesServiceProxy, RefinanceHomeBuyingServiceServiceProxy, RoleServiceProxy, SessionServiceProxy, SiteSettingServicesServiceProxy, StateServiceServiceProxy, TenantServiceProxy, TokenAuthServiceProxy, UserServiceProxy, AddAccountTypeRequest, AddAdminDisclosure, AddAdminLoanApplicationDocument, AddAdminLoanDetail, AddAdminLoanProgram, AddAdminLoanStatus, AddAdminLoanSummaryStatus, AddAdminUserEnabledDevice, AddCitizenshipTypeRequest, AddCityRequest, AddCountryRequest, AddCreditTypeRequest, AddDeclarationCategoryRequest, AddDeclarationQuestionRequest, AddDemographicInfoSourceRequest, AddDemographicInformationRequest, AddHousingTypeRequest, AddIncomeSourceRequest, AddIncomeTypeRequest, AddLaibilitiesTypeRequest, AddLeadApplicationQuestions, AddLeadApplicationType, AddLeadAssetDetails, AddLeadAssetTypes, AddLeadEmploymentDetails, AddLeadEmploymentTypes, AddLeadIncomeTypes, AddLeadOwnerTypes, AddLeadPurchasingDetail, AddLeadQuestionAnswers, AddLeadRefinancingDetails, AddLeadRefinancingIncomeDetails, AddLeadTaxTypes, AddLoanAndPropertyInformationGiftRequest, AddLoanAndPropertyInformationOtherMortageLoanRequest, AddLoanAndPropertyInformationRentalIncomeRequest, AddLoanAndPropertyInformationRequest, AddLoanOriginatorInformationRequest, AddLoanPropertyGiftTypeRequest, AddLoanPropertyOccupancyRequest, AddMaritalStatusRequest, AddMortageLoanOnPropertyRequest, AddMortageLoanTypeRequest, AddOtherLaibilitiesTypeRequest, AddPropertyIntendedOccupancyRequest, AddPropertyStatusRequest, AddStateRequest, AdditionalDetailsDto, AdditionalDetailsDtoPagedResultDto, AdditionalEmployementIncomeDetail, AdditionalEmploymentDetail, AdditionalIncomeDto, AdditionalIncomeDtoPagedResultDto, Additionaldetail, Additionalincome, Address, AddressDto, ApplicationDeclarationQuestion, ApplicationDetail, ApplicationEmployementDetail, ApplicationFinancialAsset, ApplicationFinancialLiabilityDetail, ApplicationFinancialOtherAssetDetail, ApplicationFinancialOtherLaibilityDetail, ApplicationIncomeSourceDetail, ApplicationInfoDto, Assembly, Assettype, AuthenticateModel, AuthenticateResultModel, Borrower, BorrowerDto, BorrowerEmploymentInformationDto, BorrowerEmploymentInformationDtoPagedResultDto, BorrowerMonthlyIncomeDto, BorrowerMonthlyIncomeDtoPagedResultDto, Borroweremploymentinformation, Borrowermonthlyincome, Borrowertype, BuyingHomeDto, BuyingHomeDtoPagedResultDto, CallingConventions, ChangePasswordDto, ChangeUiThemeInput, ChangeUserLanguageDto, Consentdetail, ConstructorInfo, CreateRoleDto, CreateTenantDto, CreateUserDto, CreditAuthAgreementDto, CreditAuthAgreementDtoPagedResultDto, Creditauthagreement, CustomAttributeData, CustomAttributeNamedArgument, CustomAttributeTypedArgument, Declaration, DeclarationCategory, DeclarationDetailDto, DeclarationDto, DeclarationDtoPagedResultDto, Declarationborroweredemographicsinformation, DemographicDto, DemographicInformationDetail, DemographicTypeDto, EConsentDto, EConsentDtoPagedResultDto, EmploymentIncomeDto, EmploymentIncomeDtoPagedResultDto, EventAttributes, EventInfo, Expense, ExpensesDto, ExpensesDtoPagedResultDto, ExternalAuthenticateModel, ExternalAuthenticateResultModel, ExternalLoginProviderInfoModel, FieldAttributes, FieldInfo, FinancialRealEstateDetail, FlatPermissionDto, GenericParameterAttributes, GetCurrentLoginInformationsOutput, GetPdfDataModel, GetRoleForEditOutput, ICustomAttributeProvider, Incomesource1, IntPtr, IsTenantAvailableInput, IsTenantAvailableOutput, LayoutKind, LoanAndPropertyInformationDetail, LoanAndPropertyInformationGiftDetail, LoanApplicationDto, LoanApplicationDtoPagedResultDto, LoanDetailDto, LoanDetailDtoPagedResultDto, LoanListDto, LoanListDtoPagedResultDto, Loanapplication, Loandetail, ManualAssetEntryDto, ManualAssetEntryDtoPagedResultDto, Manualassetentry, MemberInfo, MemberTypes, MethodAttributes, MethodBase, MethodImplAttributes, MethodInfo, Module, ModuleHandle, MortageLoanOnPropertyDetail, NotificationData, NotificationSeverity, ParameterAttributes, ParameterInfo, PermissionDto, PermissionDtoListResultDto, PersonalInformationDto, PersonalInformationDtoPagedResultDto, Personaldetail, PreviousEmployementDetail, PropertyAttributes, PropertyInfo, RefinanceHomeBuyingDto, RefinanceHomeBuyingDtoPagedResultDto, RegisterInput, RegisterOutput, ResetPasswordDto, RoleDto, RoleDtoListResultDto, RoleDtoPagedResultDto, RoleEditDto, RoleListDto, RoleListDtoListResultDto, RuntimeFieldHandle, RuntimeMethodHandle, RuntimeTypeHandle, SecurityRuleSet, SiteSettingDto, SiteSettingDtoPagedResultDto, State, StockAndBondViewModel, Stockandbond, StructLayoutAttribute, TenantAvailabilityState, TenantDto, TenantDtoPagedResultDto, TenantLoginInfoDto, TenantNotification, Type, TypeAttributes, TypeInfo, UpdateAccountTypeRequest, UpdateAdminDisclosure, UpdateAdminLoanApplicationDocument, UpdateAdminLoanDetail, UpdateAdminLoanProgram, UpdateAdminLoanStatus, UpdateAdminLoanSummaryStatus, UpdateAdminUserEnabledDevice, UpdateCitizenshipTypeRequest, UpdateCityRequest, UpdateCountryRequest, UpdateCreditTypeRequest, UpdateDeclarationCategoryRequest, UpdateDeclarationQuestionRequest, UpdateDemographicInfoSourceRequest, UpdateDemographicInformationRequest, UpdateHousingTypeRequest, UpdateIncomeSourceRequest, UpdateIncomeTypeRequest, UpdateLaibilitiesTypeRequest, UpdateLeadApplicationQuestions, UpdateLeadApplicationType, UpdateLeadAssetDetails, UpdateLeadAssetTypes, UpdateLeadEmploymentDetails, UpdateLeadEmploymentTypes, UpdateLeadIncomeTypes, UpdateLeadOwnerTypes, UpdateLeadPurchasingDetail, UpdateLeadQuestionAnswers, UpdateLeadRefinancingDetails, UpdateLeadRefinancingIncomeDetails, UpdateLeadTaxTypes, UpdateLoanAndPropertyInformationGiftRequest, UpdateLoanAndPropertyInformationOtherMortageLoanRequest, UpdateLoanAndPropertyInformationRentalIncomeRequest, UpdateLoanAndPropertyInformationRequest, UpdateLoanOriginatorInformationRequest, UpdateLoanPropertyGiftTypeRequest, UpdateLoanPropertyOccupancyRequest, UpdateMaritalStatusRequest, UpdateMilitaryServiceRequest, UpdateMortageLoanOnPropertyRequest, UpdateMortageLoanTypeRequest, UpdateOtherLaibilitiesTypeRequest, UpdatePropertyIntendedOccupancyRequest, UpdatePropertyStatusRequest, UpdateStateRequest, UploadAdminLoanApplicationDocument, UserDto, UserDtoPagedResultDto, UserLoginInfoDto, UserNotification, UserNotificationState, ApiException */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_BASE_URL", function() { return API_BASE_URL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountServiceProxy", function() { return AccountServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalDetailServicesServiceProxy", function() { return AdditionalDetailServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalIncomeServiceServiceProxy", function() { return AdditionalIncomeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminDisclosureServiceServiceProxy", function() { return AdminDisclosureServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLoanApplicationDocumentServiceServiceProxy", function() { return AdminLoanApplicationDocumentServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLoanDetailServiceServiceProxy", function() { return AdminLoanDetailServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLoanProgramServiceServiceProxy", function() { return AdminLoanProgramServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLoanStatusServiceServiceProxy", function() { return AdminLoanStatusServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLoanSummaryStatusServiceServiceProxy", function() { return AdminLoanSummaryStatusServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminNotificationsServiceProxy", function() { return AdminNotificationsServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminUserEnabledDeviceServiceServiceProxy", function() { return AdminUserEnabledDeviceServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerEmploymentInformationServiceProxy", function() { return BorrowerEmploymentInformationServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerMonthlyIncomeServicesServiceProxy", function() { return BorrowerMonthlyIncomeServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CitizenshipTypeServiceServiceProxy", function() { return CitizenshipTypeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CityServiceServiceProxy", function() { return CityServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationServiceProxy", function() { return ConfigurationServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CountryServiceServiceProxy", function() { return CountryServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreditAuthAgreementServiceServiceProxy", function() { return CreditAuthAgreementServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreditTypeServiceServiceProxy", function() { return CreditTypeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclarationServiceServiceProxy", function() { return DeclarationServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DemographicInformationServiceServiceProxy", function() { return DemographicInformationServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EConsentServiceServiceProxy", function() { return EConsentServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmploymentIncomeServiceServiceProxy", function() { return EmploymentIncomeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpenseServicesServiceProxy", function() { return ExpenseServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialServiceServiceProxy", function() { return FinancialServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeBuyingServiceServiceProxy", function() { return HomeBuyingServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HousingTypeServiceServiceProxy", function() { return HousingTypeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IncomeSourceServiceServiceProxy", function() { return IncomeSourceServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IncomeTypeServiceServiceProxy", function() { return IncomeTypeServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadApplicationQuestionsServiceServiceProxy", function() { return LeadApplicationQuestionsServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadApplicationTypesServiceServiceProxy", function() { return LeadApplicationTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadAssetDetailsServiceServiceProxy", function() { return LeadAssetDetailsServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadAssetTypesServiceServiceProxy", function() { return LeadAssetTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadEmploymentDetailsServiceServiceProxy", function() { return LeadEmploymentDetailsServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadEmploymentTypesServiceServiceProxy", function() { return LeadEmploymentTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadIncomeTypesServiceServiceProxy", function() { return LeadIncomeTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadOwnerTypesServiceServiceProxy", function() { return LeadOwnerTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadPurchasingDetailServiceServiceProxy", function() { return LeadPurchasingDetailServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadQuestionAnswersServiceServiceProxy", function() { return LeadQuestionAnswersServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadRefinancingDetailsServiceServiceProxy", function() { return LeadRefinancingDetailsServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadRefinancingIncomeDetailsServiceServiceProxy", function() { return LeadRefinancingIncomeDetailsServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeadTaxTypesServiceServiceProxy", function() { return LeadTaxTypesServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanServiceProxy", function() { return LoanServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanDetailServicesServiceProxy", function() { return LoanDetailServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanServiceServiceProxy", function() { return LoanServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualAssetEntryServiceServiceProxy", function() { return ManualAssetEntryServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaritalStatusServiceServiceProxy", function() { return MaritalStatusServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonalDetailServicesServiceProxy", function() { return PersonalDetailServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RefinanceHomeBuyingServiceServiceProxy", function() { return RefinanceHomeBuyingServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleServiceProxy", function() { return RoleServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionServiceProxy", function() { return SessionServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteSettingServicesServiceProxy", function() { return SiteSettingServicesServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateServiceServiceProxy", function() { return StateServiceServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantServiceProxy", function() { return TenantServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenAuthServiceProxy", function() { return TokenAuthServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserServiceProxy", function() { return UserServiceProxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAccountTypeRequest", function() { return AddAccountTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminDisclosure", function() { return AddAdminDisclosure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminLoanApplicationDocument", function() { return AddAdminLoanApplicationDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminLoanDetail", function() { return AddAdminLoanDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminLoanProgram", function() { return AddAdminLoanProgram; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminLoanStatus", function() { return AddAdminLoanStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminLoanSummaryStatus", function() { return AddAdminLoanSummaryStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdminUserEnabledDevice", function() { return AddAdminUserEnabledDevice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCitizenshipTypeRequest", function() { return AddCitizenshipTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCityRequest", function() { return AddCityRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCountryRequest", function() { return AddCountryRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCreditTypeRequest", function() { return AddCreditTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDeclarationCategoryRequest", function() { return AddDeclarationCategoryRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDeclarationQuestionRequest", function() { return AddDeclarationQuestionRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDemographicInfoSourceRequest", function() { return AddDemographicInfoSourceRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDemographicInformationRequest", function() { return AddDemographicInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddHousingTypeRequest", function() { return AddHousingTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddIncomeSourceRequest", function() { return AddIncomeSourceRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddIncomeTypeRequest", function() { return AddIncomeTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLaibilitiesTypeRequest", function() { return AddLaibilitiesTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadApplicationQuestions", function() { return AddLeadApplicationQuestions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadApplicationType", function() { return AddLeadApplicationType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadAssetDetails", function() { return AddLeadAssetDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadAssetTypes", function() { return AddLeadAssetTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadEmploymentDetails", function() { return AddLeadEmploymentDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadEmploymentTypes", function() { return AddLeadEmploymentTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadIncomeTypes", function() { return AddLeadIncomeTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadOwnerTypes", function() { return AddLeadOwnerTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadPurchasingDetail", function() { return AddLeadPurchasingDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadQuestionAnswers", function() { return AddLeadQuestionAnswers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadRefinancingDetails", function() { return AddLeadRefinancingDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadRefinancingIncomeDetails", function() { return AddLeadRefinancingIncomeDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLeadTaxTypes", function() { return AddLeadTaxTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanAndPropertyInformationGiftRequest", function() { return AddLoanAndPropertyInformationGiftRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanAndPropertyInformationOtherMortageLoanRequest", function() { return AddLoanAndPropertyInformationOtherMortageLoanRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanAndPropertyInformationRentalIncomeRequest", function() { return AddLoanAndPropertyInformationRentalIncomeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanAndPropertyInformationRequest", function() { return AddLoanAndPropertyInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanOriginatorInformationRequest", function() { return AddLoanOriginatorInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanPropertyGiftTypeRequest", function() { return AddLoanPropertyGiftTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddLoanPropertyOccupancyRequest", function() { return AddLoanPropertyOccupancyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddMaritalStatusRequest", function() { return AddMaritalStatusRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddMortageLoanOnPropertyRequest", function() { return AddMortageLoanOnPropertyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddMortageLoanTypeRequest", function() { return AddMortageLoanTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddOtherLaibilitiesTypeRequest", function() { return AddOtherLaibilitiesTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPropertyIntendedOccupancyRequest", function() { return AddPropertyIntendedOccupancyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPropertyStatusRequest", function() { return AddPropertyStatusRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddStateRequest", function() { return AddStateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalDetailsDto", function() { return AdditionalDetailsDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalDetailsDtoPagedResultDto", function() { return AdditionalDetailsDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalEmployementIncomeDetail", function() { return AdditionalEmployementIncomeDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalEmploymentDetail", function() { return AdditionalEmploymentDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalIncomeDto", function() { return AdditionalIncomeDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdditionalIncomeDtoPagedResultDto", function() { return AdditionalIncomeDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Additionaldetail", function() { return Additionaldetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Additionalincome", function() { return Additionalincome; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Address", function() { return Address; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressDto", function() { return AddressDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationDeclarationQuestion", function() { return ApplicationDeclarationQuestion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationDetail", function() { return ApplicationDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationEmployementDetail", function() { return ApplicationEmployementDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationFinancialAsset", function() { return ApplicationFinancialAsset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationFinancialLiabilityDetail", function() { return ApplicationFinancialLiabilityDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationFinancialOtherAssetDetail", function() { return ApplicationFinancialOtherAssetDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationFinancialOtherLaibilityDetail", function() { return ApplicationFinancialOtherLaibilityDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationIncomeSourceDetail", function() { return ApplicationIncomeSourceDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationInfoDto", function() { return ApplicationInfoDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Assembly", function() { return Assembly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Assettype", function() { return Assettype; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthenticateModel", function() { return AuthenticateModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthenticateResultModel", function() { return AuthenticateResultModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Borrower", function() { return Borrower; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerDto", function() { return BorrowerDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerEmploymentInformationDto", function() { return BorrowerEmploymentInformationDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerEmploymentInformationDtoPagedResultDto", function() { return BorrowerEmploymentInformationDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerMonthlyIncomeDto", function() { return BorrowerMonthlyIncomeDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BorrowerMonthlyIncomeDtoPagedResultDto", function() { return BorrowerMonthlyIncomeDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Borroweremploymentinformation", function() { return Borroweremploymentinformation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Borrowermonthlyincome", function() { return Borrowermonthlyincome; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Borrowertype", function() { return Borrowertype; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuyingHomeDto", function() { return BuyingHomeDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuyingHomeDtoPagedResultDto", function() { return BuyingHomeDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CallingConventions", function() { return CallingConventions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangePasswordDto", function() { return ChangePasswordDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeUiThemeInput", function() { return ChangeUiThemeInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeUserLanguageDto", function() { return ChangeUserLanguageDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Consentdetail", function() { return Consentdetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstructorInfo", function() { return ConstructorInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateRoleDto", function() { return CreateRoleDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateTenantDto", function() { return CreateTenantDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateUserDto", function() { return CreateUserDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreditAuthAgreementDto", function() { return CreditAuthAgreementDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreditAuthAgreementDtoPagedResultDto", function() { return CreditAuthAgreementDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Creditauthagreement", function() { return Creditauthagreement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomAttributeData", function() { return CustomAttributeData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomAttributeNamedArgument", function() { return CustomAttributeNamedArgument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomAttributeTypedArgument", function() { return CustomAttributeTypedArgument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Declaration", function() { return Declaration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclarationCategory", function() { return DeclarationCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclarationDetailDto", function() { return DeclarationDetailDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclarationDto", function() { return DeclarationDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeclarationDtoPagedResultDto", function() { return DeclarationDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Declarationborroweredemographicsinformation", function() { return Declarationborroweredemographicsinformation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DemographicDto", function() { return DemographicDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DemographicInformationDetail", function() { return DemographicInformationDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DemographicTypeDto", function() { return DemographicTypeDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EConsentDto", function() { return EConsentDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EConsentDtoPagedResultDto", function() { return EConsentDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmploymentIncomeDto", function() { return EmploymentIncomeDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmploymentIncomeDtoPagedResultDto", function() { return EmploymentIncomeDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventAttributes", function() { return EventAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventInfo", function() { return EventInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expense", function() { return Expense; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpensesDto", function() { return ExpensesDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpensesDtoPagedResultDto", function() { return ExpensesDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAuthenticateModel", function() { return ExternalAuthenticateModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalAuthenticateResultModel", function() { return ExternalAuthenticateResultModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalLoginProviderInfoModel", function() { return ExternalLoginProviderInfoModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldAttributes", function() { return FieldAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldInfo", function() { return FieldInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FinancialRealEstateDetail", function() { return FinancialRealEstateDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlatPermissionDto", function() { return FlatPermissionDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenericParameterAttributes", function() { return GenericParameterAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetCurrentLoginInformationsOutput", function() { return GetCurrentLoginInformationsOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetPdfDataModel", function() { return GetPdfDataModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetRoleForEditOutput", function() { return GetRoleForEditOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ICustomAttributeProvider", function() { return ICustomAttributeProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Incomesource1", function() { return Incomesource1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntPtr", function() { return IntPtr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsTenantAvailableInput", function() { return IsTenantAvailableInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsTenantAvailableOutput", function() { return IsTenantAvailableOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutKind", function() { return LayoutKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanAndPropertyInformationDetail", function() { return LoanAndPropertyInformationDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanAndPropertyInformationGiftDetail", function() { return LoanAndPropertyInformationGiftDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanApplicationDto", function() { return LoanApplicationDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanApplicationDtoPagedResultDto", function() { return LoanApplicationDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanDetailDto", function() { return LoanDetailDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanDetailDtoPagedResultDto", function() { return LoanDetailDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanListDto", function() { return LoanListDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoanListDtoPagedResultDto", function() { return LoanListDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loanapplication", function() { return Loanapplication; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loandetail", function() { return Loandetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualAssetEntryDto", function() { return ManualAssetEntryDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManualAssetEntryDtoPagedResultDto", function() { return ManualAssetEntryDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Manualassetentry", function() { return Manualassetentry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberInfo", function() { return MemberInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberTypes", function() { return MemberTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MethodAttributes", function() { return MethodAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MethodBase", function() { return MethodBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MethodImplAttributes", function() { return MethodImplAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MethodInfo", function() { return MethodInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Module", function() { return Module; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleHandle", function() { return ModuleHandle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MortageLoanOnPropertyDetail", function() { return MortageLoanOnPropertyDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationData", function() { return NotificationData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationSeverity", function() { return NotificationSeverity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterAttributes", function() { return ParameterAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterInfo", function() { return ParameterInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionDto", function() { return PermissionDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionDtoListResultDto", function() { return PermissionDtoListResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonalInformationDto", function() { return PersonalInformationDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonalInformationDtoPagedResultDto", function() { return PersonalInformationDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Personaldetail", function() { return Personaldetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreviousEmployementDetail", function() { return PreviousEmployementDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyAttributes", function() { return PropertyAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyInfo", function() { return PropertyInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RefinanceHomeBuyingDto", function() { return RefinanceHomeBuyingDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RefinanceHomeBuyingDtoPagedResultDto", function() { return RefinanceHomeBuyingDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterInput", function() { return RegisterInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterOutput", function() { return RegisterOutput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordDto", function() { return ResetPasswordDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleDto", function() { return RoleDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleDtoListResultDto", function() { return RoleDtoListResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleDtoPagedResultDto", function() { return RoleDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleEditDto", function() { return RoleEditDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleListDto", function() { return RoleListDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleListDtoListResultDto", function() { return RoleListDtoListResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuntimeFieldHandle", function() { return RuntimeFieldHandle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuntimeMethodHandle", function() { return RuntimeMethodHandle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuntimeTypeHandle", function() { return RuntimeTypeHandle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityRuleSet", function() { return SecurityRuleSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteSettingDto", function() { return SiteSettingDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteSettingDtoPagedResultDto", function() { return SiteSettingDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "State", function() { return State; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StockAndBondViewModel", function() { return StockAndBondViewModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stockandbond", function() { return Stockandbond; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StructLayoutAttribute", function() { return StructLayoutAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantAvailabilityState", function() { return TenantAvailabilityState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantDto", function() { return TenantDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantDtoPagedResultDto", function() { return TenantDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantLoginInfoDto", function() { return TenantLoginInfoDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TenantNotification", function() { return TenantNotification; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeAttributes", function() { return TypeAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeInfo", function() { return TypeInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAccountTypeRequest", function() { return UpdateAccountTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminDisclosure", function() { return UpdateAdminDisclosure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminLoanApplicationDocument", function() { return UpdateAdminLoanApplicationDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminLoanDetail", function() { return UpdateAdminLoanDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminLoanProgram", function() { return UpdateAdminLoanProgram; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminLoanStatus", function() { return UpdateAdminLoanStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminLoanSummaryStatus", function() { return UpdateAdminLoanSummaryStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateAdminUserEnabledDevice", function() { return UpdateAdminUserEnabledDevice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateCitizenshipTypeRequest", function() { return UpdateCitizenshipTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateCityRequest", function() { return UpdateCityRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateCountryRequest", function() { return UpdateCountryRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateCreditTypeRequest", function() { return UpdateCreditTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDeclarationCategoryRequest", function() { return UpdateDeclarationCategoryRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDeclarationQuestionRequest", function() { return UpdateDeclarationQuestionRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDemographicInfoSourceRequest", function() { return UpdateDemographicInfoSourceRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateDemographicInformationRequest", function() { return UpdateDemographicInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateHousingTypeRequest", function() { return UpdateHousingTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateIncomeSourceRequest", function() { return UpdateIncomeSourceRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateIncomeTypeRequest", function() { return UpdateIncomeTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLaibilitiesTypeRequest", function() { return UpdateLaibilitiesTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadApplicationQuestions", function() { return UpdateLeadApplicationQuestions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadApplicationType", function() { return UpdateLeadApplicationType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadAssetDetails", function() { return UpdateLeadAssetDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadAssetTypes", function() { return UpdateLeadAssetTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadEmploymentDetails", function() { return UpdateLeadEmploymentDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadEmploymentTypes", function() { return UpdateLeadEmploymentTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadIncomeTypes", function() { return UpdateLeadIncomeTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadOwnerTypes", function() { return UpdateLeadOwnerTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadPurchasingDetail", function() { return UpdateLeadPurchasingDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadQuestionAnswers", function() { return UpdateLeadQuestionAnswers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadRefinancingDetails", function() { return UpdateLeadRefinancingDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadRefinancingIncomeDetails", function() { return UpdateLeadRefinancingIncomeDetails; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLeadTaxTypes", function() { return UpdateLeadTaxTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanAndPropertyInformationGiftRequest", function() { return UpdateLoanAndPropertyInformationGiftRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanAndPropertyInformationOtherMortageLoanRequest", function() { return UpdateLoanAndPropertyInformationOtherMortageLoanRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanAndPropertyInformationRentalIncomeRequest", function() { return UpdateLoanAndPropertyInformationRentalIncomeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanAndPropertyInformationRequest", function() { return UpdateLoanAndPropertyInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanOriginatorInformationRequest", function() { return UpdateLoanOriginatorInformationRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanPropertyGiftTypeRequest", function() { return UpdateLoanPropertyGiftTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateLoanPropertyOccupancyRequest", function() { return UpdateLoanPropertyOccupancyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateMaritalStatusRequest", function() { return UpdateMaritalStatusRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateMilitaryServiceRequest", function() { return UpdateMilitaryServiceRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateMortageLoanOnPropertyRequest", function() { return UpdateMortageLoanOnPropertyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateMortageLoanTypeRequest", function() { return UpdateMortageLoanTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateOtherLaibilitiesTypeRequest", function() { return UpdateOtherLaibilitiesTypeRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdatePropertyIntendedOccupancyRequest", function() { return UpdatePropertyIntendedOccupancyRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdatePropertyStatusRequest", function() { return UpdatePropertyStatusRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateStateRequest", function() { return UpdateStateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UploadAdminLoanApplicationDocument", function() { return UploadAdminLoanApplicationDocument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserDto", function() { return UserDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserDtoPagedResultDto", function() { return UserDtoPagedResultDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserLoginInfoDto", function() { return UserLoginInfoDto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserNotification", function() { return UserNotification; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserNotificationState", function() { return UserNotificationState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiException", function() { return ApiException; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming







const API_BASE_URL = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]("API_BASE_URL");
class AccountServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    isTenantAvailable(body) {
        let url_ = this.baseUrl + "/api/services/app/Account/IsTenantAvailable";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processIsTenantAvailable(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processIsTenantAvailable(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processIsTenantAvailable(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = IsTenantAvailableOutput.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    register(body) {
        let url_ = this.baseUrl + "/api/services/app/Account/Register";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processRegister(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processRegister(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processRegister(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RegisterOutput.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AccountServiceProxy.ɵfac = function AccountServiceProxy_Factory(t) { return new (t || AccountServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AccountServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AccountServiceProxy, factory: AccountServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AccountServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdditionalDetailServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalDetailServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalDetailsDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalDetailServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalDetailsDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalDetailServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalDetailsDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalDetailServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalDetailsDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalDetailServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdditionalDetailServicesServiceProxy.ɵfac = function AdditionalDetailServicesServiceProxy_Factory(t) { return new (t || AdditionalDetailServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdditionalDetailServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdditionalDetailServicesServiceProxy, factory: AdditionalDetailServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdditionalDetailServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdditionalIncomeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalIncomeService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalIncomeService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalIncomeService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalIncomeDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/AdditionalIncomeService/GetAllByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Additionalincome.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalIncomeService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdditionalIncomeService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AdditionalIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdditionalIncomeServiceServiceProxy.ɵfac = function AdditionalIncomeServiceServiceProxy_Factory(t) { return new (t || AdditionalIncomeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdditionalIncomeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdditionalIncomeServiceServiceProxy, factory: AdditionalIncomeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdditionalIncomeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminDisclosureServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminDisclosureService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminDisclosureService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminDisclosureService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminDisclosure.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminDisclosureService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminDisclosure.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminDisclosureService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminDisclosureServiceServiceProxy.ɵfac = function AdminDisclosureServiceServiceProxy_Factory(t) { return new (t || AdminDisclosureServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminDisclosureServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminDisclosureServiceServiceProxy, factory: AdminDisclosureServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminDisclosureServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminLoanApplicationDocumentServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminLoanApplicationDocument.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminLoanApplicationDocument.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanId (optional)
     * @param disclosureId (optional)
     * @param userId (optional)
     * @param formFile (optional)
     * @return Success
     */
    uploadFile(loanId, disclosureId, userId, formFile) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/UploadFile";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = new FormData();
        if (loanId === null || loanId === undefined)
            throw new Error("The parameter 'loanId' cannot be null.");
        else
            content_.append("LoanId", loanId.toString());
        if (disclosureId === null || disclosureId === undefined)
            throw new Error("The parameter 'disclosureId' cannot be null.");
        else
            content_.append("DisclosureId", disclosureId.toString());
        if (userId === null || userId === undefined)
            throw new Error("The parameter 'userId' cannot be null.");
        else
            content_.append("UserId", userId.toString());
        if (formFile === null || formFile === undefined)
            throw new Error("The parameter 'formFile' cannot be null.");
        else
            content_.append("formFile", formFile.data, formFile.fileName ? formFile.fileName : "formFile");
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUploadFile(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUploadFile(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUploadFile(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param disId (optional)
     * @param userID (optional)
     * @return Success
     */
    deleteFile(disId, userID) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/DeleteFile?";
        if (disId === null)
            throw new Error("The parameter 'disId' cannot be null.");
        else if (disId !== undefined)
            url_ += "disId=" + encodeURIComponent("" + disId) + "&";
        if (userID === null)
            throw new Error("The parameter 'userID' cannot be null.");
        else if (userID !== undefined)
            url_ += "userID=" + encodeURIComponent("" + userID) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFile(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFile(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFile(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    uploadDocument(body) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminLoanApplicationDocumentService/UploadDocument";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUploadDocument(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUploadDocument(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUploadDocument(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminLoanApplicationDocumentServiceServiceProxy.ɵfac = function AdminLoanApplicationDocumentServiceServiceProxy_Factory(t) { return new (t || AdminLoanApplicationDocumentServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminLoanApplicationDocumentServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminLoanApplicationDocumentServiceServiceProxy, factory: AdminLoanApplicationDocumentServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminLoanApplicationDocumentServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminLoanDetailServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanDetailService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanDetailService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanDetailService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminLoanDetail.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanDetailService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminLoanDetail.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanDetailService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminLoanDetailServiceServiceProxy.ɵfac = function AdminLoanDetailServiceServiceProxy_Factory(t) { return new (t || AdminLoanDetailServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminLoanDetailServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminLoanDetailServiceServiceProxy, factory: AdminLoanDetailServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminLoanDetailServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminLoanProgramServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanProgramService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanProgramService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanProgramService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminLoanProgram.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanProgramService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminLoanProgram.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanProgramService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminLoanProgramServiceServiceProxy.ɵfac = function AdminLoanProgramServiceServiceProxy_Factory(t) { return new (t || AdminLoanProgramServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminLoanProgramServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminLoanProgramServiceServiceProxy, factory: AdminLoanProgramServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminLoanProgramServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminLoanStatusServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanStatusService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanStatusService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanStatusService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminLoanStatus.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanStatusService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminLoanStatus.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanStatusService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminLoanStatusServiceServiceProxy.ɵfac = function AdminLoanStatusServiceServiceProxy_Factory(t) { return new (t || AdminLoanStatusServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminLoanStatusServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminLoanStatusServiceServiceProxy, factory: AdminLoanStatusServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminLoanStatusServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminLoanSummaryStatusServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanSummaryStatusService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanSummaryStatusService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanSummaryStatusService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminLoanSummaryStatus.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanSummaryStatusService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminLoanSummaryStatus.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminLoanSummaryStatusService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminLoanSummaryStatusServiceServiceProxy.ɵfac = function AdminLoanSummaryStatusServiceServiceProxy_Factory(t) { return new (t || AdminLoanSummaryStatusServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminLoanSummaryStatusServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminLoanSummaryStatusServiceServiceProxy, factory: AdminLoanSummaryStatusServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminLoanSummaryStatusServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminNotificationsServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    markAsRead(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminNotifications/MarkAsRead?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processMarkAsRead(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processMarkAsRead(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processMarkAsRead(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param message (optional)
     * @return Success
     */
    publishNotification(message) {
        let url_ = this.baseUrl +
            "/api/services/app/AdminNotifications/PublishNotification?";
        if (message === null)
            throw new Error("The parameter 'message' cannot be null.");
        else if (message !== undefined)
            url_ += "message=" + encodeURIComponent("" + message) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processPublishNotification(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processPublishNotification(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processPublishNotification(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getNotifications() {
        let url_ = this.baseUrl + "/api/services/app/AdminNotifications/GetNotifications";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetNotifications(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetNotifications(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetNotifications(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UserNotification.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminNotificationsServiceProxy.ɵfac = function AdminNotificationsServiceProxy_Factory(t) { return new (t || AdminNotificationsServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminNotificationsServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminNotificationsServiceProxy, factory: AdminNotificationsServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminNotificationsServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AdminUserEnabledDeviceServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminUserEnabledDeviceService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminUserEnabledDeviceService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/AdminUserEnabledDeviceService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAdminUserEnabledDevice.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/AdminUserEnabledDeviceService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAdminUserEnabledDevice.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/AdminUserEnabledDeviceService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
AdminUserEnabledDeviceServiceServiceProxy.ɵfac = function AdminUserEnabledDeviceServiceServiceProxy_Factory(t) { return new (t || AdminUserEnabledDeviceServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
AdminUserEnabledDeviceServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AdminUserEnabledDeviceServiceServiceProxy, factory: AdminUserEnabledDeviceServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](AdminUserEnabledDeviceServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class BorrowerEmploymentInformationServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerEmploymentInformation/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerEmploymentInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerEmploymentInformation/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerEmploymentInformationDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/BorrowerEmploymentInformation/GetAllByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Borroweremploymentinformation.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerEmploymentInformation/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerEmploymentInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerEmploymentInformation/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerEmploymentInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerEmploymentInformation/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
BorrowerEmploymentInformationServiceProxy.ɵfac = function BorrowerEmploymentInformationServiceProxy_Factory(t) { return new (t || BorrowerEmploymentInformationServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
BorrowerEmploymentInformationServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: BorrowerEmploymentInformationServiceProxy, factory: BorrowerEmploymentInformationServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](BorrowerEmploymentInformationServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class BorrowerMonthlyIncomeServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerMonthlyIncomeServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerMonthlyIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerMonthlyIncomeServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerMonthlyIncomeDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/BorrowerMonthlyIncomeServices/GetAllByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Borrowermonthlyincome.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerMonthlyIncomeServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerMonthlyIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerMonthlyIncomeServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BorrowerMonthlyIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/BorrowerMonthlyIncomeServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
BorrowerMonthlyIncomeServicesServiceProxy.ɵfac = function BorrowerMonthlyIncomeServicesServiceProxy_Factory(t) { return new (t || BorrowerMonthlyIncomeServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
BorrowerMonthlyIncomeServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: BorrowerMonthlyIncomeServicesServiceProxy, factory: BorrowerMonthlyIncomeServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](BorrowerMonthlyIncomeServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class CitizenshipTypeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addCitizenshipType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/CitizenshipTypeService/AddCitizenshipType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddCitizenshipType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddCitizenshipType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddCitizenshipType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateCitizenshipType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/CitizenshipTypeService/UpdateCitizenshipType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateCitizenshipType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateCitizenshipType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCitizenshipType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteCitizenshipType(id) {
        let url_ = this.baseUrl +
            "/api/services/app/CitizenshipTypeService/DeleteCitizenshipType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteCitizenshipType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteCitizenshipType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteCitizenshipType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getCitizenshipTypes() {
        let url_ = this.baseUrl +
            "/api/services/app/CitizenshipTypeService/GetCitizenshipTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCitizenshipTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCitizenshipTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCitizenshipTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateCitizenshipTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getCitizenshipTypeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/CitizenshipTypeService/GetCitizenshipTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCitizenshipTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCitizenshipTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCitizenshipTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateCitizenshipTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
CitizenshipTypeServiceServiceProxy.ɵfac = function CitizenshipTypeServiceServiceProxy_Factory(t) { return new (t || CitizenshipTypeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
CitizenshipTypeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CitizenshipTypeServiceServiceProxy, factory: CitizenshipTypeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CitizenshipTypeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class CityServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addCity(body) {
        let url_ = this.baseUrl + "/api/services/app/CityService/AddCity";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddCity(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddCity(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddCity(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateCity(body) {
        let url_ = this.baseUrl + "/api/services/app/CityService/UpdateCity";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateCity(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateCity(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCity(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteCity(id) {
        let url_ = this.baseUrl + "/api/services/app/CityService/DeleteCity?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteCity(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteCity(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteCity(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getCities() {
        let url_ = this.baseUrl + "/api/services/app/CityService/GetCities";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCities(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCities(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCities(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateCityRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getCityById(id) {
        let url_ = this.baseUrl + "/api/services/app/CityService/GetCityById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCityById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCityById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCityById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateCityRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
CityServiceServiceProxy.ɵfac = function CityServiceServiceProxy_Factory(t) { return new (t || CityServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
CityServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CityServiceServiceProxy, factory: CityServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CityServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class ConfigurationServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    changeUiTheme(body) {
        let url_ = this.baseUrl + "/api/services/app/Configuration/ChangeUiTheme";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processChangeUiTheme(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processChangeUiTheme(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processChangeUiTheme(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
ConfigurationServiceProxy.ɵfac = function ConfigurationServiceProxy_Factory(t) { return new (t || ConfigurationServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
ConfigurationServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: ConfigurationServiceProxy, factory: ConfigurationServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](ConfigurationServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class CountryServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addCountry(body) {
        let url_ = this.baseUrl + "/api/services/app/CountryService/AddCountry";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddCountry(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddCountry(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddCountry(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateCountry(body) {
        let url_ = this.baseUrl + "/api/services/app/CountryService/UpdateCountry";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateCountry(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateCountry(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCountry(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteCountry(id) {
        let url_ = this.baseUrl + "/api/services/app/CountryService/DeleteCountry?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteCountry(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteCountry(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteCountry(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getCountries() {
        let url_ = this.baseUrl + "/api/services/app/CountryService/GetCountries";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCountries(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCountries(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCountries(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateCountryRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getCountryById(id) {
        let url_ = this.baseUrl + "/api/services/app/CountryService/GetCountryById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCountryById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCountryById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCountryById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateCountryRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
CountryServiceServiceProxy.ɵfac = function CountryServiceServiceProxy_Factory(t) { return new (t || CountryServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
CountryServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CountryServiceServiceProxy, factory: CountryServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CountryServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class CreditAuthAgreementServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/CreditAuthAgreementService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = CreditAuthAgreementDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/CreditAuthAgreementService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = CreditAuthAgreementDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/CreditAuthAgreementService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = CreditAuthAgreementDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/CreditAuthAgreementService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = CreditAuthAgreementDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/CreditAuthAgreementService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
CreditAuthAgreementServiceServiceProxy.ɵfac = function CreditAuthAgreementServiceServiceProxy_Factory(t) { return new (t || CreditAuthAgreementServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
CreditAuthAgreementServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CreditAuthAgreementServiceServiceProxy, factory: CreditAuthAgreementServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CreditAuthAgreementServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class CreditTypeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addCreditType(body) {
        let url_ = this.baseUrl + "/api/services/app/CreditTypeService/AddCreditType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddCreditType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddCreditType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddCreditType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateCreditType(body) {
        let url_ = this.baseUrl + "/api/services/app/CreditTypeService/UpdateCreditType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateCreditType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateCreditType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateCreditType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteCreditType(id) {
        let url_ = this.baseUrl + "/api/services/app/CreditTypeService/DeleteCreditType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteCreditType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteCreditType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteCreditType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getCreditTypes() {
        let url_ = this.baseUrl + "/api/services/app/CreditTypeService/GetCreditTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCreditTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCreditTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCreditTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateCreditTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getCreditTypeById(id) {
        let url_ = this.baseUrl + "/api/services/app/CreditTypeService/GetCreditTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCreditTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCreditTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCreditTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateCreditTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
CreditTypeServiceServiceProxy.ɵfac = function CreditTypeServiceServiceProxy_Factory(t) { return new (t || CreditTypeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
CreditTypeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CreditTypeServiceServiceProxy, factory: CreditTypeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](CreditTypeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class DeclarationServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/DeclarationService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DeclarationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/DeclarationService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DeclarationDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllDeclrationByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetAllDeclrationByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllDeclrationByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllDeclrationByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllDeclrationByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Declaration.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllDemographicInformationByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetAllDemographicInformationByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllDemographicInformationByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllDemographicInformationByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllDemographicInformationByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Declarationborroweredemographicsinformation.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/DeclarationService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DeclarationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/DeclarationService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = DeclarationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/DeclarationService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addDeclarationCategory(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/AddDeclarationCategory";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddDeclarationCategory(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddDeclarationCategory(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddDeclarationCategory(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateDeclarationCategory(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/UpdateDeclarationCategory";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateDeclarationCategory(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateDeclarationCategory(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateDeclarationCategory(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteDeclarationCategory(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/DeleteDeclarationCategory?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteDeclarationCategory(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteDeclarationCategory(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteDeclarationCategory(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getDeclarationCategories() {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetDeclarationCategories";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDeclarationCategories(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDeclarationCategories(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDeclarationCategories(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateDeclarationCategoryRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getDeclarationCategoryById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetDeclarationCategoryById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDeclarationCategoryById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDeclarationCategoryById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDeclarationCategoryById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateDeclarationCategoryRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addDeclarationQuestion(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/AddDeclarationQuestion";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddDeclarationQuestion(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddDeclarationQuestion(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddDeclarationQuestion(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateDeclarationQuestion(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/UpdateDeclarationQuestion";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateDeclarationQuestion(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateDeclarationQuestion(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateDeclarationQuestion(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteDeclarationQuestion(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/DeleteDeclarationQuestion?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteDeclarationQuestion(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteDeclarationQuestion(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteDeclarationQuestion(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getDeclarationQuestions() {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetDeclarationQuestions";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDeclarationQuestions(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDeclarationQuestions(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDeclarationQuestions(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateDeclarationQuestionRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getDeclarationQuestionById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DeclarationService/GetDeclarationQuestionById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDeclarationQuestionById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDeclarationQuestionById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDeclarationQuestionById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateDeclarationQuestionRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
DeclarationServiceServiceProxy.ɵfac = function DeclarationServiceServiceProxy_Factory(t) { return new (t || DeclarationServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
DeclarationServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: DeclarationServiceServiceProxy, factory: DeclarationServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DeclarationServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class DemographicInformationServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addDemographicInfoSource(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/AddDemographicInfoSource";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddDemographicInfoSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddDemographicInfoSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddDemographicInfoSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateDemographicInfoSource(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/UpdateDemographicInfoSource";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateDemographicInfoSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateDemographicInfoSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateDemographicInfoSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteDemographicInfoSource(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/DeleteDemographicInfoSource?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteDemographicInfoSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteDemographicInfoSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteDemographicInfoSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getDemographicInfoSources() {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/GetDemographicInfoSources";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDemographicInfoSources(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDemographicInfoSources(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDemographicInfoSources(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateDemographicInfoSourceRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getDemographicInfoSourceById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/GetDemographicInfoSourceById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDemographicInfoSourceById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDemographicInfoSourceById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDemographicInfoSourceById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateDemographicInfoSourceRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addDemographicInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/AddDemographicInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddDemographicInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddDemographicInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddDemographicInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateDemographicInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/UpdateDemographicInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateDemographicInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateDemographicInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateDemographicInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteDemographicInformation(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/DeleteDemographicInformation?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteDemographicInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteDemographicInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteDemographicInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getDemographicInformations() {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/GetDemographicInformations";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDemographicInformations(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDemographicInformations(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDemographicInformations(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateDemographicInformationRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getDemographicInformationById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/DemographicInformationService/GetDemographicInformationById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetDemographicInformationById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetDemographicInformationById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetDemographicInformationById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateDemographicInformationRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
DemographicInformationServiceServiceProxy.ɵfac = function DemographicInformationServiceServiceProxy_Factory(t) { return new (t || DemographicInformationServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
DemographicInformationServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: DemographicInformationServiceServiceProxy, factory: DemographicInformationServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](DemographicInformationServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class EConsentServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/EConsentService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EConsentDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/EConsentService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EConsentDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/EConsentService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EConsentDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/EConsentService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EConsentDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/EConsentService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
EConsentServiceServiceProxy.ɵfac = function EConsentServiceServiceProxy_Factory(t) { return new (t || EConsentServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
EConsentServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: EConsentServiceServiceProxy, factory: EConsentServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](EConsentServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class EmploymentIncomeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/EmploymentIncomeService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EmploymentIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/EmploymentIncomeService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EmploymentIncomeDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/EmploymentIncomeService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EmploymentIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/EmploymentIncomeService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = EmploymentIncomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/EmploymentIncomeService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
EmploymentIncomeServiceServiceProxy.ɵfac = function EmploymentIncomeServiceServiceProxy_Factory(t) { return new (t || EmploymentIncomeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
EmploymentIncomeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: EmploymentIncomeServiceServiceProxy, factory: EmploymentIncomeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](EmploymentIncomeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class ExpenseServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/ExpenseServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExpensesDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/ExpenseServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExpensesDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/ExpenseServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExpensesDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/ExpenseServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExpensesDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/ExpenseServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
ExpenseServicesServiceProxy.ɵfac = function ExpenseServicesServiceProxy_Factory(t) { return new (t || ExpenseServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
ExpenseServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: ExpenseServicesServiceProxy, factory: ExpenseServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](ExpenseServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class FinancialServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addFinancialPropertyStatus(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/AddFinancialPropertyStatus";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddFinancialPropertyStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddFinancialPropertyStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddFinancialPropertyStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateFinancialPropertyStatus(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/UpdateFinancialPropertyStatus";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateFinancialPropertyStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateFinancialPropertyStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateFinancialPropertyStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteFinancialPropertyStatus(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/DeleteFinancialPropertyStatus?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFinancialPropertyStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFinancialPropertyStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFinancialPropertyStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getFinancialPropertyStatuses() {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialPropertyStatuses";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialPropertyStatuses(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialPropertyStatuses(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialPropertyStatuses(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdatePropertyStatusRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getFinancialPropertyStatusById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialPropertyStatusById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialPropertyStatusById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialPropertyStatusById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialPropertyStatusById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdatePropertyStatusRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addFinancialPropertyIntendedOccupancy(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/AddFinancialPropertyIntendedOccupancy";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddFinancialPropertyIntendedOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddFinancialPropertyIntendedOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddFinancialPropertyIntendedOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateFinancialPropertyIntendedOccupancy(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/UpdateFinancialPropertyIntendedOccupancy";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateFinancialPropertyIntendedOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateFinancialPropertyIntendedOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateFinancialPropertyIntendedOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteFinancialPropertyIntendedOccupancy(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/DeleteFinancialPropertyIntendedOccupancy?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFinancialPropertyIntendedOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFinancialPropertyIntendedOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFinancialPropertyIntendedOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getFinancialPropertyIntendedOccupancies() {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialPropertyIntendedOccupancies";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialPropertyIntendedOccupancies(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialPropertyIntendedOccupancies(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialPropertyIntendedOccupancies(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdatePropertyIntendedOccupancyRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getFinancialPropertyIntendedOccupancyById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialPropertyIntendedOccupancyById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialPropertyIntendedOccupancyById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialPropertyIntendedOccupancyById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialPropertyIntendedOccupancyById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdatePropertyIntendedOccupancyRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addFinancialOtherLaibilitiesType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/AddFinancialOtherLaibilitiesType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddFinancialOtherLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddFinancialOtherLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddFinancialOtherLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateFinancialOtherLaibilitiesType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/UpdateFinancialOtherLaibilitiesType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateFinancialOtherLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateFinancialOtherLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateFinancialOtherLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteFinancialOtherLaibilitiesType(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/DeleteFinancialOtherLaibilitiesType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFinancialOtherLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFinancialOtherLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFinancialOtherLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getFinancialOtherLaibilitiesTypes() {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialOtherLaibilitiesTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialOtherLaibilitiesTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialOtherLaibilitiesTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialOtherLaibilitiesTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateOtherLaibilitiesTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getFinancialOtherLaibilitiesTypeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialOtherLaibilitiesTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialOtherLaibilitiesTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialOtherLaibilitiesTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialOtherLaibilitiesTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateOtherLaibilitiesTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addFinancialLaibilitiesType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/AddFinancialLaibilitiesType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddFinancialLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddFinancialLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddFinancialLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateFinancialLaibilitiesType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/UpdateFinancialLaibilitiesType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateFinancialLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateFinancialLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateFinancialLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteFinancialLaibilitiesType(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/DeleteFinancialLaibilitiesType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFinancialLaibilitiesType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFinancialLaibilitiesType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFinancialLaibilitiesType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getFinancialLaibilitiesTypes() {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialLaibilitiesTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialLaibilitiesTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialLaibilitiesTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialLaibilitiesTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLaibilitiesTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getFinancialLaibilitiesTypeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialLaibilitiesTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialLaibilitiesTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialLaibilitiesTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialLaibilitiesTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLaibilitiesTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addFinancialAccountType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/AddFinancialAccountType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddFinancialAccountType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddFinancialAccountType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddFinancialAccountType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateFinancialAccountType(body) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/UpdateFinancialAccountType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateFinancialAccountType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateFinancialAccountType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateFinancialAccountType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteFinancialAccountType(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/DeleteFinancialAccountType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteFinancialAccountType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteFinancialAccountType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteFinancialAccountType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getFinancialAccountTypes() {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialAccountTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialAccountTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialAccountTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialAccountTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateAccountTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getFinancialAccountTypeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/FinancialService/GetFinancialAccountTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetFinancialAccountTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetFinancialAccountTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetFinancialAccountTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateAccountTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
FinancialServiceServiceProxy.ɵfac = function FinancialServiceServiceProxy_Factory(t) { return new (t || FinancialServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
FinancialServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: FinancialServiceServiceProxy, factory: FinancialServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](FinancialServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class HomeBuyingServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/HomeBuyingService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BuyingHomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/HomeBuyingService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/HomeBuyingService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BuyingHomeDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/HomeBuyingService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BuyingHomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/HomeBuyingService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = BuyingHomeDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
HomeBuyingServiceServiceProxy.ɵfac = function HomeBuyingServiceServiceProxy_Factory(t) { return new (t || HomeBuyingServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
HomeBuyingServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: HomeBuyingServiceServiceProxy, factory: HomeBuyingServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](HomeBuyingServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class HousingTypeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addHousingType(body) {
        let url_ = this.baseUrl + "/api/services/app/HousingTypeService/AddHousingType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddHousingType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddHousingType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddHousingType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateHousingType(body) {
        let url_ = this.baseUrl + "/api/services/app/HousingTypeService/UpdateHousingType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateHousingType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateHousingType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateHousingType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteHousingType(id) {
        let url_ = this.baseUrl + "/api/services/app/HousingTypeService/DeleteHousingType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteHousingType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteHousingType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteHousingType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getHousingTypes() {
        let url_ = this.baseUrl + "/api/services/app/HousingTypeService/GetHousingTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetHousingTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetHousingTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetHousingTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateHousingTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getHousingTypeById(id) {
        let url_ = this.baseUrl + "/api/services/app/HousingTypeService/GetHousingTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetHousingTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetHousingTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetHousingTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateHousingTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
HousingTypeServiceServiceProxy.ɵfac = function HousingTypeServiceServiceProxy_Factory(t) { return new (t || HousingTypeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
HousingTypeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: HousingTypeServiceServiceProxy, factory: HousingTypeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](HousingTypeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class IncomeSourceServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addIncomeSource(body) {
        let url_ = this.baseUrl + "/api/services/app/IncomeSourceService/AddIncomeSource";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddIncomeSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddIncomeSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddIncomeSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateIncomeSource(body) {
        let url_ = this.baseUrl + "/api/services/app/IncomeSourceService/UpdateIncomeSource";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateIncomeSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateIncomeSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateIncomeSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteIncomeSource(id) {
        let url_ = this.baseUrl +
            "/api/services/app/IncomeSourceService/DeleteIncomeSource?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteIncomeSource(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteIncomeSource(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteIncomeSource(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getIncomeSources() {
        let url_ = this.baseUrl + "/api/services/app/IncomeSourceService/GetIncomeSources";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetIncomeSources(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetIncomeSources(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetIncomeSources(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateIncomeSourceRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getIncomeSourceById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/IncomeSourceService/GetIncomeSourceById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetIncomeSourceById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetIncomeSourceById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetIncomeSourceById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateIncomeSourceRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
IncomeSourceServiceServiceProxy.ɵfac = function IncomeSourceServiceServiceProxy_Factory(t) { return new (t || IncomeSourceServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
IncomeSourceServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: IncomeSourceServiceServiceProxy, factory: IncomeSourceServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](IncomeSourceServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class IncomeTypeServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addIncomeType(body) {
        let url_ = this.baseUrl + "/api/services/app/IncomeTypeService/AddIncomeType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddIncomeType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddIncomeType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddIncomeType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateIncomeType(body) {
        let url_ = this.baseUrl + "/api/services/app/IncomeTypeService/UpdateIncomeType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateIncomeType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateIncomeType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateIncomeType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteIncomeType(id) {
        let url_ = this.baseUrl + "/api/services/app/IncomeTypeService/DeleteIncomeType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteIncomeType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteIncomeType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteIncomeType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getIncomeTypes() {
        let url_ = this.baseUrl + "/api/services/app/IncomeTypeService/GetIncomeTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetIncomeTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetIncomeTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetIncomeTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateIncomeTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getIncomeTypeById(id) {
        let url_ = this.baseUrl + "/api/services/app/IncomeTypeService/GetIncomeTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetIncomeTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetIncomeTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetIncomeTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateIncomeTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
IncomeTypeServiceServiceProxy.ɵfac = function IncomeTypeServiceServiceProxy_Factory(t) { return new (t || IncomeTypeServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
IncomeTypeServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: IncomeTypeServiceServiceProxy, factory: IncomeTypeServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](IncomeTypeServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadApplicationQuestionsServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationQuestionsService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadApplicationQuestionsService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationQuestionsService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadApplicationQuestions.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadApplicationQuestionsService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadApplicationQuestions.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationQuestionsService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadApplicationQuestionsServiceServiceProxy.ɵfac = function LeadApplicationQuestionsServiceServiceProxy_Factory(t) { return new (t || LeadApplicationQuestionsServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadApplicationQuestionsServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadApplicationQuestionsServiceServiceProxy, factory: LeadApplicationQuestionsServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadApplicationQuestionsServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadApplicationTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadApplicationType.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadApplicationType.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadApplicationTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadApplicationTypesServiceServiceProxy.ɵfac = function LeadApplicationTypesServiceServiceProxy_Factory(t) { return new (t || LeadApplicationTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadApplicationTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadApplicationTypesServiceServiceProxy, factory: LeadApplicationTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadApplicationTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadAssetDetailsServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetDetailsService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetDetailsService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetDetailsService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadAssetDetails.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetDetailsService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadAssetDetails.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetDetailsService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadAssetDetailsServiceServiceProxy.ɵfac = function LeadAssetDetailsServiceServiceProxy_Factory(t) { return new (t || LeadAssetDetailsServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadAssetDetailsServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadAssetDetailsServiceServiceProxy, factory: LeadAssetDetailsServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadAssetDetailsServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadAssetTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadAssetTypes.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadAssetTypes.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadAssetTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadAssetTypesServiceServiceProxy.ɵfac = function LeadAssetTypesServiceServiceProxy_Factory(t) { return new (t || LeadAssetTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadAssetTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadAssetTypesServiceServiceProxy, factory: LeadAssetTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadAssetTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadEmploymentDetailsServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentDetailsService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentDetailsService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentDetailsService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadEmploymentDetails.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentDetailsService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadEmploymentDetails.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentDetailsService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadEmploymentDetailsServiceServiceProxy.ɵfac = function LeadEmploymentDetailsServiceServiceProxy_Factory(t) { return new (t || LeadEmploymentDetailsServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadEmploymentDetailsServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadEmploymentDetailsServiceServiceProxy, factory: LeadEmploymentDetailsServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadEmploymentDetailsServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadEmploymentTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadEmploymentTypes.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadEmploymentTypes.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadEmploymentTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadEmploymentTypesServiceServiceProxy.ɵfac = function LeadEmploymentTypesServiceServiceProxy_Factory(t) { return new (t || LeadEmploymentTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadEmploymentTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadEmploymentTypesServiceServiceProxy, factory: LeadEmploymentTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadEmploymentTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadIncomeTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadIncomeTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadIncomeTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadIncomeTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadIncomeTypes.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadIncomeTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadIncomeTypes.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadIncomeTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadIncomeTypesServiceServiceProxy.ɵfac = function LeadIncomeTypesServiceServiceProxy_Factory(t) { return new (t || LeadIncomeTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadIncomeTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadIncomeTypesServiceServiceProxy, factory: LeadIncomeTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadIncomeTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadOwnerTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadOwnerTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadOwnerTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadOwnerTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadOwnerTypes.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadOwnerTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadOwnerTypes.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadOwnerTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadOwnerTypesServiceServiceProxy.ɵfac = function LeadOwnerTypesServiceServiceProxy_Factory(t) { return new (t || LeadOwnerTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadOwnerTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadOwnerTypesServiceServiceProxy, factory: LeadOwnerTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadOwnerTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadPurchasingDetailServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadPurchasingDetailService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadPurchasingDetailService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadPurchasingDetailService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadPurchasingDetail.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadPurchasingDetailService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadPurchasingDetail.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadPurchasingDetailService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadPurchasingDetailServiceServiceProxy.ɵfac = function LeadPurchasingDetailServiceServiceProxy_Factory(t) { return new (t || LeadPurchasingDetailServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadPurchasingDetailServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadPurchasingDetailServiceServiceProxy, factory: LeadPurchasingDetailServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadPurchasingDetailServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadQuestionAnswersServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadQuestionAnswersService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadQuestionAnswersService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadQuestionAnswersService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadQuestionAnswers.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadQuestionAnswersService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadQuestionAnswers.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadQuestionAnswersService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadQuestionAnswersServiceServiceProxy.ɵfac = function LeadQuestionAnswersServiceServiceProxy_Factory(t) { return new (t || LeadQuestionAnswersServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadQuestionAnswersServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadQuestionAnswersServiceServiceProxy, factory: LeadQuestionAnswersServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadQuestionAnswersServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadRefinancingDetailsServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadRefinancingDetailsService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadRefinancingDetailsService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadRefinancingDetailsService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadRefinancingDetails.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadRefinancingDetailsService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadRefinancingDetails.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadRefinancingDetailsService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadRefinancingDetailsServiceServiceProxy.ɵfac = function LeadRefinancingDetailsServiceServiceProxy_Factory(t) { return new (t || LeadRefinancingDetailsServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadRefinancingDetailsServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadRefinancingDetailsServiceServiceProxy, factory: LeadRefinancingDetailsServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadRefinancingDetailsServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadRefinancingIncomeDetailsServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadRefinancingIncomeDetailsService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadRefinancingIncomeDetailsService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadRefinancingIncomeDetailsService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl +
            "/api/services/app/LeadRefinancingIncomeDetailsService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadRefinancingIncomeDetails.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LeadRefinancingIncomeDetailsService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadRefinancingIncomeDetails.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadRefinancingIncomeDetailsServiceServiceProxy.ɵfac = function LeadRefinancingIncomeDetailsServiceServiceProxy_Factory(t) { return new (t || LeadRefinancingIncomeDetailsServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadRefinancingIncomeDetailsServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadRefinancingIncomeDetailsServiceServiceProxy, factory: LeadRefinancingIncomeDetailsServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadRefinancingIncomeDetailsServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LeadTaxTypesServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    add(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadTaxTypesService/Add";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAdd(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAdd(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAdd(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LeadTaxTypesService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadTaxTypesService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAll() {
        let url_ = this.baseUrl + "/api/services/app/LeadTaxTypesService/GetAll";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLeadTaxTypes.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getById(id) {
        let url_ = this.baseUrl + "/api/services/app/LeadTaxTypesService/GetById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLeadTaxTypes.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LeadTaxTypesServiceServiceProxy.ɵfac = function LeadTaxTypesServiceServiceProxy_Factory(t) { return new (t || LeadTaxTypesServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LeadTaxTypesServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LeadTaxTypesServiceServiceProxy, factory: LeadTaxTypesServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LeadTaxTypesServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LoanServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/Loan/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanApplicationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/Loan/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanApplicationDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAllCustom(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/Loan/GetAllCustom?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllCustom(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllCustom(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllCustom(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanListDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/Loan/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanApplicationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/Loan/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanApplicationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/Loan/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LoanServiceProxy.ɵfac = function LoanServiceProxy_Factory(t) { return new (t || LoanServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LoanServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LoanServiceProxy, factory: LoanServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LoanServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LoanDetailServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanDetailServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanDetailDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/LoanDetailServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanDetailDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanDetailServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanDetailDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanDetailServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = LoanDetailDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanDetailServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LoanDetailServicesServiceProxy.ɵfac = function LoanDetailServicesServiceProxy_Factory(t) { return new (t || LoanDetailServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LoanDetailServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LoanDetailServicesServiceProxy, factory: LoanDetailServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LoanDetailServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class LoanServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanPropertyGiftType(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/AddLoanPropertyGiftType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanPropertyGiftType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanPropertyGiftType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanPropertyGiftType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanPropertyGiftType(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/UpdateLoanPropertyGiftType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanPropertyGiftType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanPropertyGiftType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanPropertyGiftType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanPropertyGiftType(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanPropertyGiftType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanPropertyGiftType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanPropertyGiftType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanPropertyGiftType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanPropertyGiftTypes() {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetLoanPropertyGiftTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanPropertyGiftTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanPropertyGiftTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanPropertyGiftTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanPropertyGiftTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanPropertyGiftTypeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanPropertyGiftTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanPropertyGiftTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanPropertyGiftTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanPropertyGiftTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanPropertyGiftTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanPropertyOccupancy(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/AddLoanPropertyOccupancy";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanPropertyOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanPropertyOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanPropertyOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanPropertyOccupancy(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanPropertyOccupancy";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanPropertyOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanPropertyOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanPropertyOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanPropertyOccupancy(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanPropertyOccupancy?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanPropertyOccupancy(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanPropertyOccupancy(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanPropertyOccupancy(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanPropertyOccupancies() {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetLoanPropertyOccupancies";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanPropertyOccupancies(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanPropertyOccupancies(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanPropertyOccupancies(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanPropertyOccupancyRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanPropertyOccupancyById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanPropertyOccupancyById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanPropertyOccupancyById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanPropertyOccupancyById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanPropertyOccupancyById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanPropertyOccupancyRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addMortageLoanType(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/AddMortageLoanType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddMortageLoanType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddMortageLoanType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddMortageLoanType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateMortageLoanType(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/UpdateMortageLoanType";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateMortageLoanType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateMortageLoanType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateMortageLoanType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteMortageLoanType(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/DeleteMortageLoanType?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteMortageLoanType(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteMortageLoanType(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteMortageLoanType(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getMortageLoanTypes() {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetMortageLoanTypes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMortageLoanTypes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMortageLoanTypes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMortageLoanTypes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateMortageLoanTypeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getMortageLoanTypeById(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetMortageLoanTypeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMortageLoanTypeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMortageLoanTypeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMortageLoanTypeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateMortageLoanTypeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanAndPropertyInformationGift(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/AddLoanAndPropertyInformationGift";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanAndPropertyInformationGift(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanAndPropertyInformationGift(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanAndPropertyInformationGift(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanAndPropertyInformationGift(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanAndPropertyInformationGift";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanAndPropertyInformationGift(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanAndPropertyInformationGift(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanAndPropertyInformationGift(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanAndPropertyInformationGift(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanAndPropertyInformationGift?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanAndPropertyInformationGift(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanAndPropertyInformationGift(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanAndPropertyInformationGift(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanAndPropertyInformationGifts() {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationGifts";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationGifts(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationGifts(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationGifts(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanAndPropertyInformationGiftRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanAndPropertyInformationGiftById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationGiftById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationGiftById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationGiftById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationGiftById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanAndPropertyInformationGiftRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanAndPropertyInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/AddLoanAndPropertyInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanAndPropertyInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanAndPropertyInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanAndPropertyInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanAndPropertyInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanAndPropertyInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanAndPropertyInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanAndPropertyInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanAndPropertyInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanAndPropertyInformation(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanAndPropertyInformation?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanAndPropertyInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanAndPropertyInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanAndPropertyInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanAndPropertyInformations() {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformations";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformations(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformations(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformations(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanAndPropertyInformationRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanAndPropertyInformationById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanAndPropertyInformationRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanOriginatorInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/AddLoanOriginatorInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanOriginatorInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanOriginatorInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanOriginatorInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanOriginatorInformation(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanOriginatorInformation";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanOriginatorInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanOriginatorInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanOriginatorInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanOriginatorInformation(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanOriginatorInformation?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanOriginatorInformation(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanOriginatorInformation(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanOriginatorInformation(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanOriginatorInformations() {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanOriginatorInformations";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanOriginatorInformations(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanOriginatorInformations(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanOriginatorInformations(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanOriginatorInformationRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanOriginatorInformationById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanOriginatorInformationById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanOriginatorInformationById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanOriginatorInformationById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanOriginatorInformationById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanOriginatorInformationRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanAndPropertyInformationOtherMortageLoan(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/AddLoanAndPropertyInformationOtherMortageLoan";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanAndPropertyInformationOtherMortageLoan(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanAndPropertyInformationOtherMortageLoan(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanAndPropertyInformationOtherMortageLoan(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanAndPropertyInformationOtherMortageLoan(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanAndPropertyInformationOtherMortageLoan";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanAndPropertyInformationOtherMortageLoan(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanAndPropertyInformationOtherMortageLoan(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanAndPropertyInformationOtherMortageLoan(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanAndPropertyInformationOtherMortageLoan(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanAndPropertyInformationOtherMortageLoan?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanAndPropertyInformationOtherMortageLoan(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanAndPropertyInformationOtherMortageLoan(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanAndPropertyInformationOtherMortageLoan(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanAndPropertyInformationOtherMortageLoans() {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationOtherMortageLoans";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationOtherMortageLoans(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationOtherMortageLoans(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationOtherMortageLoans(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanAndPropertyInformationOtherMortageLoanRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanAndPropertyInformationOtherMortageLoanById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationOtherMortageLoanById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationOtherMortageLoanById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationOtherMortageLoanById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationOtherMortageLoanById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanAndPropertyInformationOtherMortageLoanRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addLoanAndPropertyInformationRentalIncome(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/AddLoanAndPropertyInformationRentalIncome";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddLoanAndPropertyInformationRentalIncome(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddLoanAndPropertyInformationRentalIncome(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddLoanAndPropertyInformationRentalIncome(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateLoanAndPropertyInformationRentalIncome(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateLoanAndPropertyInformationRentalIncome";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateLoanAndPropertyInformationRentalIncome(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateLoanAndPropertyInformationRentalIncome(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateLoanAndPropertyInformationRentalIncome(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteLoanAndPropertyInformationRentalIncome(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteLoanAndPropertyInformationRentalIncome?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteLoanAndPropertyInformationRentalIncome(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteLoanAndPropertyInformationRentalIncome(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteLoanAndPropertyInformationRentalIncome(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getLoanAndPropertyInformationRentalIncomes() {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationRentalIncomes";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationRentalIncomes(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationRentalIncomes(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationRentalIncomes(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateLoanAndPropertyInformationRentalIncomeRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanAndPropertyInformationRentalIncomeById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetLoanAndPropertyInformationRentalIncomeById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanAndPropertyInformationRentalIncomeById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanAndPropertyInformationRentalIncomeById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanAndPropertyInformationRentalIncomeById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateLoanAndPropertyInformationRentalIncomeRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addMortageLoanOnProperty(body) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/AddMortageLoanOnProperty";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddMortageLoanOnProperty(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddMortageLoanOnProperty(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddMortageLoanOnProperty(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateMortageLoanOnProperty(body) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/UpdateMortageLoanOnProperty";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateMortageLoanOnProperty(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateMortageLoanOnProperty(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateMortageLoanOnProperty(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteMortageLoanOnProperty(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/DeleteMortageLoanOnProperty?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteMortageLoanOnProperty(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteMortageLoanOnProperty(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteMortageLoanOnProperty(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getMortageLoanOnProperties() {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetMortageLoanOnProperties";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMortageLoanOnProperties(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMortageLoanOnProperties(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMortageLoanOnProperties(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateMortageLoanOnPropertyRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getMortageLoanOnPropertyById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/LoanService/GetMortageLoanOnPropertyById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMortageLoanOnPropertyById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMortageLoanOnPropertyById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMortageLoanOnPropertyById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateMortageLoanOnPropertyRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getLoanApplicationDetail(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/GetLoanApplicationDetail?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetLoanApplicationDetail(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetLoanApplicationDetail(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetLoanApplicationDetail(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = GetPdfDataModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    createPdfNew(id) {
        let url_ = this.baseUrl + "/api/services/app/LoanService/CreatePdfNew?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreatePdfNew(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreatePdfNew(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreatePdfNew(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
LoanServiceServiceProxy.ɵfac = function LoanServiceServiceProxy_Factory(t) { return new (t || LoanServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
LoanServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: LoanServiceServiceProxy, factory: LoanServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LoanServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class ManualAssetEntryServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/ManualAssetEntryService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ManualAssetEntryDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/ManualAssetEntryService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/ManualAssetEntryService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ManualAssetEntryDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/ManualAssetEntryService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ManualAssetEntryDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param loanApplicationId (optional)
     * @return Success
     */
    getAllByLoanApplicationId(loanApplicationId) {
        let url_ = this.baseUrl +
            "/api/services/app/ManualAssetEntryService/GetAllByLoanApplicationId?";
        if (loanApplicationId === null)
            throw new Error("The parameter 'loanApplicationId' cannot be null.");
        else if (loanApplicationId !== undefined)
            url_ +=
                "loanApplicationId=" + encodeURIComponent("" + loanApplicationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllByLoanApplicationId(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllByLoanApplicationId(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllByLoanApplicationId(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(Manualassetentry.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/ManualAssetEntryService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ManualAssetEntryDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
ManualAssetEntryServiceServiceProxy.ɵfac = function ManualAssetEntryServiceServiceProxy_Factory(t) { return new (t || ManualAssetEntryServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
ManualAssetEntryServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: ManualAssetEntryServiceServiceProxy, factory: ManualAssetEntryServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](ManualAssetEntryServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class MaritalStatusServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addMaritalStatus(body) {
        let url_ = this.baseUrl + "/api/services/app/MaritalStatusService/AddMaritalStatus";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddMaritalStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddMaritalStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddMaritalStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateMaritalStatus(body) {
        let url_ = this.baseUrl +
            "/api/services/app/MaritalStatusService/UpdateMaritalStatus";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateMaritalStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateMaritalStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateMaritalStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteMaritalStatus(id) {
        let url_ = this.baseUrl +
            "/api/services/app/MaritalStatusService/DeleteMaritalStatus?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteMaritalStatus(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteMaritalStatus(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteMaritalStatus(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getMaritalStatuses() {
        let url_ = this.baseUrl +
            "/api/services/app/MaritalStatusService/GetMaritalStatuses";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMaritalStatuses(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMaritalStatuses(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMaritalStatuses(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateMaritalStatusRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getMaritalStatusById(id) {
        let url_ = this.baseUrl +
            "/api/services/app/MaritalStatusService/GetMaritalStatusById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetMaritalStatusById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetMaritalStatusById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetMaritalStatusById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateMaritalStatusRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
MaritalStatusServiceServiceProxy.ɵfac = function MaritalStatusServiceServiceProxy_Factory(t) { return new (t || MaritalStatusServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
MaritalStatusServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: MaritalStatusServiceServiceProxy, factory: MaritalStatusServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](MaritalStatusServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class PersonalDetailServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/PersonalDetailServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = PersonalInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/PersonalDetailServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = PersonalInformationDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/PersonalDetailServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = PersonalInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/PersonalDetailServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = PersonalInformationDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/PersonalDetailServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
PersonalDetailServicesServiceProxy.ɵfac = function PersonalDetailServicesServiceProxy_Factory(t) { return new (t || PersonalDetailServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
PersonalDetailServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: PersonalDetailServicesServiceProxy, factory: PersonalDetailServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](PersonalDetailServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class RefinanceHomeBuyingServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/RefinanceHomeBuyingService/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RefinanceHomeBuyingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/RefinanceHomeBuyingService/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/RefinanceHomeBuyingService/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RefinanceHomeBuyingDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/RefinanceHomeBuyingService/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RefinanceHomeBuyingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/RefinanceHomeBuyingService/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RefinanceHomeBuyingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
RefinanceHomeBuyingServiceServiceProxy.ɵfac = function RefinanceHomeBuyingServiceServiceProxy_Factory(t) { return new (t || RefinanceHomeBuyingServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
RefinanceHomeBuyingServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: RefinanceHomeBuyingServiceServiceProxy, factory: RefinanceHomeBuyingServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](RefinanceHomeBuyingServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class RoleServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/Role/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param permission (optional)
     * @return Success
     */
    getRoles(permission) {
        let url_ = this.baseUrl + "/api/services/app/Role/GetRoles?";
        if (permission === null)
            throw new Error("The parameter 'permission' cannot be null.");
        else if (permission !== undefined)
            url_ += "Permission=" + encodeURIComponent("" + permission) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetRoles(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetRoles(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoles(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleListDtoListResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/Role/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/Role/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getAllPermissions() {
        let url_ = this.baseUrl + "/api/services/app/Role/GetAllPermissions";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAllPermissions(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAllPermissions(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAllPermissions(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = PermissionDtoListResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getRoleForEdit(id) {
        let url_ = this.baseUrl + "/api/services/app/Role/GetRoleForEdit?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetRoleForEdit(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetRoleForEdit(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoleForEdit(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = GetRoleForEditOutput.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/Role/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/Role/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
RoleServiceProxy.ɵfac = function RoleServiceProxy_Factory(t) { return new (t || RoleServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
RoleServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: RoleServiceProxy, factory: RoleServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](RoleServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class SessionServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @return Success
     */
    getCurrentLoginInformations() {
        let url_ = this.baseUrl + "/api/services/app/Session/GetCurrentLoginInformations";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetCurrentLoginInformations(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetCurrentLoginInformations(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetCurrentLoginInformations(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = GetCurrentLoginInformationsOutput.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
SessionServiceProxy.ɵfac = function SessionServiceProxy_Factory(t) { return new (t || SessionServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
SessionServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: SessionServiceProxy, factory: SessionServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](SessionServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class SiteSettingServicesServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/SiteSettingServices/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = SiteSettingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/SiteSettingServices/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/SiteSettingServices/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = SiteSettingDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/SiteSettingServices/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = SiteSettingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/SiteSettingServices/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = SiteSettingDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
SiteSettingServicesServiceProxy.ɵfac = function SiteSettingServicesServiceProxy_Factory(t) { return new (t || SiteSettingServicesServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
SiteSettingServicesServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: SiteSettingServicesServiceProxy, factory: SiteSettingServicesServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](SiteSettingServicesServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class StateServiceServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    addState(body) {
        let url_ = this.baseUrl + "/api/services/app/StateService/AddState";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAddState(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAddState(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAddState(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    updateState(body) {
        let url_ = this.baseUrl + "/api/services/app/StateService/UpdateState";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdateState(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdateState(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdateState(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    deleteState(id) {
        let url_ = this.baseUrl + "/api/services/app/StateService/DeleteState?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDeleteState(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDeleteState(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDeleteState(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getStates() {
        let url_ = this.baseUrl + "/api/services/app/StateService/GetStates";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetStates(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetStates(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetStates(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(UpdateStateRequest.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    getStateById(id) {
        let url_ = this.baseUrl + "/api/services/app/StateService/GetStateById?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetStateById(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetStateById(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetStateById(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UpdateStateRequest.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
StateServiceServiceProxy.ɵfac = function StateServiceServiceProxy_Factory(t) { return new (t || StateServiceServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
StateServiceServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: StateServiceServiceProxy, factory: StateServiceServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](StateServiceServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class TenantServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/Tenant/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = TenantDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/Tenant/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/Tenant/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = TenantDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param isActive (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, isActive, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/Tenant/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (isActive === null)
            throw new Error("The parameter 'isActive' cannot be null.");
        else if (isActive !== undefined)
            url_ += "IsActive=" + encodeURIComponent("" + isActive) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = TenantDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/Tenant/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = TenantDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
TenantServiceProxy.ɵfac = function TenantServiceProxy_Factory(t) { return new (t || TenantServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
TenantServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: TenantServiceProxy, factory: TenantServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](TenantServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class TokenAuthServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    authenticate(body) {
        let url_ = this.baseUrl + "/api/TokenAuth/Authenticate";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processAuthenticate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processAuthenticate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processAuthenticate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = AuthenticateResultModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getExternalAuthenticationProviders() {
        let url_ = this.baseUrl + "/api/TokenAuth/GetExternalAuthenticationProviders";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetExternalAuthenticationProviders(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetExternalAuthenticationProviders(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetExternalAuthenticationProviders(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                if (Array.isArray(resultData200)) {
                    result200 = [];
                    for (let item of resultData200)
                        result200.push(ExternalLoginProviderInfoModel.fromJS(item));
                }
                else {
                    result200 = null;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    externalAuthenticate(body) {
        let url_ = this.baseUrl + "/api/TokenAuth/ExternalAuthenticate";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processExternalAuthenticate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processExternalAuthenticate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processExternalAuthenticate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = ExternalAuthenticateResultModel.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
TokenAuthServiceProxy.ɵfac = function TokenAuthServiceProxy_Factory(t) { return new (t || TokenAuthServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
TokenAuthServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: TokenAuthServiceProxy, factory: TokenAuthServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](TokenAuthServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class UserServiceProxy {
    constructor(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * @param body (optional)
     * @return Success
     */
    create(body) {
        let url_ = this.baseUrl + "/api/services/app/User/Create";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processCreate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    update(body) {
        let url_ = this.baseUrl + "/api/services/app/User/Update";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("put", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processUpdate(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    delete(id) {
        let url_ = this.baseUrl + "/api/services/app/User/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({}),
        };
        return this.http
            .request("delete", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processDelete(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processDelete(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processDelete(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @return Success
     */
    getRoles() {
        let url_ = this.baseUrl + "/api/services/app/User/GetRoles";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetRoles(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetRoles(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetRoles(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = RoleDtoListResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    changeLanguage(body) {
        let url_ = this.baseUrl + "/api/services/app/User/ChangeLanguage";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processChangeLanguage(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processChangeLanguage(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processChangeLanguage(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    changePassword(body) {
        let url_ = this.baseUrl + "/api/services/app/User/ChangePassword";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processChangePassword(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processChangePassword(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processChangePassword(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param body (optional)
     * @return Success
     */
    resetPassword(body) {
        let url_ = this.baseUrl + "/api/services/app/User/ResetPassword";
        url_ = url_.replace(/[?&]$/, "");
        const content_ = JSON.stringify(body);
        let options_ = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                "Content-Type": "application/json-patch+json",
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("post", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processResetPassword(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processResetPassword(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processResetPassword(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param id (optional)
     * @return Success
     */
    get(id) {
        let url_ = this.baseUrl + "/api/services/app/User/Get?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "Id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGet(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGet(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGet(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
    /**
     * @param keyword (optional)
     * @param isActive (optional)
     * @param skipCount (optional)
     * @param maxResultCount (optional)
     * @return Success
     */
    getAll(keyword, isActive, skipCount, maxResultCount) {
        let url_ = this.baseUrl + "/api/services/app/User/GetAll?";
        if (keyword === null)
            throw new Error("The parameter 'keyword' cannot be null.");
        else if (keyword !== undefined)
            url_ += "Keyword=" + encodeURIComponent("" + keyword) + "&";
        if (isActive === null)
            throw new Error("The parameter 'isActive' cannot be null.");
        else if (isActive !== undefined)
            url_ += "IsActive=" + encodeURIComponent("" + isActive) + "&";
        if (skipCount === null)
            throw new Error("The parameter 'skipCount' cannot be null.");
        else if (skipCount !== undefined)
            url_ += "SkipCount=" + encodeURIComponent("" + skipCount) + "&";
        if (maxResultCount === null)
            throw new Error("The parameter 'maxResultCount' cannot be null.");
        else if (maxResultCount !== undefined)
            url_ += "MaxResultCount=" + encodeURIComponent("" + maxResultCount) + "&";
        url_ = url_.replace(/[?&]$/, "");
        let options_ = {
            observe: "response",
            responseType: "blob",
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                Accept: "text/plain",
            }),
        };
        return this.http
            .request("get", url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((response_) => {
            return this.processGetAll(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["catchError"])((response_) => {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponseBase"]) {
                try {
                    return this.processGetAll(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(response_);
        }));
    }
    processGetAll(response) {
        const status = response.status;
        const responseBlob = response instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpResponse"]
            ? response.body
            : response.error instanceof Blob
                ? response.error
                : undefined;
        let _headers = {};
        if (response.headers) {
            for (let key of response.headers.keys()) {
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                let result200 = null;
                let resultData200 = _responseText === ""
                    ? null
                    : JSON.parse(_responseText, this.jsonParseReviver);
                result200 = UserDtoPagedResultDto.fromJS(resultData200);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(result200);
            }));
        }
        else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])((_responseText) => {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    }
}
UserServiceProxy.ɵfac = function UserServiceProxy_Factory(t) { return new (t || UserServiceProxy)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](API_BASE_URL, 8)); };
UserServiceProxy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: UserServiceProxy, factory: UserServiceProxy.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](UserServiceProxy, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
                args: [API_BASE_URL]
            }] }]; }, null); })();
class AddAccountTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialAccountType1 = _data["financialAccountType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAccountTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialAccountType1"] = this.financialAccountType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAccountTypeRequest();
        result.init(json);
        return result;
    }
}
class AddAdminDisclosure {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.title = _data["title"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminDisclosure();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["title"] = this.title;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminDisclosure();
        result.init(json);
        return result;
    }
}
class AddAdminLoanApplicationDocument {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanId = _data["loanId"];
            this.disclosureId = _data["disclosureId"];
            this.userId = _data["userId"];
            this.updatedOn = _data["updatedOn"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["updatedOn"].toString())
                : undefined;
            this.documentPath = _data["documentPath"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminLoanApplicationDocument();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanId"] = this.loanId;
        data["disclosureId"] = this.disclosureId;
        data["userId"] = this.userId;
        data["updatedOn"] = this.updatedOn
            ? this.updatedOn.toISOString()
            : undefined;
        data["documentPath"] = this.documentPath;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminLoanApplicationDocument();
        result.init(json);
        return result;
    }
}
class AddAdminLoanDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanApplicationId = _data["loanApplicationId"];
            this.loanNo = _data["loanNo"];
            this.mortageConsultant = _data["mortageConsultant"];
            this.nmlsId = _data["nmlsId"];
            this.borrowerName = _data["borrowerName"];
            this.propertyAddress = _data["propertyAddress"];
            this.loanProgramId = _data["loanProgramId"];
            this.loanAmount = _data["loanAmount"];
            this.loanPurpose = _data["loanPurpose"];
            this.interestRate = _data["interestRate"];
            this.applicationDate = _data["applicationDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["applicationDate"].toString())
                : undefined;
            this.rateLockDate = _data["rateLockDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["rateLockDate"].toString())
                : undefined;
            this.rateLockExpirationDate = _data["rateLockExpirationDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["rateLockExpirationDate"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminLoanDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanApplicationId"] = this.loanApplicationId;
        data["loanNo"] = this.loanNo;
        data["mortageConsultant"] = this.mortageConsultant;
        data["nmlsId"] = this.nmlsId;
        data["borrowerName"] = this.borrowerName;
        data["propertyAddress"] = this.propertyAddress;
        data["loanProgramId"] = this.loanProgramId;
        data["loanAmount"] = this.loanAmount;
        data["loanPurpose"] = this.loanPurpose;
        data["interestRate"] = this.interestRate;
        data["applicationDate"] = this.applicationDate
            ? this.applicationDate.toISOString()
            : undefined;
        data["rateLockDate"] = this.rateLockDate
            ? this.rateLockDate.toISOString()
            : undefined;
        data["rateLockExpirationDate"] = this.rateLockExpirationDate
            ? this.rateLockExpirationDate.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminLoanDetail();
        result.init(json);
        return result;
    }
}
class AddAdminLoanProgram {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanProgram = _data["loanProgram"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminLoanProgram();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanProgram"] = this.loanProgram;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminLoanProgram();
        result.init(json);
        return result;
    }
}
class AddAdminLoanStatus {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.status = _data["status"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminLoanStatus();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["status"] = this.status;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminLoanStatus();
        result.init(json);
        return result;
    }
}
class AddAdminLoanSummaryStatus {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanId = _data["loanId"];
            this.statusId = _data["statusId"];
            this.updatedOn = _data["updatedOn"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["updatedOn"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminLoanSummaryStatus();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanId"] = this.loanId;
        data["statusId"] = this.statusId;
        data["updatedOn"] = this.updatedOn
            ? this.updatedOn.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminLoanSummaryStatus();
        result.init(json);
        return result;
    }
}
class AddAdminUserEnabledDevice {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.deviceId = _data["deviceId"];
            this.bioMetricData = _data["bioMetricData"];
            this.isEnabled = _data["isEnabled"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddAdminUserEnabledDevice();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["deviceId"] = this.deviceId;
        data["bioMetricData"] = this.bioMetricData;
        data["isEnabled"] = this.isEnabled;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddAdminUserEnabledDevice();
        result.init(json);
        return result;
    }
}
class AddCitizenshipTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.citizenshipType1 = _data["citizenshipType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddCitizenshipTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["citizenshipType1"] = this.citizenshipType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddCitizenshipTypeRequest();
        result.init(json);
        return result;
    }
}
class AddCityRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.stateId = _data["stateId"];
            this.cityName = _data["cityName"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddCityRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["stateId"] = this.stateId;
        data["cityName"] = this.cityName;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddCityRequest();
        result.init(json);
        return result;
    }
}
class AddCountryRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.countryName = _data["countryName"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddCountryRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["countryName"] = this.countryName;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddCountryRequest();
        result.init(json);
        return result;
    }
}
class AddCreditTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.creditType1 = _data["creditType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddCreditTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["creditType1"] = this.creditType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddCreditTypeRequest();
        result.init(json);
        return result;
    }
}
class AddDeclarationCategoryRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.declarationCategory1 = _data["declarationCategory1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddDeclarationCategoryRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["declarationCategory1"] = this.declarationCategory1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddDeclarationCategoryRequest();
        result.init(json);
        return result;
    }
}
class AddDeclarationQuestionRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.declarationCategoryId = _data["declarationCategoryId"];
            this.parentQuestionId = _data["parentQuestionId"];
            this.question = _data["question"];
            this.isActive = _data["isActive"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddDeclarationQuestionRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["declarationCategoryId"] = this.declarationCategoryId;
        data["parentQuestionId"] = this.parentQuestionId;
        data["question"] = this.question;
        data["isActive"] = this.isActive;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddDeclarationQuestionRequest();
        result.init(json);
        return result;
    }
}
class AddDemographicInfoSourceRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.value = _data["value"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddDemographicInfoSourceRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["value"] = this.value;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddDemographicInfoSourceRequest();
        result.init(json);
        return result;
    }
}
class AddDemographicInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.ethnicity81 = _data["ethnicity81"];
            this.gender82 = _data["gender82"];
            this.race83 = _data["race83"];
            this.isEthnicityByObservation84 = _data["isEthnicityByObservation84"];
            this.isGenderByObservation85 = _data["isGenderByObservation85"];
            this.isRaceByObservation86 = _data["isRaceByObservation86"];
            this.demographicInfoSourceId87 = _data["demographicInfoSourceId87"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddDemographicInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["ethnicity81"] = this.ethnicity81;
        data["gender82"] = this.gender82;
        data["race83"] = this.race83;
        data["isEthnicityByObservation84"] = this.isEthnicityByObservation84;
        data["isGenderByObservation85"] = this.isGenderByObservation85;
        data["isRaceByObservation86"] = this.isRaceByObservation86;
        data["demographicInfoSourceId87"] = this.demographicInfoSourceId87;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddDemographicInformationRequest();
        result.init(json);
        return result;
    }
}
class AddHousingTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.housingType1 = _data["housingType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddHousingTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["housingType1"] = this.housingType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddHousingTypeRequest();
        result.init(json);
        return result;
    }
}
class AddIncomeSourceRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeSource1 = _data["incomeSource1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddIncomeSourceRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeSource1"] = this.incomeSource1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddIncomeSourceRequest();
        result.init(json);
        return result;
    }
}
class AddIncomeTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeType1 = _data["incomeType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddIncomeTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeType1"] = this.incomeType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddIncomeTypeRequest();
        result.init(json);
        return result;
    }
}
class AddLaibilitiesTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialLaibilitiesType1 = _data["financialLaibilitiesType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLaibilitiesTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialLaibilitiesType1"] = this.financialLaibilitiesType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLaibilitiesTypeRequest();
        result.init(json);
        return result;
    }
}
class AddLeadApplicationQuestions {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.question = _data["question"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadApplicationQuestions();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["question"] = this.question;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadApplicationQuestions();
        result.init(json);
        return result;
    }
}
class AddLeadApplicationType {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationType = _data["applicationType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadApplicationType();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationType"] = this.applicationType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadApplicationType();
        result.init(json);
        return result;
    }
}
class AddLeadAssetDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.assetTypeId = _data["assetTypeId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.financialInstitution = _data["financialInstitution"];
            this.balance = _data["balance"];
            this.ownerTypeId = _data["ownerTypeId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadAssetDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["assetTypeId"] = this.assetTypeId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["financialInstitution"] = this.financialInstitution;
        data["balance"] = this.balance;
        data["ownerTypeId"] = this.ownerTypeId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadAssetDetails();
        result.init(json);
        return result;
    }
}
class AddLeadAssetTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.assetsType = _data["assetsType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadAssetTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["assetsType"] = this.assetsType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadAssetTypes();
        result.init(json);
        return result;
    }
}
class AddLeadEmploymentDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.employeeTypeId = _data["employeeTypeId"];
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.employerName = _data["employerName"];
            this.employementAddress = _data["employementAddress"];
            this.employementSuite = _data["employementSuite"];
            this.employementCity = _data["employementCity"];
            this.employementTaxeId = _data["employementTaxeId"];
            this.employementZip = _data["employementZip"];
            this.employerPhoneNumber = _data["employerPhoneNumber"];
            this.isCurrentJob = _data["isCurrentJob"];
            this.estimatedStartDate = _data["estimatedStartDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["estimatedStartDate"].toString())
                : undefined;
            this.jobTitle = _data["jobTitle"];
            this.estimatedAnnualBaseSalary = _data["estimatedAnnualBaseSalary"];
            this.estimatedAnnualBonus = _data["estimatedAnnualBonus"];
            this.estimatedAnnualCommission = _data["estimatedAnnualCommission"];
            this.estimatedAnnualOvertime = _data["estimatedAnnualOvertime"];
            this.isCoBorrower = _data["isCoBorrower"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadEmploymentDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["employeeTypeId"] = this.employeeTypeId;
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["employerName"] = this.employerName;
        data["employementAddress"] = this.employementAddress;
        data["employementSuite"] = this.employementSuite;
        data["employementCity"] = this.employementCity;
        data["employementTaxeId"] = this.employementTaxeId;
        data["employementZip"] = this.employementZip;
        data["employerPhoneNumber"] = this.employerPhoneNumber;
        data["isCurrentJob"] = this.isCurrentJob;
        data["estimatedStartDate"] = this.estimatedStartDate
            ? this.estimatedStartDate.toString()
            : undefined;
        data["jobTitle"] = this.jobTitle;
        data["estimatedAnnualBaseSalary"] = this.estimatedAnnualBaseSalary;
        data["estimatedAnnualBonus"] = this.estimatedAnnualBonus;
        data["estimatedAnnualCommission"] = this.estimatedAnnualCommission;
        data["estimatedAnnualOvertime"] = this.estimatedAnnualOvertime;
        data["isCoBorrower"] = this.isCoBorrower;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadEmploymentDetails();
        result.init(json);
        return result;
    }
}
class AddLeadEmploymentTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.employementType = _data["employementType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadEmploymentTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["employementType"] = this.employementType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadEmploymentTypes();
        result.init(json);
        return result;
    }
}
class AddLeadIncomeTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeType = _data["incomeType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadIncomeTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeType"] = this.incomeType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadIncomeTypes();
        result.init(json);
        return result;
    }
}
class AddLeadOwnerTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.ownerType = _data["ownerType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadOwnerTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["ownerType"] = this.ownerType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadOwnerTypes();
        result.init(json);
        return result;
    }
}
class AddLeadPurchasingDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.stage = _data["stage"];
            this.isWorkingWithEzalready = _data["isWorkingWithEzalready"];
            this.workingOfficerName = _data["workingOfficerName"];
            this.newHomeAddress = _data["newHomeAddress"];
            this.newHomeUnit = _data["newHomeUnit"];
            this.newHomeCity = _data["newHomeCity"];
            this.newHomeStateId = _data["newHomeStateId"];
            this.newHomeZipCode = _data["newHomeZipCode"];
            this.contractClosingDate = _data["contractClosingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["contractClosingDate"].toString())
                : undefined;
            this.contractType = _data["contractType"];
            this.estimatedHomePrice = _data["estimatedHomePrice"];
            this.downPaymentAmount = _data["downPaymentAmount"];
            this.downPaymentPercentage = _data["downPaymentPercentage"];
            this.estimatedAnnualTax = _data["estimatedAnnualTax"];
            this.estimatedAnnualHomeInsurance = _data["estimatedAnnualHomeInsurance"];
            this.creditScore = _data["creditScore"];
            this.propertyLegalFirstName = _data["propertyLegalFirstName"];
            this.propertyMiddleInitial = _data["propertyMiddleInitial"];
            this.propertyLegalLastName = _data["propertyLegalLastName"];
            this.propertyPhoneNumber = _data["propertyPhoneNumber"];
            this.propertyEmailAddress = _data["propertyEmailAddress"];
            this.typeOfHome = _data["typeOfHome"];
            this.monthlyHoadues = _data["monthlyHoadues"];
            this.typeOfNewHome = _data["typeOfNewHome"];
            this.isMilitaryMember = _data["isMilitaryMember"];
            this.currentMilitaryStatus = _data["currentMilitaryStatus"];
            this.militaryBranch = _data["militaryBranch"];
            this.isEtsdateinYear = _data["isEtsdateinYear"];
            this.etsdate = _data["etsdate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["etsdate"].toString())
                : undefined;
            this.isValoanPreviously = _data["isValoanPreviously"];
            this.whoLivingInHome = _data["whoLivingInHome"];
            this.personalLegalFirstName = _data["personalLegalFirstName"];
            this.personalMiddleInitial = _data["personalMiddleInitial"];
            this.personalLegalLastName = _data["personalLegalLastName"];
            this.personalPhoneNumber = _data["personalPhoneNumber"];
            this.personalEmailAddress = _data["personalEmailAddress"];
            this.personalPassword = _data["personalPassword"];
            this.isSomeOneRefer = _data["isSomeOneRefer"];
            this.isApplyOwn = _data["isApplyOwn"];
            this.maritialStatus = _data["maritialStatus"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.currentAddress = _data["currentAddress"];
            this.currentUnit = _data["currentUnit"];
            this.currentCity = _data["currentCity"];
            this.currentStateId = _data["currentStateId"];
            this.currentZipCode = _data["currentZipCode"];
            this.currentStartLivingDate = _data["currentStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["currentStartLivingDate"].toString())
                : undefined;
            this.currentReantingType = _data["currentReantingType"];
            this.estimatedMonthlyExpenses = _data["estimatedMonthlyExpenses"];
            this.isEmployementHistory = _data["isEmployementHistory"];
            this.isOtherSourceOfIncome = _data["isOtherSourceOfIncome"];
            this.sex = _data["sex"];
            this.ethnicity = _data["ethnicity"];
            this.race = _data["race"];
            this.citizenshipId = _data["citizenshipId"];
            this.isCertify = _data["isCertify"];
            this.isReadEconsent = _data["isReadEconsent"];
            this.isReadThirdPartyConsent = _data["isReadThirdPartyConsent"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.conformSsn = _data["conformSsn"];
            this.birthDate = _data["birthDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["birthDate"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadPurchasingDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["stage"] = this.stage;
        data["isWorkingWithEzalready"] = this.isWorkingWithEzalready;
        data["workingOfficerName"] = this.workingOfficerName;
        data["newHomeAddress"] = this.newHomeAddress;
        data["newHomeUnit"] = this.newHomeUnit;
        data["newHomeCity"] = this.newHomeCity;
        data["newHomeStateId"] = this.newHomeStateId;
        data["newHomeZipCode"] = this.newHomeZipCode;
        data["contractClosingDate"] = this.contractClosingDate
            ? this.contractClosingDate.toISOString()
            : undefined;
        data["contractType"] = this.contractType;
        data["estimatedHomePrice"] = this.estimatedHomePrice;
        data["downPaymentAmount"] = this.downPaymentAmount;
        data["downPaymentPercentage"] = this.downPaymentPercentage;
        data["estimatedAnnualTax"] = this.estimatedAnnualTax;
        data["estimatedAnnualHomeInsurance"] = this.estimatedAnnualHomeInsurance;
        data["creditScore"] = this.creditScore;
        data["propertyLegalFirstName"] = this.propertyLegalFirstName;
        data["propertyMiddleInitial"] = this.propertyMiddleInitial;
        data["propertyLegalLastName"] = this.propertyLegalLastName;
        data["propertyPhoneNumber"] = this.propertyPhoneNumber;
        data["propertyEmailAddress"] = this.propertyEmailAddress;
        data["typeOfHome"] = this.typeOfHome;
        data["monthlyHoadues"] = this.monthlyHoadues;
        data["typeOfNewHome"] = this.typeOfNewHome;
        data["isMilitaryMember"] = this.isMilitaryMember;
        data["currentMilitaryStatus"] = this.currentMilitaryStatus;
        data["militaryBranch"] = this.militaryBranch;
        data["isEtsdateinYear"] = this.isEtsdateinYear;
        data["etsdate"] = this.etsdate
            ? this.etsdate.toISOString()
            : undefined;
        data["isValoanPreviously"] = this.isValoanPreviously;
        data["whoLivingInHome"] = this.whoLivingInHome;
        data["personalLegalFirstName"] = this.personalLegalFirstName;
        data["personalMiddleInitial"] = this.personalMiddleInitial;
        data["personalLegalLastName"] = this.personalLegalLastName;
        data["personalPhoneNumber"] = this.personalPhoneNumber;
        data["personalEmailAddress"] = this.personalEmailAddress;
        data["personalPassword"] = this.personalPassword;
        data["isSomeOneRefer"] = this.isSomeOneRefer;
        data["isApplyOwn"] = this.isApplyOwn;
        data["maritialStatus"] = this.maritialStatus;
        data["numberOfDependents"] = this.numberOfDependents;
        data["currentAddress"] = this.currentAddress;
        data["currentUnit"] = this.currentUnit;
        data["currentCity"] = this.currentCity;
        data["currentStateId"] = this.currentStateId;
        data["currentZipCode"] = this.currentZipCode;
        data["currentStartLivingDate"] = this.currentStartLivingDate
            ? this.currentStartLivingDate.toISOString()
            : undefined;
        data["currentReantingType"] = this.currentReantingType;
        data["estimatedMonthlyExpenses"] = this.estimatedMonthlyExpenses;
        data["isEmployementHistory"] = this.isEmployementHistory;
        data["isOtherSourceOfIncome"] = this.isOtherSourceOfIncome;
        data["sex"] = this.sex;
        data["ethnicity"] = this.ethnicity;
        data["race"] = this.race;
        data["citizenshipId"] = this.citizenshipId;
        data["isCertify"] = this.isCertify;
        data["isReadEconsent"] = this.isReadEconsent;
        data["isReadThirdPartyConsent"] = this.isReadThirdPartyConsent;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["conformSsn"] = this.conformSsn;
        data["birthDate"] = this.birthDate
            ? this.birthDate.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadPurchasingDetail();
        result.init(json);
        return result;
    }
}
class AddLeadQuestionAnswers {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.questionId = _data["questionId"];
            this.isYes = _data["isYes"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadQuestionAnswers();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["questionId"] = this.questionId;
        data["isYes"] = this.isYes;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadQuestionAnswers();
        result.init(json);
        return result;
    }
}
class AddLeadRefinancingDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.isWorkingWithEzalready = _data["isWorkingWithEzalready"];
            this.workingOfficerName = _data["workingOfficerName"];
            this.objectiveReason = _data["objectiveReason"];
            this.propertyAddress = _data["propertyAddress"];
            this.propertyUnit = _data["propertyUnit"];
            this.propertyCity = _data["propertyCity"];
            this.propertyZip = _data["propertyZip"];
            this.propertyStateId = _data["propertyStateId"];
            this.propertyCountryId = _data["propertyCountryId"];
            this.propertyEstimatedValue = _data["propertyEstimatedValue"];
            this.propertyLoanBalance = _data["propertyLoanBalance"];
            this.propertCashOutAmount = _data["propertCashOutAmount"];
            this.newLoanEstimateAmount = _data["newLoanEstimateAmount"];
            this.creditScore = _data["creditScore"];
            this.typeOfHome = _data["typeOfHome"];
            this.monthlyHoadues = _data["monthlyHoadues"];
            this.yearHomePurchased = _data["yearHomePurchased"];
            this.orignalPurchasedPrice = _data["orignalPurchasedPrice"];
            this.estimatedAnnualTax = _data["estimatedAnnualTax"];
            this.estimatedAnnualHomeInsurance = _data["estimatedAnnualHomeInsurance"];
            this.currentlyUsingHomeAs = _data["currentlyUsingHomeAs"];
            this.isMilitaryMember = _data["isMilitaryMember"];
            this.currentMilitaryStatus = _data["currentMilitaryStatus"];
            this.militaryBranch = _data["militaryBranch"];
            this.isEtsdateinYear = _data["isEtsdateinYear"];
            this.etsdate = _data["etsdate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["etsdate"].toString())
                : undefined;
            this.isValoanPreviously = _data["isValoanPreviously"];
            this.whoLivingInHome = _data["whoLivingInHome"];
            this.propertyLegalFirstName = _data["propertyLegalFirstName"];
            this.propertyMiddleInitial = _data["propertyMiddleInitial"];
            this.propertyLegalLastName = _data["propertyLegalLastName"];
            this.propertyPhoneNumber = _data["propertyPhoneNumber"];
            this.propertyEmailAddress = _data["propertyEmailAddress"];
            this.propertyPassword = _data["propertyPassword"];
            this.isSomeoneRefer = _data["isSomeoneRefer"];
            this.refferedBy = _data["refferedBy"];
            this.isApplyOwn = _data["isApplyOwn"];
            this.isLegalSpouse = _data["isLegalSpouse"];
            this.maritialStatus = _data["maritialStatus"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.firstDependantAge = _data["firstDependantAge"];
            this.isCurrentlyLivingOnRefinancingProperty =
                _data["isCurrentlyLivingOnRefinancingProperty"];
            this.currentAddress = _data["currentAddress"];
            this.currentUnit = _data["currentUnit"];
            this.currentCity = _data["currentCity"];
            this.currentStateId = _data["currentStateId"];
            this.currentZipCode = _data["currentZipCode"];
            this.currentStartLivingDate = _data["currentStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["currentStartLivingDate"].toString())
                : undefined;
            this.currentReantingType = _data["currentReantingType"];
            this.estimatedMonthlyExpenses = _data["estimatedMonthlyExpenses"];
            this.personalLegalFirstName = _data["personalLegalFirstName"];
            this.personalMiddleInitial = _data["personalMiddleInitial"];
            this.personalLegalLastName = _data["personalLegalLastName"];
            this.personalPhoneNumber = _data["personalPhoneNumber"];
            this.personalEmailAddress = _data["personalEmailAddress"];
            this.personalPassword = _data["personalPassword"];
            this.isAddressSameAsPrimaryBorrower =
                _data["isAddressSameAsPrimaryBorrower"];
            this.personalAddress = _data["personalAddress"];
            this.personalUnit = _data["personalUnit"];
            this.personalCity = _data["personalCity"];
            this.personalStateId = _data["personalStateId"];
            this.personalZipCode = _data["personalZipCode"];
            this.personalStartLivingDate = _data["personalStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["personalStartLivingDate"].toString())
                : undefined;
            this.personalReantingType = _data["personalReantingType"];
            this.isEmployementHistory = _data["isEmployementHistory"];
            this.isCoBorrowerHaveShareIncome = _data["isCoBorrowerHaveShareIncome"];
            this.sex = _data["sex"];
            this.ethnicity = _data["ethnicity"];
            this.race = _data["race"];
            this.citizenshipId = _data["citizenshipId"];
            this.isCertify = _data["isCertify"];
            this.isReadEconsent = _data["isReadEconsent"];
            this.isReadThirdPartyConsent = _data["isReadThirdPartyConsent"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.conformSsn = _data["conformSsn"];
            this.birthDate = _data["birthDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["birthDate"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadRefinancingDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["isWorkingWithEzalready"] = this.isWorkingWithEzalready;
        data["workingOfficerName"] = this.workingOfficerName;
        data["objectiveReason"] = this.objectiveReason;
        data["propertyAddress"] = this.propertyAddress;
        data["propertyUnit"] = this.propertyUnit;
        data["propertyCity"] = this.propertyCity;
        data["propertyZip"] = this.propertyZip;
        data["propertyStateId"] = this.propertyStateId;
        data["propertyCountryId"] = this.propertyCountryId;
        data["propertyEstimatedValue"] = this.propertyEstimatedValue;
        data["propertyLoanBalance"] = this.propertyLoanBalance;
        data["propertCashOutAmount"] = this.propertCashOutAmount;
        data["newLoanEstimateAmount"] = this.newLoanEstimateAmount;
        data["creditScore"] = this.creditScore;
        data["typeOfHome"] = this.typeOfHome;
        data["monthlyHoadues"] = this.monthlyHoadues;
        data["yearHomePurchased"] = this.yearHomePurchased;
        data["orignalPurchasedPrice"] = this.orignalPurchasedPrice;
        data["estimatedAnnualTax"] = this.estimatedAnnualTax;
        data["estimatedAnnualHomeInsurance"] = this.estimatedAnnualHomeInsurance;
        data["currentlyUsingHomeAs"] = this.currentlyUsingHomeAs;
        data["isMilitaryMember"] = this.isMilitaryMember;
        data["currentMilitaryStatus"] = this.currentMilitaryStatus;
        data["militaryBranch"] = this.militaryBranch;
        data["isEtsdateinYear"] = this.isEtsdateinYear;
        data["etsdate"] = this.etsdate
            ? this.etsdate.toISOString()
            : undefined;
        data["isValoanPreviously"] = this.isValoanPreviously;
        data["whoLivingInHome"] = this.whoLivingInHome;
        data["propertyLegalFirstName"] = this.propertyLegalFirstName;
        data["propertyMiddleInitial"] = this.propertyMiddleInitial;
        data["propertyLegalLastName"] = this.propertyLegalLastName;
        data["propertyPhoneNumber"] = this.propertyPhoneNumber;
        data["propertyEmailAddress"] = this.propertyEmailAddress;
        data["propertyPassword"] = this.propertyPassword;
        data["isSomeoneRefer"] = this.isSomeoneRefer;
        data["refferedBy"] = this.refferedBy;
        data["isApplyOwn"] = this.isApplyOwn;
        data["isLegalSpouse"] = this.isLegalSpouse;
        data["maritialStatus"] = this.maritialStatus;
        data["numberOfDependents"] = this.numberOfDependents;
        data["firstDependantAge"] = this.firstDependantAge;
        data["isCurrentlyLivingOnRefinancingProperty"] = this.isCurrentlyLivingOnRefinancingProperty;
        data["currentAddress"] = this.currentAddress;
        data["currentUnit"] = this.currentUnit;
        data["currentCity"] = this.currentCity;
        data["currentStateId"] = this.currentStateId;
        data["currentZipCode"] = this.currentZipCode;
        data["currentStartLivingDate"] = this.currentStartLivingDate
            ? this.currentStartLivingDate.toISOString()
            : undefined;
        data["currentReantingType"] = this.currentReantingType;
        data["estimatedMonthlyExpenses"] = this.estimatedMonthlyExpenses;
        data["personalLegalFirstName"] = this.personalLegalFirstName;
        data["personalMiddleInitial"] = this.personalMiddleInitial;
        data["personalLegalLastName"] = this.personalLegalLastName;
        data["personalPhoneNumber"] = this.personalPhoneNumber;
        data["personalEmailAddress"] = this.personalEmailAddress;
        data["personalPassword"] = this.personalPassword;
        data["isAddressSameAsPrimaryBorrower"] = this.isAddressSameAsPrimaryBorrower;
        data["personalAddress"] = this.personalAddress;
        data["personalUnit"] = this.personalUnit;
        data["personalCity"] = this.personalCity;
        data["personalStateId"] = this.personalStateId;
        data["personalZipCode"] = this.personalZipCode;
        data["personalStartLivingDate"] = this.personalStartLivingDate
            ? this.personalStartLivingDate.toISOString()
            : undefined;
        data["personalReantingType"] = this.personalReantingType;
        data["isEmployementHistory"] = this.isEmployementHistory;
        data["isCoBorrowerHaveShareIncome"] = this.isCoBorrowerHaveShareIncome;
        data["sex"] = this.sex;
        data["ethnicity"] = this.ethnicity;
        data["race"] = this.race;
        data["citizenshipId"] = this.citizenshipId;
        data["isCertify"] = this.isCertify;
        data["isReadEconsent"] = this.isReadEconsent;
        data["isReadThirdPartyConsent"] = this.isReadThirdPartyConsent;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["conformSsn"] = this.conformSsn;
        data["birthDate"] = this.birthDate
            ? this.birthDate.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadRefinancingDetails();
        result.init(json);
        return result;
    }
}
class AddLeadRefinancingIncomeDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.incomeTypeId = _data["incomeTypeId"];
            this.monthlyAmount = _data["monthlyAmount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadRefinancingIncomeDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["incomeTypeId"] = this.incomeTypeId;
        data["monthlyAmount"] = this.monthlyAmount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadRefinancingIncomeDetails();
        result.init(json);
        return result;
    }
}
class AddLeadTaxTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.taxesType = _data["taxesType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLeadTaxTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["taxesType"] = this.taxesType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLeadTaxTypes();
        result.init(json);
        return result;
    }
}
class AddLoanAndPropertyInformationGiftRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanPropertyGiftTypeId4d1 = _data["loanPropertyGiftTypeId4d1"];
            this.deposited4d2 = _data["deposited4d2"];
            this.source4d3 = _data["source4d3"];
            this.value4d4 = _data["value4d4"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanAndPropertyInformationGiftRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanPropertyGiftTypeId4d1"] = this.loanPropertyGiftTypeId4d1;
        data["deposited4d2"] = this.deposited4d2;
        data["source4d3"] = this.source4d3;
        data["value4d4"] = this.value4d4;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanAndPropertyInformationGiftRequest();
        result.init(json);
        return result;
    }
}
class AddLoanAndPropertyInformationOtherMortageLoanRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.creditorName4b1 = _data["creditorName4b1"];
            this.lienType4b2 = _data["lienType4b2"];
            this.monthlyPayment4b3 = _data["monthlyPayment4b3"];
            this.loanAmount4b4 = _data["loanAmount4b4"];
            this.creditAmount4b5 = _data["creditAmount4b5"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanAndPropertyInformationOtherMortageLoanRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["creditorName4b1"] = this.creditorName4b1;
        data["lienType4b2"] = this.lienType4b2;
        data["monthlyPayment4b3"] = this.monthlyPayment4b3;
        data["loanAmount4b4"] = this.loanAmount4b4;
        data["creditAmount4b5"] = this.creditAmount4b5;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanAndPropertyInformationOtherMortageLoanRequest();
        result.init(json);
        return result;
    }
}
class AddLoanAndPropertyInformationRentalIncomeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.expectedMonthlyIncome4c1 = _data["expectedMonthlyIncome4c1"];
            this.lenderExpectedMonthlyIncome4c2 =
                _data["lenderExpectedMonthlyIncome4c2"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanAndPropertyInformationRentalIncomeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["expectedMonthlyIncome4c1"] = this.expectedMonthlyIncome4c1;
        data["lenderExpectedMonthlyIncome4c2"] = this.lenderExpectedMonthlyIncome4c2;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanAndPropertyInformationRentalIncomeRequest();
        result.init(json);
        return result;
    }
}
class AddLoanAndPropertyInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanAmount4a1 = _data["loanAmount4a1"];
            this.loanPurpose4a2 = _data["loanPurpose4a2"];
            this.propertyStreet4a31 = _data["propertyStreet4a31"];
            this.propertyUnitNo4a32 = _data["propertyUnitNo4a32"];
            this.propertyZip4a35 = _data["propertyZip4a35"];
            this.countryId4a36 = _data["countryId4a36"];
            this.stateId4a34 = _data["stateId4a34"];
            this.cityId4a33 = _data["cityId4a33"];
            this.propertyNumberUnits4a4 = _data["propertyNumberUnits4a4"];
            this.propertyValue4a5 = _data["propertyValue4a5"];
            this.loanPropertyOccupancyId4a6 = _data["loanPropertyOccupancyId4a6"];
            this.fhaSecondaryResidance4a61 = _data["fhaSecondaryResidance4a61"];
            this.isMixedUseProperty4a7 = _data["isMixedUseProperty4a7"];
            this.isManufacturedHome4a8 = _data["isManufacturedHome4a8"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanAndPropertyInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanAmount4a1"] = this.loanAmount4a1;
        data["loanPurpose4a2"] = this.loanPurpose4a2;
        data["propertyStreet4a31"] = this.propertyStreet4a31;
        data["propertyUnitNo4a32"] = this.propertyUnitNo4a32;
        data["propertyZip4a35"] = this.propertyZip4a35;
        data["countryId4a36"] = this.countryId4a36;
        data["stateId4a34"] = this.stateId4a34;
        data["cityId4a33"] = this.cityId4a33;
        data["propertyNumberUnits4a4"] = this.propertyNumberUnits4a4;
        data["propertyValue4a5"] = this.propertyValue4a5;
        data["loanPropertyOccupancyId4a6"] = this.loanPropertyOccupancyId4a6;
        data["fhaSecondaryResidance4a61"] = this.fhaSecondaryResidance4a61;
        data["isMixedUseProperty4a7"] = this.isMixedUseProperty4a7;
        data["isManufacturedHome4a8"] = this.isManufacturedHome4a8;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanAndPropertyInformationRequest();
        result.init(json);
        return result;
    }
}
class AddLoanOriginatorInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.organizationName91 = _data["organizationName91"];
            this.address92 = _data["address92"];
            this.organizationNmlsrId93 = _data["organizationNmlsrId93"];
            this.organizationStateLicence94 = _data["organizationStateLicence94"];
            this.originatorName95 = _data["originatorName95"];
            this.originatorNmlsrId96 = _data["originatorNmlsrId96"];
            this.originatorStateLicense97 = _data["originatorStateLicense97"];
            this.email98 = _data["email98"];
            this.phone99 = _data["phone99"];
            this.date910 = _data["date910"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["date910"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanOriginatorInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["organizationName91"] = this.organizationName91;
        data["address92"] = this.address92;
        data["organizationNmlsrId93"] = this.organizationNmlsrId93;
        data["organizationStateLicence94"] = this.organizationStateLicence94;
        data["originatorName95"] = this.originatorName95;
        data["originatorNmlsrId96"] = this.originatorNmlsrId96;
        data["originatorStateLicense97"] = this.originatorStateLicense97;
        data["email98"] = this.email98;
        data["phone99"] = this.phone99;
        data["date910"] = this.date910
            ? this.date910.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanOriginatorInformationRequest();
        result.init(json);
        return result;
    }
}
class AddLoanPropertyGiftTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanPropertyGiftType1 = _data["loanPropertyGiftType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanPropertyGiftTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanPropertyGiftType1"] = this.loanPropertyGiftType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanPropertyGiftTypeRequest();
        result.init(json);
        return result;
    }
}
class AddLoanPropertyOccupancyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanPropertyOccupancy1 = _data["loanPropertyOccupancy1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddLoanPropertyOccupancyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanPropertyOccupancy1"] = this.loanPropertyOccupancy1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddLoanPropertyOccupancyRequest();
        result.init(json);
        return result;
    }
}
class AddMaritalStatusRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.maritialStatus1 = _data["maritialStatus1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddMaritalStatusRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["maritialStatus1"] = this.maritialStatus1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddMaritalStatusRequest();
        result.init(json);
        return result;
    }
}
class AddMortageLoanOnPropertyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationFinancialRealEstateId =
                _data["applicationFinancialRealEstateId"];
            this.creditorName3a9 = _data["creditorName3a9"];
            this.accountNumber3a10 = _data["accountNumber3a10"];
            this.monthlyMortagePayment3a11 = _data["monthlyMortagePayment3a11"];
            this.unpaidBalance3a12 = _data["unpaidBalance3a12"];
            this.paidOff3a13 = _data["paidOff3a13"];
            this.mortageLoanTypesId3a14 = _data["mortageLoanTypesId3a14"];
            this.creditLimit3a15 = _data["creditLimit3a15"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddMortageLoanOnPropertyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationFinancialRealEstateId"] = this.applicationFinancialRealEstateId;
        data["creditorName3a9"] = this.creditorName3a9;
        data["accountNumber3a10"] = this.accountNumber3a10;
        data["monthlyMortagePayment3a11"] = this.monthlyMortagePayment3a11;
        data["unpaidBalance3a12"] = this.unpaidBalance3a12;
        data["paidOff3a13"] = this.paidOff3a13;
        data["mortageLoanTypesId3a14"] = this.mortageLoanTypesId3a14;
        data["creditLimit3a15"] = this.creditLimit3a15;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddMortageLoanOnPropertyRequest();
        result.init(json);
        return result;
    }
}
class AddMortageLoanTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.mortageLoanTypesId = _data["mortageLoanTypesId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddMortageLoanTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["mortageLoanTypesId"] = this.mortageLoanTypesId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddMortageLoanTypeRequest();
        result.init(json);
        return result;
    }
}
class AddOtherLaibilitiesTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialOtherLaibilitiesType1 =
                _data["financialOtherLaibilitiesType1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddOtherLaibilitiesTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialOtherLaibilitiesType1"] = this.financialOtherLaibilitiesType1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddOtherLaibilitiesTypeRequest();
        result.init(json);
        return result;
    }
}
class AddPropertyIntendedOccupancyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialPropertyIntendedOccupancy1 =
                _data["financialPropertyIntendedOccupancy1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddPropertyIntendedOccupancyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialPropertyIntendedOccupancy1"] = this.financialPropertyIntendedOccupancy1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddPropertyIntendedOccupancyRequest();
        result.init(json);
        return result;
    }
}
class AddPropertyStatusRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialPropertyStatus1 = _data["financialPropertyStatus1"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddPropertyStatusRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialPropertyStatus1"] = this.financialPropertyStatus1;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddPropertyStatusRequest();
        result.init(json);
        return result;
    }
}
class AddStateRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.countryId = _data["countryId"];
            this.stateName = _data["stateName"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddStateRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["countryId"] = this.countryId;
        data["stateName"] = this.stateName;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddStateRequest();
        result.init(json);
        return result;
    }
}
class AdditionalDetailsDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.nameOfIndividualsOnTitle = _data["nameOfIndividualsOnTitle"];
            this.nameOfIndividualsCoBorrowerOnTitle =
                _data["nameOfIndividualsCoBorrowerOnTitle"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalDetailsDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["nameOfIndividualsOnTitle"] = this.nameOfIndividualsOnTitle;
        data["nameOfIndividualsCoBorrowerOnTitle"] = this.nameOfIndividualsCoBorrowerOnTitle;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalDetailsDto();
        result.init(json);
        return result;
    }
}
class AdditionalDetailsDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(AdditionalDetailsDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalDetailsDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalDetailsDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class AdditionalEmployementIncomeDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.applicationAdditionalEmployementDetails =
                _data["applicationAdditionalEmployementDetails"];
            this.incomeType = _data["incomeType"];
            this.amount = _data["amount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalEmployementIncomeDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["applicationAdditionalEmployementDetails"] = this.applicationAdditionalEmployementDetails;
        data["incomeType"] = this.incomeType;
        data["amount"] = this.amount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalEmployementIncomeDetail();
        result.init(json);
        return result;
    }
}
class AdditionalEmploymentDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.employerBusinessName = _data["employerBusinessName"];
            this.phone = _data["phone"];
            this.street = _data["street"];
            this.unit = _data["unit"];
            this.zip = _data["zip"];
            this.country = _data["country"];
            this.state = _data["state"];
            this.city = _data["city"];
            this.positionTitle = _data["positionTitle"];
            this.startDate = _data["startDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["startDate"].toString())
                : undefined;
            this.workingYears = _data["workingYears"];
            this.workingMonths = _data["workingMonths"];
            this.isEmployedBySomeone = _data["isEmployedBySomeone"];
            this.isSelfEmployed = _data["isSelfEmployed"];
            this.isOwnershipLessThan25 = _data["isOwnershipLessThan25"];
            this.monthlyIncome = _data["monthlyIncome"];
            if (Array.isArray(_data["employementIncomeDetail"])) {
                this.employementIncomeDetail = [];
                for (let item of _data["employementIncomeDetail"])
                    this.employementIncomeDetail.push(AdditionalEmployementIncomeDetail.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalEmploymentDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["employerBusinessName"] = this.employerBusinessName;
        data["phone"] = this.phone;
        data["street"] = this.street;
        data["unit"] = this.unit;
        data["zip"] = this.zip;
        data["country"] = this.country;
        data["state"] = this.state;
        data["city"] = this.city;
        data["positionTitle"] = this.positionTitle;
        data["startDate"] = this.startDate
            ? this.startDate.toISOString()
            : undefined;
        data["workingYears"] = this.workingYears;
        data["workingMonths"] = this.workingMonths;
        data["isEmployedBySomeone"] = this.isEmployedBySomeone;
        data["isSelfEmployed"] = this.isSelfEmployed;
        data["isOwnershipLessThan25"] = this.isOwnershipLessThan25;
        data["monthlyIncome"] = this.monthlyIncome;
        if (Array.isArray(this.employementIncomeDetail)) {
            data["employementIncomeDetail"] = [];
            for (let item of this.employementIncomeDetail)
                data["employementIncomeDetail"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalEmploymentDetail();
        result.init(json);
        return result;
    }
}
class AdditionalIncomeDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.amount = _data["amount"];
            this.incomeSourceId = _data["incomeSourceId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalIncomeDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["amount"] = this.amount;
        data["incomeSourceId"] = this.incomeSourceId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalIncomeDto();
        result.init(json);
        return result;
    }
}
class AdditionalIncomeDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(AdditionalIncomeDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AdditionalIncomeDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AdditionalIncomeDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Additionaldetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.nameOfIndividualsOnTitle = _data["nameOfIndividualsOnTitle"];
            this.nameOfIndividualsCoBorrowerOnTitle =
                _data["nameOfIndividualsCoBorrowerOnTitle"];
            if (Array.isArray(_data["loanapplications"])) {
                this.loanapplications = [];
                for (let item of _data["loanapplications"])
                    this.loanapplications.push(Loanapplication.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Additionaldetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["nameOfIndividualsOnTitle"] = this.nameOfIndividualsOnTitle;
        data["nameOfIndividualsCoBorrowerOnTitle"] = this.nameOfIndividualsCoBorrowerOnTitle;
        if (Array.isArray(this.loanapplications)) {
            data["loanapplications"] = [];
            for (let item of this.loanapplications)
                data["loanapplications"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Additionaldetail();
        result.init(json);
        return result;
    }
}
class Additionalincome {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.amount = _data["amount"];
            this.incomeSourceId = _data["incomeSourceId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.incomeSource = _data["incomeSource"]
                ? Incomesource1.fromJS(_data["incomeSource"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Additionalincome();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["amount"] = this.amount;
        data["incomeSourceId"] = this.incomeSourceId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["incomeSource"] = this.incomeSource
            ? this.incomeSource.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Additionalincome();
        result.init(json);
        return result;
    }
}
class Address {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.addressType = _data["addressType"];
            this.addressLine1 = _data["addressLine1"];
            this.addressLine2 = _data["addressLine2"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.years = _data["years"];
            this.months = _data["months"];
            this.personalDetailId = _data["personalDetailId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.personalDetail = _data["personalDetail"]
                ? Personaldetail.fromJS(_data["personalDetail"])
                : undefined;
            this.state = _data["state"]
                ? State.fromJS(_data["state"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Address();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["addressType"] = this.addressType;
        data["addressLine1"] = this.addressLine1;
        data["addressLine2"] = this.addressLine2;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["years"] = this.years;
        data["months"] = this.months;
        data["personalDetailId"] = this.personalDetailId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["personalDetail"] = this.personalDetail
            ? this.personalDetail.toJSON()
            : undefined;
        data["state"] = this.state ? this.state.toJSON() : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Address();
        result.init(json);
        return result;
    }
}
class AddressDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.addressLine1 = _data["addressLine1"];
            this.addressLine2 = _data["addressLine2"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.years = _data["years"];
            this.months = _data["months"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AddressDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["addressLine1"] = this.addressLine1;
        data["addressLine2"] = this.addressLine2;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["years"] = this.years;
        data["months"] = this.months;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AddressDto();
        result.init(json);
        return result;
    }
}
class ApplicationDeclarationQuestion {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.isParent = _data["isParent"];
            this.question = _data["question"];
            this.answer = _data["answer"];
            this.yesNo = _data["yesNo"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationDeclarationQuestion();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["isParent"] = this.isParent;
        data["question"] = this.question;
        data["answer"] = this.answer;
        data["yesNo"] = this.yesNo;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationDeclarationQuestion();
        result.init(json);
        return result;
    }
}
class ApplicationDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.date = _data["date"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["date"].toString())
                : undefined;
            this.loanNoIdentifierB1B3 = _data["loanNoIdentifierB1B3"];
            this.agencyCaseNoB2 = _data["agencyCaseNoB2"];
            this.creditType = _data["creditType"];
            this.totalBorrowers1a6 = _data["totalBorrowers1a6"];
            this.initials = _data["initials"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["date"] = this.date ? this.date.toISOString() : undefined;
        data["loanNoIdentifierB1B3"] = this.loanNoIdentifierB1B3;
        data["agencyCaseNoB2"] = this.agencyCaseNoB2;
        data["creditType"] = this.creditType;
        data["totalBorrowers1a6"] = this.totalBorrowers1a6;
        data["initials"] = this.initials;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationDetail();
        result.init(json);
        return result;
    }
}
class ApplicationEmployementDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.employerBusinessName1b2 = _data["employerBusinessName1b2"];
            this.phone1b3 = _data["phone1b3"];
            this.street1b41 = _data["street1b41"];
            this.unit1b42 = _data["unit1b42"];
            this.zip1b45 = _data["zip1b45"];
            this.country1b46 = _data["country1b46"];
            this.state1b44 = _data["state1b44"];
            this.city1b43 = _data["city1b43"];
            this.positionTitle1b5 = _data["positionTitle1b5"];
            this.startDate1b6 = _data["startDate1b6"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["startDate1b6"].toString())
                : undefined;
            this.workingYears1b7 = _data["workingYears1b7"];
            this.workingMonths = _data["workingMonths"];
            this.isEmployedBySomeone1b8 = _data["isEmployedBySomeone1b8"];
            this.isSelfEmployed1b9 = _data["isSelfEmployed1b9"];
            this.isOwnershipLessThan251b91 = _data["isOwnershipLessThan251b91"];
            this.monthlyIncome1b92 = _data["monthlyIncome1b92"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationEmployementDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["employerBusinessName1b2"] = this.employerBusinessName1b2;
        data["phone1b3"] = this.phone1b3;
        data["street1b41"] = this.street1b41;
        data["unit1b42"] = this.unit1b42;
        data["zip1b45"] = this.zip1b45;
        data["country1b46"] = this.country1b46;
        data["state1b44"] = this.state1b44;
        data["city1b43"] = this.city1b43;
        data["positionTitle1b5"] = this.positionTitle1b5;
        data["startDate1b6"] = this.startDate1b6
            ? this.startDate1b6.toISOString()
            : undefined;
        data["workingYears1b7"] = this.workingYears1b7;
        data["workingMonths"] = this.workingMonths;
        data["isEmployedBySomeone1b8"] = this.isEmployedBySomeone1b8;
        data["isSelfEmployed1b9"] = this.isSelfEmployed1b9;
        data["isOwnershipLessThan251b91"] = this.isOwnershipLessThan251b91;
        data["monthlyIncome1b92"] = this.monthlyIncome1b92;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationEmployementDetail();
        result.init(json);
        return result;
    }
}
class ApplicationFinancialAsset {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialAccountType2a1 = _data["financialAccountType2a1"];
            this.financialInstitution2a2 = _data["financialInstitution2a2"];
            this.accountNumber2a3 = _data["accountNumber2a3"];
            this.value2a4 = _data["value2a4"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationFinancialAsset();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialAccountType2a1"] = this.financialAccountType2a1;
        data["financialInstitution2a2"] = this.financialInstitution2a2;
        data["accountNumber2a3"] = this.accountNumber2a3;
        data["value2a4"] = this.value2a4;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationFinancialAsset();
        result.init(json);
        return result;
    }
}
class ApplicationFinancialLiabilityDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.financialLaibilitiesType2c1 = _data["financialLaibilitiesType2c1"];
            this.companyName2c2 = _data["companyName2c2"];
            this.accountNumber2c3 = _data["accountNumber2c3"];
            this.unpaidBalance2c4 = _data["unpaidBalance2c4"];
            this.paidOff2c5 = _data["paidOff2c5"];
            this.monthlyValue2c6 = _data["monthlyValue2c6"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationFinancialLiabilityDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["financialLaibilitiesType2c1"] = this.financialLaibilitiesType2c1;
        data["companyName2c2"] = this.companyName2c2;
        data["accountNumber2c3"] = this.accountNumber2c3;
        data["unpaidBalance2c4"] = this.unpaidBalance2c4;
        data["paidOff2c5"] = this.paidOff2c5;
        data["monthlyValue2c6"] = this.monthlyValue2c6;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationFinancialLiabilityDetail();
        result.init(json);
        return result;
    }
}
class ApplicationFinancialOtherAssetDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialAssetsType2b1 = _data["financialAssetsType2b1"];
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.value2b2 = _data["value2b2"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationFinancialOtherAssetDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialAssetsType2b1"] = this.financialAssetsType2b1;
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["value2b2"] = this.value2b2;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationFinancialOtherAssetDetail();
        result.init(json);
        return result;
    }
}
class ApplicationFinancialOtherLaibilityDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.financialOtherLaibilityType2d1 =
                _data["financialOtherLaibilityType2d1"];
            this.monthlyPayment2d2 = _data["monthlyPayment2d2"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationFinancialOtherLaibilityDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["financialOtherLaibilityType2d1"] = this.financialOtherLaibilityType2d1;
        data["monthlyPayment2d2"] = this.monthlyPayment2d2;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationFinancialOtherLaibilityDetail();
        result.init(json);
        return result;
    }
}
class ApplicationIncomeSourceDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.incomeSource1e1 = _data["incomeSource1e1"];
            this.amount1e2 = _data["amount1e2"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationIncomeSourceDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["incomeSource1e1"] = this.incomeSource1e1;
        data["amount1e2"] = this.amount1e2;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationIncomeSourceDetail();
        result.init(json);
        return result;
    }
}
class ApplicationInfoDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.version = _data["version"];
            this.releaseDate = _data["releaseDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["releaseDate"].toString())
                : undefined;
            if (_data["features"]) {
                this.features = {};
                for (let key in _data["features"]) {
                    if (_data["features"].hasOwnProperty(key))
                        this.features[key] = _data["features"][key];
                }
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ApplicationInfoDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["version"] = this.version;
        data["releaseDate"] = this.releaseDate
            ? this.releaseDate.toISOString()
            : undefined;
        if (this.features) {
            data["features"] = {};
            for (let key in this.features) {
                if (this.features.hasOwnProperty(key))
                    data["features"][key] = this.features[key];
            }
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ApplicationInfoDto();
        result.init(json);
        return result;
    }
}
class Assembly {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["definedTypes"])) {
                this.definedTypes = [];
                for (let item of _data["definedTypes"])
                    this.definedTypes.push(TypeInfo.fromJS(item));
            }
            if (Array.isArray(_data["exportedTypes"])) {
                this.exportedTypes = [];
                for (let item of _data["exportedTypes"])
                    this.exportedTypes.push(Type.fromJS(item));
            }
            this.codeBase = _data["codeBase"];
            this.entryPoint = _data["entryPoint"]
                ? MethodInfo.fromJS(_data["entryPoint"])
                : undefined;
            this.fullName = _data["fullName"];
            this.imageRuntimeVersion = _data["imageRuntimeVersion"];
            this.isDynamic = _data["isDynamic"];
            this.location = _data["location"];
            this.reflectionOnly = _data["reflectionOnly"];
            this.isCollectible = _data["isCollectible"];
            this.isFullyTrusted = _data["isFullyTrusted"];
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.escapedCodeBase = _data["escapedCodeBase"];
            this.manifestModule = _data["manifestModule"]
                ? Module.fromJS(_data["manifestModule"])
                : undefined;
            if (Array.isArray(_data["modules"])) {
                this.modules = [];
                for (let item of _data["modules"])
                    this.modules.push(Module.fromJS(item));
            }
            this.globalAssemblyCache = _data["globalAssemblyCache"];
            this.hostContext = _data["hostContext"];
            this.securityRuleSet = _data["securityRuleSet"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Assembly();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.definedTypes)) {
            data["definedTypes"] = [];
            for (let item of this.definedTypes)
                data["definedTypes"].push(item.toJSON());
        }
        if (Array.isArray(this.exportedTypes)) {
            data["exportedTypes"] = [];
            for (let item of this.exportedTypes)
                data["exportedTypes"].push(item.toJSON());
        }
        data["codeBase"] = this.codeBase;
        data["entryPoint"] = this.entryPoint
            ? this.entryPoint.toJSON()
            : undefined;
        data["fullName"] = this.fullName;
        data["imageRuntimeVersion"] = this.imageRuntimeVersion;
        data["isDynamic"] = this.isDynamic;
        data["location"] = this.location;
        data["reflectionOnly"] = this.reflectionOnly;
        data["isCollectible"] = this.isCollectible;
        data["isFullyTrusted"] = this.isFullyTrusted;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["escapedCodeBase"] = this.escapedCodeBase;
        data["manifestModule"] = this.manifestModule
            ? this.manifestModule.toJSON()
            : undefined;
        if (Array.isArray(this.modules)) {
            data["modules"] = [];
            for (let item of this.modules)
                data["modules"].push(item.toJSON());
        }
        data["globalAssemblyCache"] = this.globalAssemblyCache;
        data["hostContext"] = this.hostContext;
        data["securityRuleSet"] = this.securityRuleSet;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Assembly();
        result.init(json);
        return result;
    }
}
class Assettype {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.name = _data["name"];
            if (Array.isArray(_data["manualassetentries"])) {
                this.manualassetentries = [];
                for (let item of _data["manualassetentries"])
                    this.manualassetentries.push(Manualassetentry.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Assettype();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["name"] = this.name;
        if (Array.isArray(this.manualassetentries)) {
            data["manualassetentries"] = [];
            for (let item of this.manualassetentries)
                data["manualassetentries"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Assettype();
        result.init(json);
        return result;
    }
}
class AuthenticateModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.userNameOrEmailAddress = _data["userNameOrEmailAddress"];
            this.password = _data["password"];
            this.rememberClient = _data["rememberClient"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AuthenticateModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["userNameOrEmailAddress"] = this.userNameOrEmailAddress;
        data["password"] = this.password;
        data["rememberClient"] = this.rememberClient;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AuthenticateModel();
        result.init(json);
        return result;
    }
}
class AuthenticateResultModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.accessToken = _data["accessToken"];
            this.encryptedAccessToken = _data["encryptedAccessToken"];
            this.expireInSeconds = _data["expireInSeconds"];
            this.userId = _data["userId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new AuthenticateResultModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["accessToken"] = this.accessToken;
        data["encryptedAccessToken"] = this.encryptedAccessToken;
        data["expireInSeconds"] = this.expireInSeconds;
        data["userId"] = this.userId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new AuthenticateResultModel();
        result.init(json);
        return result;
    }
}
class Borrower {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.firstName = _data["firstName"];
            this.middleInitial = _data["middleInitial"];
            this.lastName = _data["lastName"];
            this.suffix = _data["suffix"];
            this.email = _data["email"];
            this.dateOfBirth = _data["dateOfBirth"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.maritalStatusId = _data["maritalStatusId"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.cellPhone = _data["cellPhone"];
            this.homePhone = _data["homePhone"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Borrower();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["firstName"] = this.firstName;
        data["middleInitial"] = this.middleInitial;
        data["lastName"] = this.lastName;
        data["suffix"] = this.suffix;
        data["email"] = this.email;
        data["dateOfBirth"] = this.dateOfBirth;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["maritalStatusId"] = this.maritalStatusId;
        data["numberOfDependents"] = this.numberOfDependents;
        data["cellPhone"] = this.cellPhone;
        data["homePhone"] = this.homePhone;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Borrower();
        result.init(json);
        return result;
    }
}
class BorrowerDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.firstName = _data["firstName"];
            this.middleInitial = _data["middleInitial"];
            this.lastName = _data["lastName"];
            this.suffix = _data["suffix"];
            this.email = _data["email"];
            this.dateOfBirth = _data["dateOfBirth"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.maritalStatusId = _data["maritalStatusId"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.cellPhone = _data["cellPhone"];
            this.homePhone = _data["homePhone"];
            this.personalDetailId = _data["personalDetailId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BorrowerDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["firstName"] = this.firstName;
        data["middleInitial"] = this.middleInitial;
        data["lastName"] = this.lastName;
        data["suffix"] = this.suffix;
        data["email"] = this.email;
        data["dateOfBirth"] = this.dateOfBirth;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["maritalStatusId"] = this.maritalStatusId;
        data["numberOfDependents"] = this.numberOfDependents;
        data["cellPhone"] = this.cellPhone;
        data["homePhone"] = this.homePhone;
        data["personalDetailId"] = this.personalDetailId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BorrowerDto();
        result.init(json);
        return result;
    }
}
class BorrowerEmploymentInformationDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.employerName = _data["employerName"];
            this.address1 = _data["address1"];
            this.address2 = _data["address2"];
            this.isSelfEmployed = _data["isSelfEmployed"];
            this.position = _data["position"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.startDate = _data["startDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["startDate"].toString())
                : undefined;
            this.endDate = _data["endDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["endDate"].toString())
                : undefined;
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BorrowerEmploymentInformationDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["employerName"] = this.employerName;
        data["address1"] = this.address1;
        data["address2"] = this.address2;
        data["isSelfEmployed"] = this.isSelfEmployed;
        data["position"] = this.position;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["startDate"] = this.startDate
            ? this.startDate.toISOString()
            : undefined;
        data["endDate"] = this.endDate
            ? this.endDate.toISOString()
            : undefined;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BorrowerEmploymentInformationDto();
        result.init(json);
        return result;
    }
}
class BorrowerEmploymentInformationDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(BorrowerEmploymentInformationDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BorrowerEmploymentInformationDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BorrowerEmploymentInformationDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class BorrowerMonthlyIncomeDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.base = _data["base"];
            this.overtime = _data["overtime"];
            this.bonuses = _data["bonuses"];
            this.commissions = _data["commissions"];
            this.dividends = _data["dividends"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BorrowerMonthlyIncomeDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["base"] = this.base;
        data["overtime"] = this.overtime;
        data["bonuses"] = this.bonuses;
        data["commissions"] = this.commissions;
        data["dividends"] = this.dividends;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BorrowerMonthlyIncomeDto();
        result.init(json);
        return result;
    }
}
class BorrowerMonthlyIncomeDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(BorrowerMonthlyIncomeDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BorrowerMonthlyIncomeDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BorrowerMonthlyIncomeDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Borroweremploymentinformation {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.employersName = _data["employersName"];
            this.employersAddress1 = _data["employersAddress1"];
            this.employersAddress2 = _data["employersAddress2"];
            this.isSelfEmployed = _data["isSelfEmployed"];
            this.position = _data["position"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.startDate = _data["startDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["startDate"].toString())
                : undefined;
            this.endDate = _data["endDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["endDate"].toString())
                : undefined;
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Borroweremploymentinformation();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["employersName"] = this.employersName;
        data["employersAddress1"] = this.employersAddress1;
        data["employersAddress2"] = this.employersAddress2;
        data["isSelfEmployed"] = this.isSelfEmployed;
        data["position"] = this.position;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["startDate"] = this.startDate
            ? this.startDate.toISOString()
            : undefined;
        data["endDate"] = this.endDate
            ? this.endDate.toISOString()
            : undefined;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Borroweremploymentinformation();
        result.init(json);
        return result;
    }
}
class Borrowermonthlyincome {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.base = _data["base"];
            this.overtime = _data["overtime"];
            this.bonuses = _data["bonuses"];
            this.commissions = _data["commissions"];
            this.dividends = _data["dividends"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Borrowermonthlyincome();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["base"] = this.base;
        data["overtime"] = this.overtime;
        data["bonuses"] = this.bonuses;
        data["commissions"] = this.commissions;
        data["dividends"] = this.dividends;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Borrowermonthlyincome();
        result.init(json);
        return result;
    }
}
class Borrowertype {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            if (Array.isArray(_data["additionalincomes"])) {
                this.additionalincomes = [];
                for (let item of _data["additionalincomes"])
                    this.additionalincomes.push(Additionalincome.fromJS(item));
            }
            if (Array.isArray(_data["addresses"])) {
                this.addresses = [];
                for (let item of _data["addresses"])
                    this.addresses.push(Address.fromJS(item));
            }
            if (Array.isArray(_data["borroweremploymentinformations"])) {
                this.borroweremploymentinformations = [];
                for (let item of _data["borroweremploymentinformations"])
                    this.borroweremploymentinformations.push(Borroweremploymentinformation.fromJS(item));
            }
            if (Array.isArray(_data["borrowermonthlyincomes"])) {
                this.borrowermonthlyincomes = [];
                for (let item of _data["borrowermonthlyincomes"])
                    this.borrowermonthlyincomes.push(Borrowermonthlyincome.fromJS(item));
            }
            if (Array.isArray(_data["borrowers"])) {
                this.borrowers = [];
                for (let item of _data["borrowers"])
                    this.borrowers.push(Borrower.fromJS(item));
            }
            if (Array.isArray(_data["declarationborroweredemographicsinformations"])) {
                this.declarationborroweredemographicsinformations = [];
                for (let item of _data["declarationborroweredemographicsinformations"])
                    this.declarationborroweredemographicsinformations.push(Declarationborroweredemographicsinformation.fromJS(item));
            }
            if (Array.isArray(_data["declarations"])) {
                this.declarations = [];
                for (let item of _data["declarations"])
                    this.declarations.push(Declaration.fromJS(item));
            }
            if (Array.isArray(_data["manualassetentries"])) {
                this.manualassetentries = [];
                for (let item of _data["manualassetentries"])
                    this.manualassetentries.push(Manualassetentry.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Borrowertype();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        if (Array.isArray(this.additionalincomes)) {
            data["additionalincomes"] = [];
            for (let item of this.additionalincomes)
                data["additionalincomes"].push(item.toJSON());
        }
        if (Array.isArray(this.addresses)) {
            data["addresses"] = [];
            for (let item of this.addresses)
                data["addresses"].push(item.toJSON());
        }
        if (Array.isArray(this.borroweremploymentinformations)) {
            data["borroweremploymentinformations"] = [];
            for (let item of this.borroweremploymentinformations)
                data["borroweremploymentinformations"].push(item.toJSON());
        }
        if (Array.isArray(this.borrowermonthlyincomes)) {
            data["borrowermonthlyincomes"] = [];
            for (let item of this.borrowermonthlyincomes)
                data["borrowermonthlyincomes"].push(item.toJSON());
        }
        if (Array.isArray(this.borrowers)) {
            data["borrowers"] = [];
            for (let item of this.borrowers)
                data["borrowers"].push(item.toJSON());
        }
        if (Array.isArray(this.declarationborroweredemographicsinformations)) {
            data["declarationborroweredemographicsinformations"] = [];
            for (let item of this.declarationborroweredemographicsinformations)
                data["declarationborroweredemographicsinformations"].push(item.toJSON());
        }
        if (Array.isArray(this.declarations)) {
            data["declarations"] = [];
            for (let item of this.declarations)
                data["declarations"].push(item.toJSON());
        }
        if (Array.isArray(this.manualassetentries)) {
            data["manualassetentries"] = [];
            for (let item of this.manualassetentries)
                data["manualassetentries"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Borrowertype();
        result.init(json);
        return result;
    }
}
class BuyingHomeDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.propertyType = _data["propertyType"];
            this.propertyUse = _data["propertyUse"];
            this.firstTimeHomeBuying = _data["firstTimeHomeBuying"];
            this.planToPurchase = _data["planToPurchase"];
            this.propertyLocated = _data["propertyLocated"];
            this.purchasePrice = _data["purchasePrice"];
            this.downPayment = _data["downPayment"];
            this.currentEmployed = _data["currentEmployed"];
            this.houseHoldIncome = _data["houseHoldIncome"];
            this.proofOfincome = _data["proofOfincome"];
            this.militarySevice = _data["militarySevice"];
            this.bankruptcyPastThreeYears = _data["bankruptcyPastThreeYears"];
            this.foreclosurePastTwoYears = _data["foreclosurePastTwoYears"];
            this.lateMortgagePayments = _data["lateMortgagePayments"];
            this.rateCredit = _data["rateCredit"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.emailAddress = _data["emailAddress"];
            this.phoneNumber = _data["phoneNumber"];
            this.refferedBy = _data["refferedBy"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BuyingHomeDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["propertyType"] = this.propertyType;
        data["propertyUse"] = this.propertyUse;
        data["firstTimeHomeBuying"] = this.firstTimeHomeBuying;
        data["planToPurchase"] = this.planToPurchase;
        data["propertyLocated"] = this.propertyLocated;
        data["purchasePrice"] = this.purchasePrice;
        data["downPayment"] = this.downPayment;
        data["currentEmployed"] = this.currentEmployed;
        data["houseHoldIncome"] = this.houseHoldIncome;
        data["proofOfincome"] = this.proofOfincome;
        data["militarySevice"] = this.militarySevice;
        data["bankruptcyPastThreeYears"] = this.bankruptcyPastThreeYears;
        data["foreclosurePastTwoYears"] = this.foreclosurePastTwoYears;
        data["lateMortgagePayments"] = this.lateMortgagePayments;
        data["rateCredit"] = this.rateCredit;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["emailAddress"] = this.emailAddress;
        data["phoneNumber"] = this.phoneNumber;
        data["refferedBy"] = this.refferedBy;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BuyingHomeDto();
        result.init(json);
        return result;
    }
}
class BuyingHomeDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(BuyingHomeDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new BuyingHomeDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new BuyingHomeDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
var CallingConventions;
(function (CallingConventions) {
    CallingConventions[CallingConventions["_1"] = 1] = "_1";
    CallingConventions[CallingConventions["_2"] = 2] = "_2";
    CallingConventions[CallingConventions["_3"] = 3] = "_3";
    CallingConventions[CallingConventions["_32"] = 32] = "_32";
    CallingConventions[CallingConventions["_64"] = 64] = "_64";
})(CallingConventions || (CallingConventions = {}));
class ChangePasswordDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.currentPassword = _data["currentPassword"];
            this.newPassword = _data["newPassword"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ChangePasswordDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["currentPassword"] = this.currentPassword;
        data["newPassword"] = this.newPassword;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ChangePasswordDto();
        result.init(json);
        return result;
    }
}
class ChangeUiThemeInput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.theme = _data["theme"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ChangeUiThemeInput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["theme"] = this.theme;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ChangeUiThemeInput();
        result.init(json);
        return result;
    }
}
class ChangeUserLanguageDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.languageName = _data["languageName"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ChangeUserLanguageDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["languageName"] = this.languageName;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ChangeUserLanguageDto();
        result.init(json);
        return result;
    }
}
class Consentdetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.agreeEconsent = _data["agreeEconsent"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.email = _data["email"];
            this.coborrowerAgreeEconsent = _data["coborrowerAgreeEconsent"];
            this.coborrowerFirstName = _data["coborrowerFirstName"];
            this.coborrowerLastName = _data["coborrowerLastName"];
            this.coborrowerEmail = _data["coborrowerEmail"];
            if (Array.isArray(_data["loanapplications"])) {
                this.loanapplications = [];
                for (let item of _data["loanapplications"])
                    this.loanapplications.push(Loanapplication.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Consentdetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["agreeEconsent"] = this.agreeEconsent;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["email"] = this.email;
        data["coborrowerAgreeEconsent"] = this.coborrowerAgreeEconsent;
        data["coborrowerFirstName"] = this.coborrowerFirstName;
        data["coborrowerLastName"] = this.coborrowerLastName;
        data["coborrowerEmail"] = this.coborrowerEmail;
        if (Array.isArray(this.loanapplications)) {
            data["loanapplications"] = [];
            for (let item of this.loanapplications)
                data["loanapplications"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Consentdetail();
        result.init(json);
        return result;
    }
}
class ConstructorInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.attributes = _data["attributes"];
            this.methodImplementationFlags = _data["methodImplementationFlags"];
            this.callingConvention = _data["callingConvention"];
            this.isAbstract = _data["isAbstract"];
            this.isConstructor = _data["isConstructor"];
            this.isFinal = _data["isFinal"];
            this.isHideBySig = _data["isHideBySig"];
            this.isSpecialName = _data["isSpecialName"];
            this.isStatic = _data["isStatic"];
            this.isVirtual = _data["isVirtual"];
            this.isAssembly = _data["isAssembly"];
            this.isFamily = _data["isFamily"];
            this.isFamilyAndAssembly = _data["isFamilyAndAssembly"];
            this.isFamilyOrAssembly = _data["isFamilyOrAssembly"];
            this.isPrivate = _data["isPrivate"];
            this.isPublic = _data["isPublic"];
            this.isConstructedGenericMethod =
                _data["isConstructedGenericMethod"];
            this.isGenericMethod = _data["isGenericMethod"];
            this.isGenericMethodDefinition =
                _data["isGenericMethodDefinition"];
            this.containsGenericParameters =
                _data["containsGenericParameters"];
            this.methodHandle = _data["methodHandle"]
                ? RuntimeMethodHandle.fromJS(_data["methodHandle"])
                : undefined;
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
            this.memberType = _data["memberType"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ConstructorInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["attributes"] = this.attributes;
        data["methodImplementationFlags"] = this.methodImplementationFlags;
        data["callingConvention"] = this.callingConvention;
        data["isAbstract"] = this.isAbstract;
        data["isConstructor"] = this.isConstructor;
        data["isFinal"] = this.isFinal;
        data["isHideBySig"] = this.isHideBySig;
        data["isSpecialName"] = this.isSpecialName;
        data["isStatic"] = this.isStatic;
        data["isVirtual"] = this.isVirtual;
        data["isAssembly"] = this.isAssembly;
        data["isFamily"] = this.isFamily;
        data["isFamilyAndAssembly"] = this.isFamilyAndAssembly;
        data["isFamilyOrAssembly"] = this.isFamilyOrAssembly;
        data["isPrivate"] = this.isPrivate;
        data["isPublic"] = this.isPublic;
        data["isConstructedGenericMethod"] = this.isConstructedGenericMethod;
        data["isGenericMethod"] = this.isGenericMethod;
        data["isGenericMethodDefinition"] = this.isGenericMethodDefinition;
        data["containsGenericParameters"] = this.containsGenericParameters;
        data["methodHandle"] = this.methodHandle
            ? this.methodHandle.toJSON()
            : undefined;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        data["memberType"] = this.memberType;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ConstructorInfo();
        result.init(json);
        return result;
    }
}
class CreateRoleDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.normalizedName = _data["normalizedName"];
            this.description = _data["description"];
            if (Array.isArray(_data["grantedPermissions"])) {
                this.grantedPermissions = [];
                for (let item of _data["grantedPermissions"])
                    this.grantedPermissions.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CreateRoleDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["normalizedName"] = this.normalizedName;
        data["description"] = this.description;
        if (Array.isArray(this.grantedPermissions)) {
            data["grantedPermissions"] = [];
            for (let item of this.grantedPermissions)
                data["grantedPermissions"].push(item);
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CreateRoleDto();
        result.init(json);
        return result;
    }
}
class CreateTenantDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.tenancyName = _data["tenancyName"];
            this.name = _data["name"];
            this.adminEmailAddress = _data["adminEmailAddress"];
            this.connectionString = _data["connectionString"];
            this.isActive = _data["isActive"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CreateTenantDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["tenancyName"] = this.tenancyName;
        data["name"] = this.name;
        data["adminEmailAddress"] = this.adminEmailAddress;
        data["connectionString"] = this.connectionString;
        data["isActive"] = this.isActive;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CreateTenantDto();
        result.init(json);
        return result;
    }
}
class CreateUserDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.userName = _data["userName"];
            this.name = _data["name"];
            this.surname = _data["surname"];
            this.emailAddress = _data["emailAddress"];
            this.isActive = _data["isActive"];
            if (Array.isArray(_data["roleNames"])) {
                this.roleNames = [];
                for (let item of _data["roleNames"])
                    this.roleNames.push(item);
            }
            this.password = _data["password"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CreateUserDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["userName"] = this.userName;
        data["name"] = this.name;
        data["surname"] = this.surname;
        data["emailAddress"] = this.emailAddress;
        data["isActive"] = this.isActive;
        if (Array.isArray(this.roleNames)) {
            data["roleNames"] = [];
            for (let item of this.roleNames)
                data["roleNames"].push(item);
        }
        data["password"] = this.password;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CreateUserDto();
        result.init(json);
        return result;
    }
}
class CreditAuthAgreementDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.agreeCreditAuthAgreement = _data["agreeCreditAuthAgreement"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CreditAuthAgreementDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["agreeCreditAuthAgreement"] = this.agreeCreditAuthAgreement;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CreditAuthAgreementDto();
        result.init(json);
        return result;
    }
}
class CreditAuthAgreementDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(CreditAuthAgreementDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CreditAuthAgreementDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CreditAuthAgreementDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Creditauthagreement {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.agreeCreditAuthAgreement = _data["agreeCreditAuthAgreement"];
            if (Array.isArray(_data["loanapplications"])) {
                this.loanapplications = [];
                for (let item of _data["loanapplications"])
                    this.loanapplications.push(Loanapplication.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Creditauthagreement();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["agreeCreditAuthAgreement"] = this.agreeCreditAuthAgreement;
        if (Array.isArray(this.loanapplications)) {
            data["loanapplications"] = [];
            for (let item of this.loanapplications)
                data["loanapplications"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Creditauthagreement();
        result.init(json);
        return result;
    }
}
class CustomAttributeData {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.attributeType = _data["attributeType"]
                ? Type.fromJS(_data["attributeType"])
                : undefined;
            this.constructor_ = _data["constructor"]
                ? ConstructorInfo.fromJS(_data["constructor"])
                : undefined;
            if (Array.isArray(_data["constructorArguments"])) {
                this.constructorArguments = [];
                for (let item of _data["constructorArguments"])
                    this.constructorArguments.push(CustomAttributeTypedArgument.fromJS(item));
            }
            if (Array.isArray(_data["namedArguments"])) {
                this.namedArguments = [];
                for (let item of _data["namedArguments"])
                    this.namedArguments.push(CustomAttributeNamedArgument.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CustomAttributeData();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["attributeType"] = this.attributeType
            ? this.attributeType.toJSON()
            : undefined;
        data["constructor"] = this.constructor_
            ? this.constructor_.toJSON()
            : undefined;
        if (Array.isArray(this.constructorArguments)) {
            data["constructorArguments"] = [];
            for (let item of this.constructorArguments)
                data["constructorArguments"].push(item.toJSON());
        }
        if (Array.isArray(this.namedArguments)) {
            data["namedArguments"] = [];
            for (let item of this.namedArguments)
                data["namedArguments"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CustomAttributeData();
        result.init(json);
        return result;
    }
}
class CustomAttributeNamedArgument {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.memberInfo = _data["memberInfo"]
                ? MemberInfo.fromJS(_data["memberInfo"])
                : undefined;
            this.typedValue = _data["typedValue"]
                ? CustomAttributeTypedArgument.fromJS(_data["typedValue"])
                : undefined;
            this.memberName = _data["memberName"];
            this.isField = _data["isField"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CustomAttributeNamedArgument();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["memberInfo"] = this.memberInfo
            ? this.memberInfo.toJSON()
            : undefined;
        data["typedValue"] = this.typedValue
            ? this.typedValue.toJSON()
            : undefined;
        data["memberName"] = this.memberName;
        data["isField"] = this.isField;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CustomAttributeNamedArgument();
        result.init(json);
        return result;
    }
}
class CustomAttributeTypedArgument {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.argumentType = _data["argumentType"]
                ? Type.fromJS(_data["argumentType"])
                : undefined;
            this.value = _data["value"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new CustomAttributeTypedArgument();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["argumentType"] = this.argumentType
            ? this.argumentType.toJSON()
            : undefined;
        data["value"] = this.value;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new CustomAttributeTypedArgument();
        result.init(json);
        return result;
    }
}
class Declaration {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.isOutstandingJudgmentsAgainstYou =
                _data["isOutstandingJudgmentsAgainstYou"];
            this.isDeclaredBankrupt = _data["isDeclaredBankrupt"];
            this.isPropertyForeClosedUponOrGivenTitle =
                _data["isPropertyForeClosedUponOrGivenTitle"];
            this.isPartyToLawsuit = _data["isPartyToLawsuit"];
            this.isObligatedOnAnyLoanWhichResultedForeclosure =
                _data["isObligatedOnAnyLoanWhichResultedForeclosure"];
            this.isPresentlyDelinquent = _data["isPresentlyDelinquent"];
            this.isObligatedToPayAlimonyChildSupport =
                _data["isObligatedToPayAlimonyChildSupport"];
            this.isAnyPartOfTheDownPayment = _data["isAnyPartOfTheDownPayment"];
            this.isCoMakerOrEndorser = _data["isCoMakerOrEndorser"];
            this.isUscitizen = _data["isUscitizen"];
            this.isPermanentResidentSlien = _data["isPermanentResidentSlien"];
            this.isIntendToOccupyThePropertyAsYourPrimary =
                _data["isIntendToOccupyThePropertyAsYourPrimary"];
            this.isOwnershipInterestInPropertyInTheLastThreeYears =
                _data["isOwnershipInterestInPropertyInTheLastThreeYears"];
            this.declarationsSection = _data["declarationsSection"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Declaration();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["isOutstandingJudgmentsAgainstYou"] = this.isOutstandingJudgmentsAgainstYou;
        data["isDeclaredBankrupt"] = this.isDeclaredBankrupt;
        data["isPropertyForeClosedUponOrGivenTitle"] = this.isPropertyForeClosedUponOrGivenTitle;
        data["isPartyToLawsuit"] = this.isPartyToLawsuit;
        data["isObligatedOnAnyLoanWhichResultedForeclosure"] = this.isObligatedOnAnyLoanWhichResultedForeclosure;
        data["isPresentlyDelinquent"] = this.isPresentlyDelinquent;
        data["isObligatedToPayAlimonyChildSupport"] = this.isObligatedToPayAlimonyChildSupport;
        data["isAnyPartOfTheDownPayment"] = this.isAnyPartOfTheDownPayment;
        data["isCoMakerOrEndorser"] = this.isCoMakerOrEndorser;
        data["isUscitizen"] = this.isUscitizen;
        data["isPermanentResidentSlien"] = this.isPermanentResidentSlien;
        data["isIntendToOccupyThePropertyAsYourPrimary"] = this.isIntendToOccupyThePropertyAsYourPrimary;
        data["isOwnershipInterestInPropertyInTheLastThreeYears"] = this.isOwnershipInterestInPropertyInTheLastThreeYears;
        data["declarationsSection"] = this.declarationsSection;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Declaration();
        result.init(json);
        return result;
    }
}
class DeclarationCategory {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.category = _data["category"];
            this.yesNo = _data["yesNo"];
            if (Array.isArray(_data["applicationDeclarationQuestions"])) {
                this.applicationDeclarationQuestions = [];
                for (let item of _data["applicationDeclarationQuestions"])
                    this.applicationDeclarationQuestions.push(ApplicationDeclarationQuestion.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DeclarationCategory();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["category"] = this.category;
        data["yesNo"] = this.yesNo;
        if (Array.isArray(this.applicationDeclarationQuestions)) {
            data["applicationDeclarationQuestions"] = [];
            for (let item of this.applicationDeclarationQuestions)
                data["applicationDeclarationQuestions"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DeclarationCategory();
        result.init(json);
        return result;
    }
}
class DeclarationDetailDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.isOutstandingJudgmentsAgainstYou =
                _data["isOutstandingJudgmentsAgainstYou"];
            this.isDeclaredBankrupt = _data["isDeclaredBankrupt"];
            this.isPropertyForeClosedUponOrGivenTitle =
                _data["isPropertyForeClosedUponOrGivenTitle"];
            this.isPartyToLawsuit = _data["isPartyToLawsuit"];
            this.isObligatedOnAnyLoanWhichResultedForeclosure =
                _data["isObligatedOnAnyLoanWhichResultedForeclosure"];
            this.isPresentlyDelinquent = _data["isPresentlyDelinquent"];
            this.isObligatedToPayAlimonyChildSupport =
                _data["isObligatedToPayAlimonyChildSupport"];
            this.isAnyPartOfTheDownPayment = _data["isAnyPartOfTheDownPayment"];
            this.isCoMakerOrEndorser = _data["isCoMakerOrEndorser"];
            this.isUSCitizen = _data["isUSCitizen"];
            this.isPermanentResidentSlien = _data["isPermanentResidentSlien"];
            this.isIntendToOccupyThePropertyAsYourPrimary =
                _data["isIntendToOccupyThePropertyAsYourPrimary"];
            this.isOwnershipInterestInPropertyInTheLastThreeYears =
                _data["isOwnershipInterestInPropertyInTheLastThreeYears"];
            this.declarationsSection = _data["declarationsSection"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DeclarationDetailDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["isOutstandingJudgmentsAgainstYou"] = this.isOutstandingJudgmentsAgainstYou;
        data["isDeclaredBankrupt"] = this.isDeclaredBankrupt;
        data["isPropertyForeClosedUponOrGivenTitle"] = this.isPropertyForeClosedUponOrGivenTitle;
        data["isPartyToLawsuit"] = this.isPartyToLawsuit;
        data["isObligatedOnAnyLoanWhichResultedForeclosure"] = this.isObligatedOnAnyLoanWhichResultedForeclosure;
        data["isPresentlyDelinquent"] = this.isPresentlyDelinquent;
        data["isObligatedToPayAlimonyChildSupport"] = this.isObligatedToPayAlimonyChildSupport;
        data["isAnyPartOfTheDownPayment"] = this.isAnyPartOfTheDownPayment;
        data["isCoMakerOrEndorser"] = this.isCoMakerOrEndorser;
        data["isUSCitizen"] = this.isUSCitizen;
        data["isPermanentResidentSlien"] = this.isPermanentResidentSlien;
        data["isIntendToOccupyThePropertyAsYourPrimary"] = this.isIntendToOccupyThePropertyAsYourPrimary;
        data["isOwnershipInterestInPropertyInTheLastThreeYears"] = this.isOwnershipInterestInPropertyInTheLastThreeYears;
        data["declarationsSection"] = this.declarationsSection;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DeclarationDetailDto();
        result.init(json);
        return result;
    }
}
class DeclarationDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerDeclaration = _data["borrowerDeclaration"]
                ? DeclarationDetailDto.fromJS(_data["borrowerDeclaration"])
                : undefined;
            this.borrowerDemographic = _data["borrowerDemographic"]
                ? DemographicDto.fromJS(_data["borrowerDemographic"])
                : undefined;
            this.coBorrowerDeclaration = _data["coBorrowerDeclaration"]
                ? DeclarationDetailDto.fromJS(_data["coBorrowerDeclaration"])
                : undefined;
            this.coBorrowerDemographic = _data["coBorrowerDemographic"]
                ? DemographicDto.fromJS(_data["coBorrowerDemographic"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DeclarationDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerDeclaration"] = this.borrowerDeclaration
            ? this.borrowerDeclaration.toJSON()
            : undefined;
        data["borrowerDemographic"] = this.borrowerDemographic
            ? this.borrowerDemographic.toJSON()
            : undefined;
        data["coBorrowerDeclaration"] = this.coBorrowerDeclaration
            ? this.coBorrowerDeclaration.toJSON()
            : undefined;
        data["coBorrowerDemographic"] = this.coBorrowerDemographic
            ? this.coBorrowerDemographic.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DeclarationDto();
        result.init(json);
        return result;
    }
}
class DeclarationDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(DeclarationDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DeclarationDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DeclarationDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Declarationborroweredemographicsinformation {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.isHispanicOrLatino = _data["isHispanicOrLatino"];
            this.isMexican = _data["isMexican"];
            this.isPuertoRican = _data["isPuertoRican"];
            this.isCuban = _data["isCuban"];
            this.isOtherHispanicOrLatino = _data["isOtherHispanicOrLatino"];
            this.origin = _data["origin"];
            this.isNotHispanicOrLatino = _data["isNotHispanicOrLatino"];
            this.canNotProvideEthnic = _data["canNotProvideEthnic"];
            this.isAmericanIndianOrAlaskaNative =
                _data["isAmericanIndianOrAlaskaNative"];
            this.nameOfEnrolledOrPrincipalTribe =
                _data["nameOfEnrolledOrPrincipalTribe"];
            this.isAsian = _data["isAsian"];
            this.isAsianIndian = _data["isAsianIndian"];
            this.isChinese = _data["isChinese"];
            this.isFilipino = _data["isFilipino"];
            this.isJapanese = _data["isJapanese"];
            this.isKorean = _data["isKorean"];
            this.isVietnamese = _data["isVietnamese"];
            this.isOtherAsian = _data["isOtherAsian"];
            this.isBlackOrAfricanAmerican = _data["isBlackOrAfricanAmerican"];
            this.isNativeHawaiianOrOtherPacificIslander =
                _data["isNativeHawaiianOrOtherPacificIslander"];
            this.isNativeHawaiian = _data["isNativeHawaiian"];
            this.isGuamanianOrChamorro = _data["isGuamanianOrChamorro"];
            this.isSamoan = _data["isSamoan"];
            this.isOtherPacificIslander = _data["isOtherPacificIslander"];
            this.enterRace = _data["enterRace"];
            this.isWhite = _data["isWhite"];
            this.canNotProvideRace = _data["canNotProvideRace"];
            this.isMale = _data["isMale"];
            this.isFemale = _data["isFemale"];
            this.canNotProvideSex = _data["canNotProvideSex"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Declarationborroweredemographicsinformation();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["isHispanicOrLatino"] = this.isHispanicOrLatino;
        data["isMexican"] = this.isMexican;
        data["isPuertoRican"] = this.isPuertoRican;
        data["isCuban"] = this.isCuban;
        data["isOtherHispanicOrLatino"] = this.isOtherHispanicOrLatino;
        data["origin"] = this.origin;
        data["isNotHispanicOrLatino"] = this.isNotHispanicOrLatino;
        data["canNotProvideEthnic"] = this.canNotProvideEthnic;
        data["isAmericanIndianOrAlaskaNative"] = this.isAmericanIndianOrAlaskaNative;
        data["nameOfEnrolledOrPrincipalTribe"] = this.nameOfEnrolledOrPrincipalTribe;
        data["isAsian"] = this.isAsian;
        data["isAsianIndian"] = this.isAsianIndian;
        data["isChinese"] = this.isChinese;
        data["isFilipino"] = this.isFilipino;
        data["isJapanese"] = this.isJapanese;
        data["isKorean"] = this.isKorean;
        data["isVietnamese"] = this.isVietnamese;
        data["isOtherAsian"] = this.isOtherAsian;
        data["isBlackOrAfricanAmerican"] = this.isBlackOrAfricanAmerican;
        data["isNativeHawaiianOrOtherPacificIslander"] = this.isNativeHawaiianOrOtherPacificIslander;
        data["isNativeHawaiian"] = this.isNativeHawaiian;
        data["isGuamanianOrChamorro"] = this.isGuamanianOrChamorro;
        data["isSamoan"] = this.isSamoan;
        data["isOtherPacificIslander"] = this.isOtherPacificIslander;
        data["enterRace"] = this.enterRace;
        data["isWhite"] = this.isWhite;
        data["canNotProvideRace"] = this.canNotProvideRace;
        data["isMale"] = this.isMale;
        data["isFemale"] = this.isFemale;
        data["canNotProvideSex"] = this.canNotProvideSex;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Declarationborroweredemographicsinformation();
        result.init(json);
        return result;
    }
}
class DemographicDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            if (Array.isArray(_data["ethnicity"])) {
                this.ethnicity = [];
                for (let item of _data["ethnicity"])
                    this.ethnicity.push(DemographicTypeDto.fromJS(item));
            }
            if (Array.isArray(_data["race"])) {
                this.race = [];
                for (let item of _data["race"])
                    this.race.push(DemographicTypeDto.fromJS(item));
            }
            if (Array.isArray(_data["sex"])) {
                this.sex = [];
                for (let item of _data["sex"])
                    this.sex.push(DemographicTypeDto.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DemographicDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        if (Array.isArray(this.ethnicity)) {
            data["ethnicity"] = [];
            for (let item of this.ethnicity)
                data["ethnicity"].push(item.toJSON());
        }
        if (Array.isArray(this.race)) {
            data["race"] = [];
            for (let item of this.race)
                data["race"].push(item.toJSON());
        }
        if (Array.isArray(this.sex)) {
            data["sex"] = [];
            for (let item of this.sex)
                data["sex"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DemographicDto();
        result.init(json);
        return result;
    }
}
class DemographicInformationDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.ethnicity81 = _data["ethnicity81"];
            this.gender82 = _data["gender82"];
            this.race83 = _data["race83"];
            this.isEthnicityByObservation84 = _data["isEthnicityByObservation84"];
            this.isGenderByObservation85 = _data["isGenderByObservation85"];
            this.isRaceByObservation86 = _data["isRaceByObservation86"];
            this.demographicInfoSource87 = _data["demographicInfoSource87"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DemographicInformationDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["ethnicity81"] = this.ethnicity81;
        data["gender82"] = this.gender82;
        data["race83"] = this.race83;
        data["isEthnicityByObservation84"] = this.isEthnicityByObservation84;
        data["isGenderByObservation85"] = this.isGenderByObservation85;
        data["isRaceByObservation86"] = this.isRaceByObservation86;
        data["demographicInfoSource87"] = this.demographicInfoSource87;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DemographicInformationDetail();
        result.init(json);
        return result;
    }
}
class DemographicTypeDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.otherValue = _data["otherValue"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new DemographicTypeDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["otherValue"] = this.otherValue;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new DemographicTypeDto();
        result.init(json);
        return result;
    }
}
class EConsentDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.agreeEConsent = _data["agreeEConsent"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.email = _data["email"];
            this.coborrowerAgreeEConsent = _data["coborrowerAgreeEConsent"];
            this.coborrowerFirstName = _data["coborrowerFirstName"];
            this.coborrowerLastName = _data["coborrowerLastName"];
            this.coborrowerEmail = _data["coborrowerEmail"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new EConsentDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["agreeEConsent"] = this.agreeEConsent;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["email"] = this.email;
        data["coborrowerAgreeEConsent"] = this.coborrowerAgreeEConsent;
        data["coborrowerFirstName"] = this.coborrowerFirstName;
        data["coborrowerLastName"] = this.coborrowerLastName;
        data["coborrowerEmail"] = this.coborrowerEmail;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EConsentDto();
        result.init(json);
        return result;
    }
}
class EConsentDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(EConsentDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new EConsentDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EConsentDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class EmploymentIncomeDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.loanApplicationId = _data["loanApplicationId"];
            if (Array.isArray(_data["additionalIncomes"])) {
                this.additionalIncomes = [];
                for (let item of _data["additionalIncomes"])
                    this.additionalIncomes.push(AdditionalIncomeDto.fromJS(item));
            }
            if (Array.isArray(_data["borrowerEmploymentInfo"])) {
                this.borrowerEmploymentInfo = [];
                for (let item of _data["borrowerEmploymentInfo"])
                    this.borrowerEmploymentInfo.push(BorrowerEmploymentInformationDto.fromJS(item));
            }
            if (Array.isArray(_data["coBorrowerEmploymentInfo"])) {
                this.coBorrowerEmploymentInfo = [];
                for (let item of _data["coBorrowerEmploymentInfo"])
                    this.coBorrowerEmploymentInfo.push(BorrowerEmploymentInformationDto.fromJS(item));
            }
            this.borrowerMonthlyIncome = _data["borrowerMonthlyIncome"]
                ? BorrowerMonthlyIncomeDto.fromJS(_data["borrowerMonthlyIncome"])
                : undefined;
            this.coBorrowerMonthlyIncome = _data["coBorrowerMonthlyIncome"]
                ? BorrowerMonthlyIncomeDto.fromJS(_data["coBorrowerMonthlyIncome"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new EmploymentIncomeDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["loanApplicationId"] = this.loanApplicationId;
        if (Array.isArray(this.additionalIncomes)) {
            data["additionalIncomes"] = [];
            for (let item of this.additionalIncomes)
                data["additionalIncomes"].push(item.toJSON());
        }
        if (Array.isArray(this.borrowerEmploymentInfo)) {
            data["borrowerEmploymentInfo"] = [];
            for (let item of this.borrowerEmploymentInfo)
                data["borrowerEmploymentInfo"].push(item.toJSON());
        }
        if (Array.isArray(this.coBorrowerEmploymentInfo)) {
            data["coBorrowerEmploymentInfo"] = [];
            for (let item of this.coBorrowerEmploymentInfo)
                data["coBorrowerEmploymentInfo"].push(item.toJSON());
        }
        data["borrowerMonthlyIncome"] = this.borrowerMonthlyIncome
            ? this.borrowerMonthlyIncome.toJSON()
            : undefined;
        data["coBorrowerMonthlyIncome"] = this.coBorrowerMonthlyIncome
            ? this.coBorrowerMonthlyIncome.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EmploymentIncomeDto();
        result.init(json);
        return result;
    }
}
class EmploymentIncomeDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(EmploymentIncomeDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new EmploymentIncomeDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EmploymentIncomeDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
var EventAttributes;
(function (EventAttributes) {
    EventAttributes[EventAttributes["_0"] = 0] = "_0";
    EventAttributes[EventAttributes["_512"] = 512] = "_512";
    EventAttributes[EventAttributes["_1024"] = 1024] = "_1024";
})(EventAttributes || (EventAttributes = {}));
class EventInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.memberType = _data["memberType"];
            this.attributes = _data["attributes"];
            this.isSpecialName = _data["isSpecialName"];
            this.addMethod = _data["addMethod"]
                ? MethodInfo.fromJS(_data["addMethod"])
                : undefined;
            this.removeMethod = _data["removeMethod"]
                ? MethodInfo.fromJS(_data["removeMethod"])
                : undefined;
            this.raiseMethod = _data["raiseMethod"]
                ? MethodInfo.fromJS(_data["raiseMethod"])
                : undefined;
            this.isMulticast = _data["isMulticast"];
            this.eventHandlerType = _data["eventHandlerType"]
                ? Type.fromJS(_data["eventHandlerType"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new EventInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["memberType"] = this.memberType;
        data["attributes"] = this.attributes;
        data["isSpecialName"] = this.isSpecialName;
        data["addMethod"] = this.addMethod
            ? this.addMethod.toJSON()
            : undefined;
        data["removeMethod"] = this.removeMethod
            ? this.removeMethod.toJSON()
            : undefined;
        data["raiseMethod"] = this.raiseMethod
            ? this.raiseMethod.toJSON()
            : undefined;
        data["isMulticast"] = this.isMulticast;
        data["eventHandlerType"] = this.eventHandlerType
            ? this.eventHandlerType.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new EventInfo();
        result.init(json);
        return result;
    }
}
class Expense {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.isLiveWithFamilySelectRent = _data["isLiveWithFamilySelectRent"];
            this.rent = _data["rent"];
            this.otherHousingExpenses = _data["otherHousingExpenses"];
            this.firstMortgage = _data["firstMortgage"];
            this.secondMortgage = _data["secondMortgage"];
            this.hazardInsurance = _data["hazardInsurance"];
            this.realEstateTaxes = _data["realEstateTaxes"];
            this.mortgageInsurance = _data["mortgageInsurance"];
            this.homeOwnersAssociation = _data["homeOwnersAssociation"];
            if (Array.isArray(_data["loanapplications"])) {
                this.loanapplications = [];
                for (let item of _data["loanapplications"])
                    this.loanapplications.push(Loanapplication.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Expense();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["isLiveWithFamilySelectRent"] = this.isLiveWithFamilySelectRent;
        data["rent"] = this.rent;
        data["otherHousingExpenses"] = this.otherHousingExpenses;
        data["firstMortgage"] = this.firstMortgage;
        data["secondMortgage"] = this.secondMortgage;
        data["hazardInsurance"] = this.hazardInsurance;
        data["realEstateTaxes"] = this.realEstateTaxes;
        data["mortgageInsurance"] = this.mortgageInsurance;
        data["homeOwnersAssociation"] = this.homeOwnersAssociation;
        if (Array.isArray(this.loanapplications)) {
            data["loanapplications"] = [];
            for (let item of this.loanapplications)
                data["loanapplications"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Expense();
        result.init(json);
        return result;
    }
}
class ExpensesDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.isLiveWithFamilySelectRent = _data["isLiveWithFamilySelectRent"];
            this.rent = _data["rent"];
            this.otherHousingExpenses = _data["otherHousingExpenses"];
            this.firstMortgage = _data["firstMortgage"];
            this.secondMortgage = _data["secondMortgage"];
            this.hazardInsurance = _data["hazardInsurance"];
            this.realEstateTaxes = _data["realEstateTaxes"];
            this.mortgageInsurance = _data["mortgageInsurance"];
            this.homeOwnersAssociation = _data["homeOwnersAssociation"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ExpensesDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["isLiveWithFamilySelectRent"] = this.isLiveWithFamilySelectRent;
        data["rent"] = this.rent;
        data["otherHousingExpenses"] = this.otherHousingExpenses;
        data["firstMortgage"] = this.firstMortgage;
        data["secondMortgage"] = this.secondMortgage;
        data["hazardInsurance"] = this.hazardInsurance;
        data["realEstateTaxes"] = this.realEstateTaxes;
        data["mortgageInsurance"] = this.mortgageInsurance;
        data["homeOwnersAssociation"] = this.homeOwnersAssociation;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExpensesDto();
        result.init(json);
        return result;
    }
}
class ExpensesDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(ExpensesDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ExpensesDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExpensesDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class ExternalAuthenticateModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.authProvider = _data["authProvider"];
            this.providerKey = _data["providerKey"];
            this.providerAccessCode = _data["providerAccessCode"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ExternalAuthenticateModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["authProvider"] = this.authProvider;
        data["providerKey"] = this.providerKey;
        data["providerAccessCode"] = this.providerAccessCode;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExternalAuthenticateModel();
        result.init(json);
        return result;
    }
}
class ExternalAuthenticateResultModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.accessToken = _data["accessToken"];
            this.encryptedAccessToken = _data["encryptedAccessToken"];
            this.expireInSeconds = _data["expireInSeconds"];
            this.waitingForActivation = _data["waitingForActivation"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ExternalAuthenticateResultModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["accessToken"] = this.accessToken;
        data["encryptedAccessToken"] = this.encryptedAccessToken;
        data["expireInSeconds"] = this.expireInSeconds;
        data["waitingForActivation"] = this.waitingForActivation;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExternalAuthenticateResultModel();
        result.init(json);
        return result;
    }
}
class ExternalLoginProviderInfoModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.clientId = _data["clientId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ExternalLoginProviderInfoModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["clientId"] = this.clientId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ExternalLoginProviderInfoModel();
        result.init(json);
        return result;
    }
}
var FieldAttributes;
(function (FieldAttributes) {
    FieldAttributes[FieldAttributes["_0"] = 0] = "_0";
    FieldAttributes[FieldAttributes["_1"] = 1] = "_1";
    FieldAttributes[FieldAttributes["_2"] = 2] = "_2";
    FieldAttributes[FieldAttributes["_3"] = 3] = "_3";
    FieldAttributes[FieldAttributes["_4"] = 4] = "_4";
    FieldAttributes[FieldAttributes["_5"] = 5] = "_5";
    FieldAttributes[FieldAttributes["_6"] = 6] = "_6";
    FieldAttributes[FieldAttributes["_7"] = 7] = "_7";
    FieldAttributes[FieldAttributes["_16"] = 16] = "_16";
    FieldAttributes[FieldAttributes["_32"] = 32] = "_32";
    FieldAttributes[FieldAttributes["_64"] = 64] = "_64";
    FieldAttributes[FieldAttributes["_128"] = 128] = "_128";
    FieldAttributes[FieldAttributes["_256"] = 256] = "_256";
    FieldAttributes[FieldAttributes["_512"] = 512] = "_512";
    FieldAttributes[FieldAttributes["_1024"] = 1024] = "_1024";
    FieldAttributes[FieldAttributes["_4096"] = 4096] = "_4096";
    FieldAttributes[FieldAttributes["_8192"] = 8192] = "_8192";
    FieldAttributes[FieldAttributes["_32768"] = 32768] = "_32768";
    FieldAttributes[FieldAttributes["_38144"] = 38144] = "_38144";
})(FieldAttributes || (FieldAttributes = {}));
class FieldInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.memberType = _data["memberType"];
            this.attributes = _data["attributes"];
            this.fieldType = _data["fieldType"]
                ? Type.fromJS(_data["fieldType"])
                : undefined;
            this.isInitOnly = _data["isInitOnly"];
            this.isLiteral = _data["isLiteral"];
            this.isNotSerialized = _data["isNotSerialized"];
            this.isPinvokeImpl = _data["isPinvokeImpl"];
            this.isSpecialName = _data["isSpecialName"];
            this.isStatic = _data["isStatic"];
            this.isAssembly = _data["isAssembly"];
            this.isFamily = _data["isFamily"];
            this.isFamilyAndAssembly = _data["isFamilyAndAssembly"];
            this.isFamilyOrAssembly = _data["isFamilyOrAssembly"];
            this.isPrivate = _data["isPrivate"];
            this.isPublic = _data["isPublic"];
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
            this.fieldHandle = _data["fieldHandle"]
                ? RuntimeFieldHandle.fromJS(_data["fieldHandle"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new FieldInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["memberType"] = this.memberType;
        data["attributes"] = this.attributes;
        data["fieldType"] = this.fieldType
            ? this.fieldType.toJSON()
            : undefined;
        data["isInitOnly"] = this.isInitOnly;
        data["isLiteral"] = this.isLiteral;
        data["isNotSerialized"] = this.isNotSerialized;
        data["isPinvokeImpl"] = this.isPinvokeImpl;
        data["isSpecialName"] = this.isSpecialName;
        data["isStatic"] = this.isStatic;
        data["isAssembly"] = this.isAssembly;
        data["isFamily"] = this.isFamily;
        data["isFamilyAndAssembly"] = this.isFamilyAndAssembly;
        data["isFamilyOrAssembly"] = this.isFamilyOrAssembly;
        data["isPrivate"] = this.isPrivate;
        data["isPublic"] = this.isPublic;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        data["fieldHandle"] = this.fieldHandle
            ? this.fieldHandle.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new FieldInfo();
        result.init(json);
        return result;
    }
}
class FinancialRealEstateDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.street3a21 = _data["street3a21"];
            this.unitNo3a22 = _data["unitNo3a22"];
            this.zip3a25 = _data["zip3a25"];
            this.country3a26 = _data["country3a26"];
            this.state3a24 = _data["state3a24"];
            this.city3a23 = _data["city3a23"];
            this.propertyValue3a3 = _data["propertyValue3a3"];
            this.financialPropertyStatus3a4 = _data["financialPropertyStatus3a4"];
            this.financialPropertyIntendedOccupancy3a5 =
                _data["financialPropertyIntendedOccupancy3a5"];
            this.monthlyMortagePayment3a6 = _data["monthlyMortagePayment3a6"];
            this.monthlyRentalIncome3a7 = _data["monthlyRentalIncome3a7"];
            this.netMonthlyRentalIncome3a8 = _data["netMonthlyRentalIncome3a8"];
            if (Array.isArray(_data["mortageLoanOnPropertyDetails"])) {
                this.mortageLoanOnPropertyDetails = [];
                for (let item of _data["mortageLoanOnPropertyDetails"])
                    this.mortageLoanOnPropertyDetails.push(MortageLoanOnPropertyDetail.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new FinancialRealEstateDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["street3a21"] = this.street3a21;
        data["unitNo3a22"] = this.unitNo3a22;
        data["zip3a25"] = this.zip3a25;
        data["country3a26"] = this.country3a26;
        data["state3a24"] = this.state3a24;
        data["city3a23"] = this.city3a23;
        data["propertyValue3a3"] = this.propertyValue3a3;
        data["financialPropertyStatus3a4"] = this.financialPropertyStatus3a4;
        data["financialPropertyIntendedOccupancy3a5"] = this.financialPropertyIntendedOccupancy3a5;
        data["monthlyMortagePayment3a6"] = this.monthlyMortagePayment3a6;
        data["monthlyRentalIncome3a7"] = this.monthlyRentalIncome3a7;
        data["netMonthlyRentalIncome3a8"] = this.netMonthlyRentalIncome3a8;
        if (Array.isArray(this.mortageLoanOnPropertyDetails)) {
            data["mortageLoanOnPropertyDetails"] = [];
            for (let item of this.mortageLoanOnPropertyDetails)
                data["mortageLoanOnPropertyDetails"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new FinancialRealEstateDetail();
        result.init(json);
        return result;
    }
}
class FlatPermissionDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.description = _data["description"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new FlatPermissionDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["description"] = this.description;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new FlatPermissionDto();
        result.init(json);
        return result;
    }
}
var GenericParameterAttributes;
(function (GenericParameterAttributes) {
    GenericParameterAttributes[GenericParameterAttributes["_0"] = 0] = "_0";
    GenericParameterAttributes[GenericParameterAttributes["_1"] = 1] = "_1";
    GenericParameterAttributes[GenericParameterAttributes["_2"] = 2] = "_2";
    GenericParameterAttributes[GenericParameterAttributes["_3"] = 3] = "_3";
    GenericParameterAttributes[GenericParameterAttributes["_4"] = 4] = "_4";
    GenericParameterAttributes[GenericParameterAttributes["_8"] = 8] = "_8";
    GenericParameterAttributes[GenericParameterAttributes["_16"] = 16] = "_16";
    GenericParameterAttributes[GenericParameterAttributes["_28"] = 28] = "_28";
})(GenericParameterAttributes || (GenericParameterAttributes = {}));
class GetCurrentLoginInformationsOutput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.application = _data["application"]
                ? ApplicationInfoDto.fromJS(_data["application"])
                : undefined;
            this.user = _data["user"]
                ? UserLoginInfoDto.fromJS(_data["user"])
                : undefined;
            this.tenant = _data["tenant"]
                ? TenantLoginInfoDto.fromJS(_data["tenant"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new GetCurrentLoginInformationsOutput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["application"] = this.application
            ? this.application.toJSON()
            : undefined;
        data["user"] = this.user ? this.user.toJSON() : undefined;
        data["tenant"] = this.tenant ? this.tenant.toJSON() : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new GetCurrentLoginInformationsOutput();
        result.init(json);
        return result;
    }
}
class GetPdfDataModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.applicationId = _data["applicationId"];
            this.firstName1a1 = _data["firstName1a1"];
            this.middleName1a2 = _data["middleName1a2"];
            this.lastName1a3 = _data["lastName1a3"];
            this.suffix1a4 = _data["suffix1a4"];
            this.alternateFirstName1a21 = _data["alternateFirstName1a21"];
            this.alternateMiddleName1a22 = _data["alternateMiddleName1a22"];
            this.alternateLastName1a23 = _data["alternateLastName1a23"];
            this.alternateSuffix1a24 = _data["alternateSuffix1a24"];
            this.ssn1a3 = _data["ssn1a3"];
            this.dob1a4 = _data["dob1a4"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["dob1a4"].toString())
                : undefined;
            this.citizenshipType1a5 = _data["citizenshipType1a5"];
            this.maritialStatusId1a7 = _data["maritialStatusId1a7"];
            this.dependents1a8 = _data["dependents1a8"];
            this.ages1a81 = _data["ages1a81"];
            this.homePhone1a9 = _data["homePhone1a9"];
            this.cellPhone1a10 = _data["cellPhone1a10"];
            this.workPhone1a11 = _data["workPhone1a11"];
            this.ext1a111 = _data["ext1a111"];
            this.email1a12 = _data["email1a12"];
            this.currentStreet1a131 = _data["currentStreet1a131"];
            this.currentUnit1a132 = _data["currentUnit1a132"];
            this.currentZip1a135 = _data["currentZip1a135"];
            this.currentCountry1a136 = _data["currentCountry1a136"];
            this.currentState1a134 = _data["currentState1a134"];
            this.currentCity1a133 = _data["currentCity1a133"];
            this.currentYears1a14 = _data["currentYears1a14"];
            this.currentMonths1a15 = _data["currentMonths1a15"];
            this.currentHousingType1a141 = _data["currentHousingType1a141"];
            this.currentRent1a142 = _data["currentRent1a142"];
            this.formerStreet1a151 = _data["formerStreet1a151"];
            this.formerUnit1a152 = _data["formerUnit1a152"];
            this.formerZip1a155 = _data["formerZip1a155"];
            this.formerCountry1a156 = _data["formerCountry1a156"];
            this.formerState1a154 = _data["formerState1a154"];
            this.formerCity1a153 = _data["formerCity1a153"];
            this.formerYears1a16 = _data["formerYears1a16"];
            this.formerMonths1a161 = _data["formerMonths1a161"];
            this.formerHousingType1a161 = _data["formerHousingType1a161"];
            this.formerRent1a162 = _data["formerRent1a162"];
            this.mailingStreet1a171 = _data["mailingStreet1a171"];
            this.mailingUnit1a172 = _data["mailingUnit1a172"];
            this.mailingZip1a175 = _data["mailingZip1a175"];
            this.mailingCountry1a176 = _data["mailingCountry1a176"];
            this.mailingState1a174 = _data["mailingState1a174"];
            this.mailingCity1a173 = _data["mailingCity1a173"];
            this.application = _data["application"]
                ? ApplicationDetail.fromJS(_data["application"])
                : undefined;
            if (Array.isArray(_data["additionalEmploymentDetails"])) {
                this.additionalEmploymentDetails = [];
                for (let item of _data["additionalEmploymentDetails"])
                    this.additionalEmploymentDetails.push(AdditionalEmploymentDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationDeclarationQuestionDetail"])) {
                this.applicationDeclarationQuestionDetail = [];
                for (let item of _data["applicationDeclarationQuestionDetail"])
                    this.applicationDeclarationQuestionDetail.push(DeclarationCategory.fromJS(item));
            }
            if (Array.isArray(_data["declarationQuestions"])) {
                this.declarationQuestions = [];
                for (let item of _data["declarationQuestions"])
                    this.declarationQuestions.push(ApplicationDeclarationQuestion.fromJS(item));
            }
            if (Array.isArray(_data["applicationEmployementDetails"])) {
                this.applicationEmployementDetails = [];
                for (let item of _data["applicationEmployementDetails"])
                    this.applicationEmployementDetails.push(ApplicationEmployementDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationFinancialAssets"])) {
                this.applicationFinancialAssets = [];
                for (let item of _data["applicationFinancialAssets"])
                    this.applicationFinancialAssets.push(ApplicationFinancialAsset.fromJS(item));
            }
            if (Array.isArray(_data["applicationFinancialLaibilities"])) {
                this.applicationFinancialLaibilities = [];
                for (let item of _data["applicationFinancialLaibilities"])
                    this.applicationFinancialLaibilities.push(ApplicationFinancialLiabilityDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationFinancialOtherAssets"])) {
                this.applicationFinancialOtherAssets = [];
                for (let item of _data["applicationFinancialOtherAssets"])
                    this.applicationFinancialOtherAssets.push(ApplicationFinancialOtherAssetDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationFinancialOtherLaibilities"])) {
                this.applicationFinancialOtherLaibilities = [];
                for (let item of _data["applicationFinancialOtherLaibilities"])
                    this.applicationFinancialOtherLaibilities.push(ApplicationFinancialOtherLaibilityDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationFinancialRealEstates"])) {
                this.applicationFinancialRealEstates = [];
                for (let item of _data["applicationFinancialRealEstates"])
                    this.applicationFinancialRealEstates.push(FinancialRealEstateDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationIncomeSources"])) {
                this.applicationIncomeSources = [];
                for (let item of _data["applicationIncomeSources"])
                    this.applicationIncomeSources.push(ApplicationIncomeSourceDetail.fromJS(item));
            }
            if (Array.isArray(_data["applicationPreviousEmployementDetails"])) {
                this.applicationPreviousEmployementDetails = [];
                for (let item of _data["applicationPreviousEmployementDetails"])
                    this.applicationPreviousEmployementDetails.push(PreviousEmployementDetail.fromJS(item));
            }
            if (Array.isArray(_data["demographicInformations"])) {
                this.demographicInformations = [];
                for (let item of _data["demographicInformations"])
                    this.demographicInformations.push(DemographicInformationDetail.fromJS(item));
            }
            if (Array.isArray(_data["loanAndPropertyInformationGifts"])) {
                this.loanAndPropertyInformationGifts = [];
                for (let item of _data["loanAndPropertyInformationGifts"])
                    this.loanAndPropertyInformationGifts.push(LoanAndPropertyInformationGiftDetail.fromJS(item));
            }
            if (Array.isArray(_data["loanAndPropertyInformationOtherMortageLoans"])) {
                this.loanAndPropertyInformationOtherMortageLoans = [];
                for (let item of _data["loanAndPropertyInformationOtherMortageLoans"])
                    this.loanAndPropertyInformationOtherMortageLoans.push(UpdateLoanAndPropertyInformationOtherMortageLoanRequest.fromJS(item));
            }
            if (Array.isArray(_data["loanAndPropertyInformationRentalIncomes"])) {
                this.loanAndPropertyInformationRentalIncomes = [];
                for (let item of _data["loanAndPropertyInformationRentalIncomes"])
                    this.loanAndPropertyInformationRentalIncomes.push(UpdateLoanAndPropertyInformationRentalIncomeRequest.fromJS(item));
            }
            if (Array.isArray(_data["loanAndPropertyInformations"])) {
                this.loanAndPropertyInformations = [];
                for (let item of _data["loanAndPropertyInformations"])
                    this.loanAndPropertyInformations.push(LoanAndPropertyInformationDetail.fromJS(item));
            }
            if (Array.isArray(_data["loanOriginatorInformations"])) {
                this.loanOriginatorInformations = [];
                for (let item of _data["loanOriginatorInformations"])
                    this.loanOriginatorInformations.push(UpdateLoanOriginatorInformationRequest.fromJS(item));
            }
            if (Array.isArray(_data["militaryServices"])) {
                this.militaryServices = [];
                for (let item of _data["militaryServices"])
                    this.militaryServices.push(UpdateMilitaryServiceRequest.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new GetPdfDataModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["applicationId"] = this.applicationId;
        data["firstName1a1"] = this.firstName1a1;
        data["middleName1a2"] = this.middleName1a2;
        data["lastName1a3"] = this.lastName1a3;
        data["suffix1a4"] = this.suffix1a4;
        data["alternateFirstName1a21"] = this.alternateFirstName1a21;
        data["alternateMiddleName1a22"] = this.alternateMiddleName1a22;
        data["alternateLastName1a23"] = this.alternateLastName1a23;
        data["alternateSuffix1a24"] = this.alternateSuffix1a24;
        data["ssn1a3"] = this.ssn1a3;
        data["dob1a4"] = this.dob1a4 ? this.dob1a4.toISOString() : undefined;
        data["citizenshipType1a5"] = this.citizenshipType1a5;
        data["maritialStatusId1a7"] = this.maritialStatusId1a7;
        data["dependents1a8"] = this.dependents1a8;
        data["ages1a81"] = this.ages1a81;
        data["homePhone1a9"] = this.homePhone1a9;
        data["cellPhone1a10"] = this.cellPhone1a10;
        data["workPhone1a11"] = this.workPhone1a11;
        data["ext1a111"] = this.ext1a111;
        data["email1a12"] = this.email1a12;
        data["currentStreet1a131"] = this.currentStreet1a131;
        data["currentUnit1a132"] = this.currentUnit1a132;
        data["currentZip1a135"] = this.currentZip1a135;
        data["currentCountry1a136"] = this.currentCountry1a136;
        data["currentState1a134"] = this.currentState1a134;
        data["currentCity1a133"] = this.currentCity1a133;
        data["currentYears1a14"] = this.currentYears1a14;
        data["currentMonths1a15"] = this.currentMonths1a15;
        data["currentHousingType1a141"] = this.currentHousingType1a141;
        data["currentRent1a142"] = this.currentRent1a142;
        data["formerStreet1a151"] = this.formerStreet1a151;
        data["formerUnit1a152"] = this.formerUnit1a152;
        data["formerZip1a155"] = this.formerZip1a155;
        data["formerCountry1a156"] = this.formerCountry1a156;
        data["formerState1a154"] = this.formerState1a154;
        data["formerCity1a153"] = this.formerCity1a153;
        data["formerYears1a16"] = this.formerYears1a16;
        data["formerMonths1a161"] = this.formerMonths1a161;
        data["formerHousingType1a161"] = this.formerHousingType1a161;
        data["formerRent1a162"] = this.formerRent1a162;
        data["mailingStreet1a171"] = this.mailingStreet1a171;
        data["mailingUnit1a172"] = this.mailingUnit1a172;
        data["mailingZip1a175"] = this.mailingZip1a175;
        data["mailingCountry1a176"] = this.mailingCountry1a176;
        data["mailingState1a174"] = this.mailingState1a174;
        data["mailingCity1a173"] = this.mailingCity1a173;
        data["application"] = this.application
            ? this.application.toJSON()
            : undefined;
        if (Array.isArray(this.additionalEmploymentDetails)) {
            data["additionalEmploymentDetails"] = [];
            for (let item of this.additionalEmploymentDetails)
                data["additionalEmploymentDetails"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationDeclarationQuestionDetail)) {
            data["applicationDeclarationQuestionDetail"] = [];
            for (let item of this.applicationDeclarationQuestionDetail)
                data["applicationDeclarationQuestionDetail"].push(item.toJSON());
        }
        if (Array.isArray(this.declarationQuestions)) {
            data["declarationQuestions"] = [];
            for (let item of this.declarationQuestions)
                data["declarationQuestions"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationEmployementDetails)) {
            data["applicationEmployementDetails"] = [];
            for (let item of this.applicationEmployementDetails)
                data["applicationEmployementDetails"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationFinancialAssets)) {
            data["applicationFinancialAssets"] = [];
            for (let item of this.applicationFinancialAssets)
                data["applicationFinancialAssets"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationFinancialLaibilities)) {
            data["applicationFinancialLaibilities"] = [];
            for (let item of this.applicationFinancialLaibilities)
                data["applicationFinancialLaibilities"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationFinancialOtherAssets)) {
            data["applicationFinancialOtherAssets"] = [];
            for (let item of this.applicationFinancialOtherAssets)
                data["applicationFinancialOtherAssets"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationFinancialOtherLaibilities)) {
            data["applicationFinancialOtherLaibilities"] = [];
            for (let item of this.applicationFinancialOtherLaibilities)
                data["applicationFinancialOtherLaibilities"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationFinancialRealEstates)) {
            data["applicationFinancialRealEstates"] = [];
            for (let item of this.applicationFinancialRealEstates)
                data["applicationFinancialRealEstates"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationIncomeSources)) {
            data["applicationIncomeSources"] = [];
            for (let item of this.applicationIncomeSources)
                data["applicationIncomeSources"].push(item.toJSON());
        }
        if (Array.isArray(this.applicationPreviousEmployementDetails)) {
            data["applicationPreviousEmployementDetails"] = [];
            for (let item of this.applicationPreviousEmployementDetails)
                data["applicationPreviousEmployementDetails"].push(item.toJSON());
        }
        if (Array.isArray(this.demographicInformations)) {
            data["demographicInformations"] = [];
            for (let item of this.demographicInformations)
                data["demographicInformations"].push(item.toJSON());
        }
        if (Array.isArray(this.loanAndPropertyInformationGifts)) {
            data["loanAndPropertyInformationGifts"] = [];
            for (let item of this.loanAndPropertyInformationGifts)
                data["loanAndPropertyInformationGifts"].push(item.toJSON());
        }
        if (Array.isArray(this.loanAndPropertyInformationOtherMortageLoans)) {
            data["loanAndPropertyInformationOtherMortageLoans"] = [];
            for (let item of this.loanAndPropertyInformationOtherMortageLoans)
                data["loanAndPropertyInformationOtherMortageLoans"].push(item.toJSON());
        }
        if (Array.isArray(this.loanAndPropertyInformationRentalIncomes)) {
            data["loanAndPropertyInformationRentalIncomes"] = [];
            for (let item of this.loanAndPropertyInformationRentalIncomes)
                data["loanAndPropertyInformationRentalIncomes"].push(item.toJSON());
        }
        if (Array.isArray(this.loanAndPropertyInformations)) {
            data["loanAndPropertyInformations"] = [];
            for (let item of this.loanAndPropertyInformations)
                data["loanAndPropertyInformations"].push(item.toJSON());
        }
        if (Array.isArray(this.loanOriginatorInformations)) {
            data["loanOriginatorInformations"] = [];
            for (let item of this.loanOriginatorInformations)
                data["loanOriginatorInformations"].push(item.toJSON());
        }
        if (Array.isArray(this.militaryServices)) {
            data["militaryServices"] = [];
            for (let item of this.militaryServices)
                data["militaryServices"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new GetPdfDataModel();
        result.init(json);
        return result;
    }
}
class GetRoleForEditOutput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.role = _data["role"]
                ? RoleEditDto.fromJS(_data["role"])
                : undefined;
            if (Array.isArray(_data["permissions"])) {
                this.permissions = [];
                for (let item of _data["permissions"])
                    this.permissions.push(FlatPermissionDto.fromJS(item));
            }
            if (Array.isArray(_data["grantedPermissionNames"])) {
                this.grantedPermissionNames = [];
                for (let item of _data["grantedPermissionNames"])
                    this.grantedPermissionNames.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new GetRoleForEditOutput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["role"] = this.role ? this.role.toJSON() : undefined;
        if (Array.isArray(this.permissions)) {
            data["permissions"] = [];
            for (let item of this.permissions)
                data["permissions"].push(item.toJSON());
        }
        if (Array.isArray(this.grantedPermissionNames)) {
            data["grantedPermissionNames"] = [];
            for (let item of this.grantedPermissionNames)
                data["grantedPermissionNames"].push(item);
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new GetRoleForEditOutput();
        result.init(json);
        return result;
    }
}
class ICustomAttributeProvider {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) { }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ICustomAttributeProvider();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ICustomAttributeProvider();
        result.init(json);
        return result;
    }
}
class Incomesource1 {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            if (Array.isArray(_data["additionalincomes"])) {
                this.additionalincomes = [];
                for (let item of _data["additionalincomes"])
                    this.additionalincomes.push(Additionalincome.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Incomesource1();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        if (Array.isArray(this.additionalincomes)) {
            data["additionalincomes"] = [];
            for (let item of this.additionalincomes)
                data["additionalincomes"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Incomesource1();
        result.init(json);
        return result;
    }
}
class IntPtr {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) { }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new IntPtr();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new IntPtr();
        result.init(json);
        return result;
    }
}
class IsTenantAvailableInput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.tenancyName = _data["tenancyName"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new IsTenantAvailableInput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["tenancyName"] = this.tenancyName;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new IsTenantAvailableInput();
        result.init(json);
        return result;
    }
}
class IsTenantAvailableOutput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.state = _data["state"];
            this.tenantId = _data["tenantId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new IsTenantAvailableOutput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["state"] = this.state;
        data["tenantId"] = this.tenantId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new IsTenantAvailableOutput();
        result.init(json);
        return result;
    }
}
var LayoutKind;
(function (LayoutKind) {
    LayoutKind[LayoutKind["_0"] = 0] = "_0";
    LayoutKind[LayoutKind["_2"] = 2] = "_2";
    LayoutKind[LayoutKind["_3"] = 3] = "_3";
})(LayoutKind || (LayoutKind = {}));
class LoanAndPropertyInformationDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanAmount4a1 = _data["loanAmount4a1"];
            this.loanPurpose4a2 = _data["loanPurpose4a2"];
            this.propertyStreet4a31 = _data["propertyStreet4a31"];
            this.propertyUnitNo4a32 = _data["propertyUnitNo4a32"];
            this.propertyZip4a35 = _data["propertyZip4a35"];
            this.country4a36 = _data["country4a36"];
            this.state4a34 = _data["state4a34"];
            this.city4a33 = _data["city4a33"];
            this.propertyNumberUnits4a4 = _data["propertyNumberUnits4a4"];
            this.propertyValue4a5 = _data["propertyValue4a5"];
            this.loanPropertyOccupancy4a6 = _data["loanPropertyOccupancy4a6"];
            this.fhaSecondaryResidance4a61 = _data["fhaSecondaryResidance4a61"];
            this.isMixedUseProperty4a7 = _data["isMixedUseProperty4a7"];
            this.isManufacturedHome4a8 = _data["isManufacturedHome4a8"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanAndPropertyInformationDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanAmount4a1"] = this.loanAmount4a1;
        data["loanPurpose4a2"] = this.loanPurpose4a2;
        data["propertyStreet4a31"] = this.propertyStreet4a31;
        data["propertyUnitNo4a32"] = this.propertyUnitNo4a32;
        data["propertyZip4a35"] = this.propertyZip4a35;
        data["country4a36"] = this.country4a36;
        data["state4a34"] = this.state4a34;
        data["city4a33"] = this.city4a33;
        data["propertyNumberUnits4a4"] = this.propertyNumberUnits4a4;
        data["propertyValue4a5"] = this.propertyValue4a5;
        data["loanPropertyOccupancy4a6"] = this.loanPropertyOccupancy4a6;
        data["fhaSecondaryResidance4a61"] = this.fhaSecondaryResidance4a61;
        data["isMixedUseProperty4a7"] = this.isMixedUseProperty4a7;
        data["isManufacturedHome4a8"] = this.isManufacturedHome4a8;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanAndPropertyInformationDetail();
        result.init(json);
        return result;
    }
}
class LoanAndPropertyInformationGiftDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanPropertyGiftType4d1 = _data["loanPropertyGiftType4d1"];
            this.deposited4d2 = _data["deposited4d2"];
            this.source4d3 = _data["source4d3"];
            this.value4d4 = _data["value4d4"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanAndPropertyInformationGiftDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanPropertyGiftType4d1"] = this.loanPropertyGiftType4d1;
        data["deposited4d2"] = this.deposited4d2;
        data["source4d3"] = this.source4d3;
        data["value4d4"] = this.value4d4;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanAndPropertyInformationGiftDetail();
        result.init(json);
        return result;
    }
}
class LoanApplicationDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.loanDetails = _data["loanDetails"]
                ? LoanDetailDto.fromJS(_data["loanDetails"])
                : undefined;
            this.personalInformation = _data["personalInformation"]
                ? PersonalInformationDto.fromJS(_data["personalInformation"])
                : undefined;
            this.expenses = _data["expenses"]
                ? ExpensesDto.fromJS(_data["expenses"])
                : undefined;
            if (Array.isArray(_data["manualAssetEntries"])) {
                this.manualAssetEntries = [];
                for (let item of _data["manualAssetEntries"])
                    this.manualAssetEntries.push(ManualAssetEntryDto.fromJS(item));
            }
            this.employmentIncome = _data["employmentIncome"]
                ? EmploymentIncomeDto.fromJS(_data["employmentIncome"])
                : undefined;
            this.orderCredit = _data["orderCredit"]
                ? CreditAuthAgreementDto.fromJS(_data["orderCredit"])
                : undefined;
            this.additionalDetails = _data["additionalDetails"]
                ? AdditionalDetailsDto.fromJS(_data["additionalDetails"])
                : undefined;
            this.eConsent = _data["eConsent"]
                ? EConsentDto.fromJS(_data["eConsent"])
                : undefined;
            this.declaration = _data["declaration"]
                ? DeclarationDto.fromJS(_data["declaration"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanApplicationDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["loanDetails"] = this.loanDetails
            ? this.loanDetails.toJSON()
            : undefined;
        data["personalInformation"] = this.personalInformation
            ? this.personalInformation.toJSON()
            : undefined;
        data["expenses"] = this.expenses ? this.expenses.toJSON() : undefined;
        if (Array.isArray(this.manualAssetEntries)) {
            data["manualAssetEntries"] = [];
            for (let item of this.manualAssetEntries)
                data["manualAssetEntries"].push(item.toJSON());
        }
        data["employmentIncome"] = this.employmentIncome
            ? this.employmentIncome.toJSON()
            : undefined;
        data["orderCredit"] = this.orderCredit
            ? this.orderCredit.toJSON()
            : undefined;
        data["additionalDetails"] = this.additionalDetails
            ? this.additionalDetails.toJSON()
            : undefined;
        data["eConsent"] = this.eConsent ? this.eConsent.toJSON() : undefined;
        data["declaration"] = this.declaration
            ? this.declaration.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanApplicationDto();
        result.init(json);
        return result;
    }
}
class LoanApplicationDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(LoanApplicationDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanApplicationDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanApplicationDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class LoanDetailDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.isWorkingWithOfficer = _data["isWorkingWithOfficer"];
            this.loanOfficerId = _data["loanOfficerId"];
            this.whatStageAreyouIn = _data["whatStageAreyouIn"];
            this.referredBy = _data["referredBy"];
            this.estimatedAnnualTaxes = _data["estimatedAnnualTaxes"];
            this.estimatedAnnualHomeInsurance = _data["estimatedAnnualHomeInsurance"];
            this.purposeOfLoan = _data["purposeOfLoan"];
            this.estimatedValue = _data["estimatedValue"];
            this.currentLoanAmount = _data["currentLoanAmount"];
            this.requestedLoanAmount = _data["requestedLoanAmount"];
            this.estimatedPurchasePrice = _data["estimatedPurchasePrice"];
            this.downPaymentAmount = _data["downPaymentAmount"];
            this.downPaymentPercentage = _data["downPaymentPercentage"];
            this.sourceOfDownPayment = _data["sourceOfDownPayment"];
            this.giftAmount = _data["giftAmount"];
            this.giftExplanation = _data["giftExplanation"];
            this.haveSecondMortgage = _data["haveSecondMortgage"];
            this.secondMortgageAmount = _data["secondMortgageAmount"];
            this.payLoanWithNewLoan = _data["payLoanWithNewLoan"];
            this.refinancingCurrentHome = _data["refinancingCurrentHome"];
            this.yearAcquired = _data["yearAcquired"];
            this.originalPrice = _data["originalPrice"];
            this.address = _data["address"];
            this.unit = _data["unit"];
            this.zipCode = _data["zipCode"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.propertyTypeId = _data["propertyTypeId"];
            this.propertyUseId = _data["propertyUseId"];
            this.startedLookingForNewHome = _data["startedLookingForNewHome"];
            this.newConstruction = _data["newConstruction"];
            this.bankOwned = _data["bankOwned"];
            this.contractDate = _data["contractDate"];
            this.creditScore = _data["creditScore"];
            this.firstName = _data["firstName"];
            this.middleName = _data["middleName"];
            this.lastName = _data["lastName"];
            this.phoneNumber = _data["phoneNumber"];
            this.emailAddress = _data["emailAddress"];
            this.typeOfHome = _data["typeOfHome"];
            this.hoaDues = _data["hoaDues"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanDetailDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["isWorkingWithOfficer"] = this.isWorkingWithOfficer;
        data["loanOfficerId"] = this.loanOfficerId;
        data["whatStageAreyouIn"] = this.whatStageAreyouIn;
        data["referredBy"] = this.referredBy;
        data["estimatedAnnualTaxes"] = this.estimatedAnnualTaxes;
        data["estimatedAnnualHomeInsurance"] = this.estimatedAnnualHomeInsurance;
        data["purposeOfLoan"] = this.purposeOfLoan;
        data["estimatedValue"] = this.estimatedValue;
        data["currentLoanAmount"] = this.currentLoanAmount;
        data["requestedLoanAmount"] = this.requestedLoanAmount;
        data["estimatedPurchasePrice"] = this.estimatedPurchasePrice;
        data["downPaymentAmount"] = this.downPaymentAmount;
        data["downPaymentPercentage"] = this.downPaymentPercentage;
        data["sourceOfDownPayment"] = this.sourceOfDownPayment;
        data["giftAmount"] = this.giftAmount;
        data["giftExplanation"] = this.giftExplanation;
        data["haveSecondMortgage"] = this.haveSecondMortgage;
        data["secondMortgageAmount"] = this.secondMortgageAmount;
        data["payLoanWithNewLoan"] = this.payLoanWithNewLoan;
        data["refinancingCurrentHome"] = this.refinancingCurrentHome;
        data["yearAcquired"] = this.yearAcquired;
        data["originalPrice"] = this.originalPrice;
        data["address"] = this.address;
        data["unit"] = this.unit;
        data["zipCode"] = this.zipCode;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["propertyTypeId"] = this.propertyTypeId;
        data["propertyUseId"] = this.propertyUseId;
        data["startedLookingForNewHome"] = this.startedLookingForNewHome;
        data["newConstruction"] = this.newConstruction;
        data["bankOwned"] = this.bankOwned;
        data["contractDate"] = this.contractDate;
        data["creditScore"] = this.creditScore;
        data["firstName"] = this.firstName;
        data["middleName"] = this.middleName;
        data["lastName"] = this.lastName;
        data["phoneNumber"] = this.phoneNumber;
        data["emailAddress"] = this.emailAddress;
        data["typeOfHome"] = this.typeOfHome;
        data["hoaDues"] = this.hoaDues;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanDetailDto();
        result.init(json);
        return result;
    }
}
class LoanDetailDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(LoanDetailDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanDetailDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanDetailDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class LoanListDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.borrower = _data["borrower"];
            this.fileName = _data["fileName"];
            this.loanStatus = _data["loanStatus"];
            this.statusDate = _data["statusDate"];
            this.estClose = _data["estClose"];
            this.rateLoc = _data["rateLoc"];
            this.processor = _data["processor"];
            this.originator = _data["originator"];
            this.contact = _data["contact"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanListDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["borrower"] = this.borrower;
        data["fileName"] = this.fileName;
        data["loanStatus"] = this.loanStatus;
        data["statusDate"] = this.statusDate;
        data["estClose"] = this.estClose;
        data["rateLoc"] = this.rateLoc;
        data["processor"] = this.processor;
        data["originator"] = this.originator;
        data["contact"] = this.contact;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanListDto();
        result.init(json);
        return result;
    }
}
class LoanListDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(LoanListDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new LoanListDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new LoanListDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Loanapplication {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.loanDetailId = _data["loanDetailId"];
            this.additionalDetailId = _data["additionalDetailId"];
            this.personalDetailId = _data["personalDetailId"];
            this.creditAuthAgreementId = _data["creditAuthAgreementId"];
            this.consentDetailId = _data["consentDetailId"];
            this.expenseId = _data["expenseId"];
            this.updatedOn = _data["updatedOn"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["updatedOn"].toString())
                : undefined;
            this.additionalDetail = _data["additionalDetail"]
                ? Additionaldetail.fromJS(_data["additionalDetail"])
                : undefined;
            this.consentDetail = _data["consentDetail"]
                ? Consentdetail.fromJS(_data["consentDetail"])
                : undefined;
            this.creditAuthAgreement = _data["creditAuthAgreement"]
                ? Creditauthagreement.fromJS(_data["creditAuthAgreement"])
                : undefined;
            this.expense = _data["expense"]
                ? Expense.fromJS(_data["expense"])
                : undefined;
            this.loanDetail = _data["loanDetail"]
                ? Loandetail.fromJS(_data["loanDetail"])
                : undefined;
            this.personalDetail = _data["personalDetail"]
                ? Personaldetail.fromJS(_data["personalDetail"])
                : undefined;
            if (Array.isArray(_data["additionalincomes"])) {
                this.additionalincomes = [];
                for (let item of _data["additionalincomes"])
                    this.additionalincomes.push(Additionalincome.fromJS(item));
            }
            if (Array.isArray(_data["borroweremploymentinformations"])) {
                this.borroweremploymentinformations = [];
                for (let item of _data["borroweremploymentinformations"])
                    this.borroweremploymentinformations.push(Borroweremploymentinformation.fromJS(item));
            }
            if (Array.isArray(_data["borrowermonthlyincomes"])) {
                this.borrowermonthlyincomes = [];
                for (let item of _data["borrowermonthlyincomes"])
                    this.borrowermonthlyincomes.push(Borrowermonthlyincome.fromJS(item));
            }
            if (Array.isArray(_data["declarationborroweredemographicsinformations"])) {
                this.declarationborroweredemographicsinformations = [];
                for (let item of _data["declarationborroweredemographicsinformations"])
                    this.declarationborroweredemographicsinformations.push(Declarationborroweredemographicsinformation.fromJS(item));
            }
            if (Array.isArray(_data["declarations"])) {
                this.declarations = [];
                for (let item of _data["declarations"])
                    this.declarations.push(Declaration.fromJS(item));
            }
            if (Array.isArray(_data["manualassetentries"])) {
                this.manualassetentries = [];
                for (let item of _data["manualassetentries"])
                    this.manualassetentries.push(Manualassetentry.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Loanapplication();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["loanDetailId"] = this.loanDetailId;
        data["additionalDetailId"] = this.additionalDetailId;
        data["personalDetailId"] = this.personalDetailId;
        data["creditAuthAgreementId"] = this.creditAuthAgreementId;
        data["consentDetailId"] = this.consentDetailId;
        data["expenseId"] = this.expenseId;
        data["updatedOn"] = this.updatedOn
            ? this.updatedOn.toISOString()
            : undefined;
        data["additionalDetail"] = this.additionalDetail
            ? this.additionalDetail.toJSON()
            : undefined;
        data["consentDetail"] = this.consentDetail
            ? this.consentDetail.toJSON()
            : undefined;
        data["creditAuthAgreement"] = this.creditAuthAgreement
            ? this.creditAuthAgreement.toJSON()
            : undefined;
        data["expense"] = this.expense ? this.expense.toJSON() : undefined;
        data["loanDetail"] = this.loanDetail
            ? this.loanDetail.toJSON()
            : undefined;
        data["personalDetail"] = this.personalDetail
            ? this.personalDetail.toJSON()
            : undefined;
        if (Array.isArray(this.additionalincomes)) {
            data["additionalincomes"] = [];
            for (let item of this.additionalincomes)
                data["additionalincomes"].push(item.toJSON());
        }
        if (Array.isArray(this.borroweremploymentinformations)) {
            data["borroweremploymentinformations"] = [];
            for (let item of this.borroweremploymentinformations)
                data["borroweremploymentinformations"].push(item.toJSON());
        }
        if (Array.isArray(this.borrowermonthlyincomes)) {
            data["borrowermonthlyincomes"] = [];
            for (let item of this.borrowermonthlyincomes)
                data["borrowermonthlyincomes"].push(item.toJSON());
        }
        if (Array.isArray(this.declarationborroweredemographicsinformations)) {
            data["declarationborroweredemographicsinformations"] = [];
            for (let item of this.declarationborroweredemographicsinformations)
                data["declarationborroweredemographicsinformations"].push(item.toJSON());
        }
        if (Array.isArray(this.declarations)) {
            data["declarations"] = [];
            for (let item of this.declarations)
                data["declarations"].push(item.toJSON());
        }
        if (Array.isArray(this.manualassetentries)) {
            data["manualassetentries"] = [];
            for (let item of this.manualassetentries)
                data["manualassetentries"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Loanapplication();
        result.init(json);
        return result;
    }
}
class Loandetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.isWorkingWithOfficer = _data["isWorkingWithOfficer"];
            this.loanOfficerId = _data["loanOfficerId"];
            this.referredBy = _data["referredBy"];
            this.purposeOfLoan = _data["purposeOfLoan"];
            this.estimatedValue = _data["estimatedValue"];
            this.currentLoanAmount = _data["currentLoanAmount"];
            this.requestedLoanAmount = _data["requestedLoanAmount"];
            this.estimatedPurchasePrice = _data["estimatedPurchasePrice"];
            this.downPaymentAmount = _data["downPaymentAmount"];
            this.downPaymentPercentage = _data["downPaymentPercentage"];
            this.sourceOfDownPayment = _data["sourceOfDownPayment"];
            this.giftAmount = _data["giftAmount"];
            this.giftExplanation = _data["giftExplanation"];
            this.haveSecondMortgage = _data["haveSecondMortgage"];
            this.secondMortgageAmount = _data["secondMortgageAmount"];
            this.payLoanWithNewLoan = _data["payLoanWithNewLoan"];
            this.refinancingCurrentHome = _data["refinancingCurrentHome"];
            this.yearAcquired = _data["yearAcquired"];
            this.originalPrice = _data["originalPrice"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.propertyTypeId = _data["propertyTypeId"];
            this.propertyUseId = _data["propertyUseId"];
            this.startedLookingForNewHome = _data["startedLookingForNewHome"];
            if (Array.isArray(_data["loanapplications"])) {
                this.loanapplications = [];
                for (let item of _data["loanapplications"])
                    this.loanapplications.push(Loanapplication.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Loandetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["isWorkingWithOfficer"] = this.isWorkingWithOfficer;
        data["loanOfficerId"] = this.loanOfficerId;
        data["referredBy"] = this.referredBy;
        data["purposeOfLoan"] = this.purposeOfLoan;
        data["estimatedValue"] = this.estimatedValue;
        data["currentLoanAmount"] = this.currentLoanAmount;
        data["requestedLoanAmount"] = this.requestedLoanAmount;
        data["estimatedPurchasePrice"] = this.estimatedPurchasePrice;
        data["downPaymentAmount"] = this.downPaymentAmount;
        data["downPaymentPercentage"] = this.downPaymentPercentage;
        data["sourceOfDownPayment"] = this.sourceOfDownPayment;
        data["giftAmount"] = this.giftAmount;
        data["giftExplanation"] = this.giftExplanation;
        data["haveSecondMortgage"] = this.haveSecondMortgage;
        data["secondMortgageAmount"] = this.secondMortgageAmount;
        data["payLoanWithNewLoan"] = this.payLoanWithNewLoan;
        data["refinancingCurrentHome"] = this.refinancingCurrentHome;
        data["yearAcquired"] = this.yearAcquired;
        data["originalPrice"] = this.originalPrice;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["propertyTypeId"] = this.propertyTypeId;
        data["propertyUseId"] = this.propertyUseId;
        data["startedLookingForNewHome"] = this.startedLookingForNewHome;
        if (Array.isArray(this.loanapplications)) {
            data["loanapplications"] = [];
            for (let item of this.loanapplications)
                data["loanapplications"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Loandetail();
        result.init(json);
        return result;
    }
}
class ManualAssetEntryDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.assetTypeId = _data["assetTypeId"];
            this.accountNumber = _data["accountNumber"];
            this.cashValue = _data["cashValue"];
            this.address = _data["address"];
            this.address2 = _data["address2"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.description = _data["description"];
            this.name = _data["name"];
            this.bankName = _data["bankName"];
            this.propertyStatus = _data["propertyStatus"];
            this.propertyIsUsedAs = _data["propertyIsUsedAs"];
            this.propertyType = _data["propertyType"];
            this.presentMarketValue = _data["presentMarketValue"];
            this.outstandingMortgageBalance = _data["outstandingMortgageBalance"];
            this.monthlyMortgagePayment = _data["monthlyMortgagePayment"];
            this.purchasePrice = _data["purchasePrice"];
            this.grossRentalIncome = _data["grossRentalIncome"];
            this.taxesInsuranceAndOther = _data["taxesInsuranceAndOther"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            if (Array.isArray(_data["stockAndBonds"])) {
                this.stockAndBonds = [];
                for (let item of _data["stockAndBonds"])
                    this.stockAndBonds.push(StockAndBondViewModel.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ManualAssetEntryDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["assetTypeId"] = this.assetTypeId;
        data["accountNumber"] = this.accountNumber;
        data["cashValue"] = this.cashValue;
        data["address"] = this.address;
        data["address2"] = this.address2;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["description"] = this.description;
        data["name"] = this.name;
        data["bankName"] = this.bankName;
        data["propertyStatus"] = this.propertyStatus;
        data["propertyIsUsedAs"] = this.propertyIsUsedAs;
        data["propertyType"] = this.propertyType;
        data["presentMarketValue"] = this.presentMarketValue;
        data["outstandingMortgageBalance"] = this.outstandingMortgageBalance;
        data["monthlyMortgagePayment"] = this.monthlyMortgagePayment;
        data["purchasePrice"] = this.purchasePrice;
        data["grossRentalIncome"] = this.grossRentalIncome;
        data["taxesInsuranceAndOther"] = this.taxesInsuranceAndOther;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        if (Array.isArray(this.stockAndBonds)) {
            data["stockAndBonds"] = [];
            for (let item of this.stockAndBonds)
                data["stockAndBonds"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ManualAssetEntryDto();
        result.init(json);
        return result;
    }
}
class ManualAssetEntryDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(ManualAssetEntryDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ManualAssetEntryDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ManualAssetEntryDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Manualassetentry {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.assetTypeId = _data["assetTypeId"];
            this.accountNumber = _data["accountNumber"];
            this.cashValue = _data["cashValue"];
            this.address = _data["address"];
            this.address2 = _data["address2"];
            this.city = _data["city"];
            this.stateId = _data["stateId"];
            this.zipCode = _data["zipCode"];
            this.description = _data["description"];
            this.name = _data["name"];
            this.bankName = _data["bankName"];
            this.propertyStatus = _data["propertyStatus"];
            this.propertyIsUsedAs = _data["propertyIsUsedAs"];
            this.propertyType = _data["propertyType"];
            this.presentMarketValue = _data["presentMarketValue"];
            this.outstandingMortgageBalance = _data["outstandingMortgageBalance"];
            this.monthlyMortgagePayment = _data["monthlyMortgagePayment"];
            this.purchasePrice = _data["purchasePrice"];
            this.grossRentalIncome = _data["grossRentalIncome"];
            this.taxesInsuranceAndOther = _data["taxesInsuranceAndOther"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.borrowerTypeId = _data["borrowerTypeId"];
            this.assetType = _data["assetType"]
                ? Assettype.fromJS(_data["assetType"])
                : undefined;
            this.borrowerType = _data["borrowerType"]
                ? Borrowertype.fromJS(_data["borrowerType"])
                : undefined;
            this.loanApplication = _data["loanApplication"]
                ? Loanapplication.fromJS(_data["loanApplication"])
                : undefined;
            this.state = _data["state"]
                ? State.fromJS(_data["state"])
                : undefined;
            if (Array.isArray(_data["stockandbonds"])) {
                this.stockandbonds = [];
                for (let item of _data["stockandbonds"])
                    this.stockandbonds.push(Stockandbond.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Manualassetentry();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["assetTypeId"] = this.assetTypeId;
        data["accountNumber"] = this.accountNumber;
        data["cashValue"] = this.cashValue;
        data["address"] = this.address;
        data["address2"] = this.address2;
        data["city"] = this.city;
        data["stateId"] = this.stateId;
        data["zipCode"] = this.zipCode;
        data["description"] = this.description;
        data["name"] = this.name;
        data["bankName"] = this.bankName;
        data["propertyStatus"] = this.propertyStatus;
        data["propertyIsUsedAs"] = this.propertyIsUsedAs;
        data["propertyType"] = this.propertyType;
        data["presentMarketValue"] = this.presentMarketValue;
        data["outstandingMortgageBalance"] = this.outstandingMortgageBalance;
        data["monthlyMortgagePayment"] = this.monthlyMortgagePayment;
        data["purchasePrice"] = this.purchasePrice;
        data["grossRentalIncome"] = this.grossRentalIncome;
        data["taxesInsuranceAndOther"] = this.taxesInsuranceAndOther;
        data["loanApplicationId"] = this.loanApplicationId;
        data["borrowerTypeId"] = this.borrowerTypeId;
        data["assetType"] = this.assetType
            ? this.assetType.toJSON()
            : undefined;
        data["borrowerType"] = this.borrowerType
            ? this.borrowerType.toJSON()
            : undefined;
        data["loanApplication"] = this.loanApplication
            ? this.loanApplication.toJSON()
            : undefined;
        data["state"] = this.state ? this.state.toJSON() : undefined;
        if (Array.isArray(this.stockandbonds)) {
            data["stockandbonds"] = [];
            for (let item of this.stockandbonds)
                data["stockandbonds"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Manualassetentry();
        result.init(json);
        return result;
    }
}
class MemberInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.memberType = _data["memberType"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.name = _data["name"];
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new MemberInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["memberType"] = this.memberType;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["name"] = this.name;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new MemberInfo();
        result.init(json);
        return result;
    }
}
var MemberTypes;
(function (MemberTypes) {
    MemberTypes[MemberTypes["_1"] = 1] = "_1";
    MemberTypes[MemberTypes["_2"] = 2] = "_2";
    MemberTypes[MemberTypes["_4"] = 4] = "_4";
    MemberTypes[MemberTypes["_8"] = 8] = "_8";
    MemberTypes[MemberTypes["_16"] = 16] = "_16";
    MemberTypes[MemberTypes["_32"] = 32] = "_32";
    MemberTypes[MemberTypes["_64"] = 64] = "_64";
    MemberTypes[MemberTypes["_128"] = 128] = "_128";
    MemberTypes[MemberTypes["_191"] = 191] = "_191";
})(MemberTypes || (MemberTypes = {}));
var MethodAttributes;
(function (MethodAttributes) {
    MethodAttributes[MethodAttributes["_0"] = 0] = "_0";
    MethodAttributes[MethodAttributes["_1"] = 1] = "_1";
    MethodAttributes[MethodAttributes["_2"] = 2] = "_2";
    MethodAttributes[MethodAttributes["_3"] = 3] = "_3";
    MethodAttributes[MethodAttributes["_4"] = 4] = "_4";
    MethodAttributes[MethodAttributes["_5"] = 5] = "_5";
    MethodAttributes[MethodAttributes["_6"] = 6] = "_6";
    MethodAttributes[MethodAttributes["_7"] = 7] = "_7";
    MethodAttributes[MethodAttributes["_8"] = 8] = "_8";
    MethodAttributes[MethodAttributes["_16"] = 16] = "_16";
    MethodAttributes[MethodAttributes["_32"] = 32] = "_32";
    MethodAttributes[MethodAttributes["_64"] = 64] = "_64";
    MethodAttributes[MethodAttributes["_128"] = 128] = "_128";
    MethodAttributes[MethodAttributes["_256"] = 256] = "_256";
    MethodAttributes[MethodAttributes["_512"] = 512] = "_512";
    MethodAttributes[MethodAttributes["_1024"] = 1024] = "_1024";
    MethodAttributes[MethodAttributes["_2048"] = 2048] = "_2048";
    MethodAttributes[MethodAttributes["_4096"] = 4096] = "_4096";
    MethodAttributes[MethodAttributes["_8192"] = 8192] = "_8192";
    MethodAttributes[MethodAttributes["_16384"] = 16384] = "_16384";
    MethodAttributes[MethodAttributes["_32768"] = 32768] = "_32768";
    MethodAttributes[MethodAttributes["_53248"] = 53248] = "_53248";
})(MethodAttributes || (MethodAttributes = {}));
class MethodBase {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.memberType = _data["memberType"];
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.attributes = _data["attributes"];
            this.methodImplementationFlags = _data["methodImplementationFlags"];
            this.callingConvention = _data["callingConvention"];
            this.isAbstract = _data["isAbstract"];
            this.isConstructor = _data["isConstructor"];
            this.isFinal = _data["isFinal"];
            this.isHideBySig = _data["isHideBySig"];
            this.isSpecialName = _data["isSpecialName"];
            this.isStatic = _data["isStatic"];
            this.isVirtual = _data["isVirtual"];
            this.isAssembly = _data["isAssembly"];
            this.isFamily = _data["isFamily"];
            this.isFamilyAndAssembly = _data["isFamilyAndAssembly"];
            this.isFamilyOrAssembly = _data["isFamilyOrAssembly"];
            this.isPrivate = _data["isPrivate"];
            this.isPublic = _data["isPublic"];
            this.isConstructedGenericMethod =
                _data["isConstructedGenericMethod"];
            this.isGenericMethod = _data["isGenericMethod"];
            this.isGenericMethodDefinition =
                _data["isGenericMethodDefinition"];
            this.containsGenericParameters =
                _data["containsGenericParameters"];
            this.methodHandle = _data["methodHandle"]
                ? RuntimeMethodHandle.fromJS(_data["methodHandle"])
                : undefined;
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new MethodBase();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["memberType"] = this.memberType;
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["attributes"] = this.attributes;
        data["methodImplementationFlags"] = this.methodImplementationFlags;
        data["callingConvention"] = this.callingConvention;
        data["isAbstract"] = this.isAbstract;
        data["isConstructor"] = this.isConstructor;
        data["isFinal"] = this.isFinal;
        data["isHideBySig"] = this.isHideBySig;
        data["isSpecialName"] = this.isSpecialName;
        data["isStatic"] = this.isStatic;
        data["isVirtual"] = this.isVirtual;
        data["isAssembly"] = this.isAssembly;
        data["isFamily"] = this.isFamily;
        data["isFamilyAndAssembly"] = this.isFamilyAndAssembly;
        data["isFamilyOrAssembly"] = this.isFamilyOrAssembly;
        data["isPrivate"] = this.isPrivate;
        data["isPublic"] = this.isPublic;
        data["isConstructedGenericMethod"] = this.isConstructedGenericMethod;
        data["isGenericMethod"] = this.isGenericMethod;
        data["isGenericMethodDefinition"] = this.isGenericMethodDefinition;
        data["containsGenericParameters"] = this.containsGenericParameters;
        data["methodHandle"] = this.methodHandle
            ? this.methodHandle.toJSON()
            : undefined;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new MethodBase();
        result.init(json);
        return result;
    }
}
var MethodImplAttributes;
(function (MethodImplAttributes) {
    MethodImplAttributes[MethodImplAttributes["_0"] = 0] = "_0";
    MethodImplAttributes[MethodImplAttributes["_1"] = 1] = "_1";
    MethodImplAttributes[MethodImplAttributes["_2"] = 2] = "_2";
    MethodImplAttributes[MethodImplAttributes["_3"] = 3] = "_3";
    MethodImplAttributes[MethodImplAttributes["_4"] = 4] = "_4";
    MethodImplAttributes[MethodImplAttributes["_8"] = 8] = "_8";
    MethodImplAttributes[MethodImplAttributes["_16"] = 16] = "_16";
    MethodImplAttributes[MethodImplAttributes["_32"] = 32] = "_32";
    MethodImplAttributes[MethodImplAttributes["_64"] = 64] = "_64";
    MethodImplAttributes[MethodImplAttributes["_128"] = 128] = "_128";
    MethodImplAttributes[MethodImplAttributes["_256"] = 256] = "_256";
    MethodImplAttributes[MethodImplAttributes["_512"] = 512] = "_512";
    MethodImplAttributes[MethodImplAttributes["_4096"] = 4096] = "_4096";
    MethodImplAttributes[MethodImplAttributes["_65535"] = 65535] = "_65535";
})(MethodImplAttributes || (MethodImplAttributes = {}));
class MethodInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.attributes = _data["attributes"];
            this.methodImplementationFlags = _data["methodImplementationFlags"];
            this.callingConvention = _data["callingConvention"];
            this.isAbstract = _data["isAbstract"];
            this.isConstructor = _data["isConstructor"];
            this.isFinal = _data["isFinal"];
            this.isHideBySig = _data["isHideBySig"];
            this.isSpecialName = _data["isSpecialName"];
            this.isStatic = _data["isStatic"];
            this.isVirtual = _data["isVirtual"];
            this.isAssembly = _data["isAssembly"];
            this.isFamily = _data["isFamily"];
            this.isFamilyAndAssembly = _data["isFamilyAndAssembly"];
            this.isFamilyOrAssembly = _data["isFamilyOrAssembly"];
            this.isPrivate = _data["isPrivate"];
            this.isPublic = _data["isPublic"];
            this.isConstructedGenericMethod =
                _data["isConstructedGenericMethod"];
            this.isGenericMethod = _data["isGenericMethod"];
            this.isGenericMethodDefinition =
                _data["isGenericMethodDefinition"];
            this.containsGenericParameters =
                _data["containsGenericParameters"];
            this.methodHandle = _data["methodHandle"]
                ? RuntimeMethodHandle.fromJS(_data["methodHandle"])
                : undefined;
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
            this.memberType = _data["memberType"];
            this.returnParameter = _data["returnParameter"]
                ? ParameterInfo.fromJS(_data["returnParameter"])
                : undefined;
            this.returnType = _data["returnType"]
                ? Type.fromJS(_data["returnType"])
                : undefined;
            this.returnTypeCustomAttributes = _data["returnTypeCustomAttributes"]
                ? ICustomAttributeProvider.fromJS(_data["returnTypeCustomAttributes"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new MethodInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["attributes"] = this.attributes;
        data["methodImplementationFlags"] = this.methodImplementationFlags;
        data["callingConvention"] = this.callingConvention;
        data["isAbstract"] = this.isAbstract;
        data["isConstructor"] = this.isConstructor;
        data["isFinal"] = this.isFinal;
        data["isHideBySig"] = this.isHideBySig;
        data["isSpecialName"] = this.isSpecialName;
        data["isStatic"] = this.isStatic;
        data["isVirtual"] = this.isVirtual;
        data["isAssembly"] = this.isAssembly;
        data["isFamily"] = this.isFamily;
        data["isFamilyAndAssembly"] = this.isFamilyAndAssembly;
        data["isFamilyOrAssembly"] = this.isFamilyOrAssembly;
        data["isPrivate"] = this.isPrivate;
        data["isPublic"] = this.isPublic;
        data["isConstructedGenericMethod"] = this.isConstructedGenericMethod;
        data["isGenericMethod"] = this.isGenericMethod;
        data["isGenericMethodDefinition"] = this.isGenericMethodDefinition;
        data["containsGenericParameters"] = this.containsGenericParameters;
        data["methodHandle"] = this.methodHandle
            ? this.methodHandle.toJSON()
            : undefined;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        data["memberType"] = this.memberType;
        data["returnParameter"] = this.returnParameter
            ? this.returnParameter.toJSON()
            : undefined;
        data["returnType"] = this.returnType
            ? this.returnType.toJSON()
            : undefined;
        data["returnTypeCustomAttributes"] = this.returnTypeCustomAttributes
            ? this.returnTypeCustomAttributes.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new MethodInfo();
        result.init(json);
        return result;
    }
}
class Module {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.assembly = _data["assembly"]
                ? Assembly.fromJS(_data["assembly"])
                : undefined;
            this.fullyQualifiedName = _data["fullyQualifiedName"];
            this.name = _data["name"];
            this.mdStreamVersion = _data["mdStreamVersion"];
            this.moduleVersionId = _data["moduleVersionId"];
            this.scopeName = _data["scopeName"];
            this.moduleHandle = _data["moduleHandle"]
                ? ModuleHandle.fromJS(_data["moduleHandle"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.metadataToken = _data["metadataToken"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Module();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["assembly"] = this.assembly ? this.assembly.toJSON() : undefined;
        data["fullyQualifiedName"] = this.fullyQualifiedName;
        data["name"] = this.name;
        data["mdStreamVersion"] = this.mdStreamVersion;
        data["moduleVersionId"] = this.moduleVersionId;
        data["scopeName"] = this.scopeName;
        data["moduleHandle"] = this.moduleHandle
            ? this.moduleHandle.toJSON()
            : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["metadataToken"] = this.metadataToken;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Module();
        result.init(json);
        return result;
    }
}
class ModuleHandle {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.mdStreamVersion = _data["mdStreamVersion"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ModuleHandle();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["mdStreamVersion"] = this.mdStreamVersion;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ModuleHandle();
        result.init(json);
        return result;
    }
}
class MortageLoanOnPropertyDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.applicationFinancialRealEstateId =
                _data["applicationFinancialRealEstateId"];
            this.creditorName3a9 = _data["creditorName3a9"];
            this.accountNumber3a10 = _data["accountNumber3a10"];
            this.monthlyMortagePayment3a11 = _data["monthlyMortagePayment3a11"];
            this.unpaidBalance3a12 = _data["unpaidBalance3a12"];
            this.paidOff3a13 = _data["paidOff3a13"];
            this.mortageLoanType3a14 = _data["mortageLoanType3a14"];
            this.creditLimit3a15 = _data["creditLimit3a15"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new MortageLoanOnPropertyDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["applicationFinancialRealEstateId"] = this.applicationFinancialRealEstateId;
        data["creditorName3a9"] = this.creditorName3a9;
        data["accountNumber3a10"] = this.accountNumber3a10;
        data["monthlyMortagePayment3a11"] = this.monthlyMortagePayment3a11;
        data["unpaidBalance3a12"] = this.unpaidBalance3a12;
        data["paidOff3a13"] = this.paidOff3a13;
        data["mortageLoanType3a14"] = this.mortageLoanType3a14;
        data["creditLimit3a15"] = this.creditLimit3a15;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new MortageLoanOnPropertyDetail();
        result.init(json);
        return result;
    }
}
class NotificationData {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.type = _data["type"];
            if (_data["properties"]) {
                this.properties = {};
                for (let key in _data["properties"]) {
                    if (_data["properties"].hasOwnProperty(key))
                        this.properties[key] = _data["properties"][key];
                }
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new NotificationData();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["type"] = this.type;
        if (this.properties) {
            data["properties"] = {};
            for (let key in this.properties) {
                if (this.properties.hasOwnProperty(key))
                    data["properties"][key] = this.properties[key];
            }
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new NotificationData();
        result.init(json);
        return result;
    }
}
var NotificationSeverity;
(function (NotificationSeverity) {
    NotificationSeverity[NotificationSeverity["_0"] = 0] = "_0";
    NotificationSeverity[NotificationSeverity["_1"] = 1] = "_1";
    NotificationSeverity[NotificationSeverity["_2"] = 2] = "_2";
    NotificationSeverity[NotificationSeverity["_3"] = 3] = "_3";
    NotificationSeverity[NotificationSeverity["_4"] = 4] = "_4";
})(NotificationSeverity || (NotificationSeverity = {}));
var ParameterAttributes;
(function (ParameterAttributes) {
    ParameterAttributes[ParameterAttributes["_0"] = 0] = "_0";
    ParameterAttributes[ParameterAttributes["_1"] = 1] = "_1";
    ParameterAttributes[ParameterAttributes["_2"] = 2] = "_2";
    ParameterAttributes[ParameterAttributes["_4"] = 4] = "_4";
    ParameterAttributes[ParameterAttributes["_8"] = 8] = "_8";
    ParameterAttributes[ParameterAttributes["_16"] = 16] = "_16";
    ParameterAttributes[ParameterAttributes["_4096"] = 4096] = "_4096";
    ParameterAttributes[ParameterAttributes["_8192"] = 8192] = "_8192";
    ParameterAttributes[ParameterAttributes["_16384"] = 16384] = "_16384";
    ParameterAttributes[ParameterAttributes["_32768"] = 32768] = "_32768";
    ParameterAttributes[ParameterAttributes["_61440"] = 61440] = "_61440";
})(ParameterAttributes || (ParameterAttributes = {}));
class ParameterInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.attributes = _data["attributes"];
            this.member = _data["member"]
                ? MemberInfo.fromJS(_data["member"])
                : undefined;
            this.name = _data["name"];
            this.parameterType = _data["parameterType"]
                ? Type.fromJS(_data["parameterType"])
                : undefined;
            this.position = _data["position"];
            this.isIn = _data["isIn"];
            this.isLcid = _data["isLcid"];
            this.isOptional = _data["isOptional"];
            this.isOut = _data["isOut"];
            this.isRetval = _data["isRetval"];
            this.defaultValue = _data["defaultValue"];
            this.rawDefaultValue = _data["rawDefaultValue"];
            this.hasDefaultValue = _data["hasDefaultValue"];
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.metadataToken = _data["metadataToken"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ParameterInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["attributes"] = this.attributes;
        data["member"] = this.member ? this.member.toJSON() : undefined;
        data["name"] = this.name;
        data["parameterType"] = this.parameterType
            ? this.parameterType.toJSON()
            : undefined;
        data["position"] = this.position;
        data["isIn"] = this.isIn;
        data["isLcid"] = this.isLcid;
        data["isOptional"] = this.isOptional;
        data["isOut"] = this.isOut;
        data["isRetval"] = this.isRetval;
        data["defaultValue"] = this.defaultValue;
        data["rawDefaultValue"] = this.rawDefaultValue;
        data["hasDefaultValue"] = this.hasDefaultValue;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["metadataToken"] = this.metadataToken;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ParameterInfo();
        result.init(json);
        return result;
    }
}
class PermissionDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.description = _data["description"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PermissionDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["description"] = this.description;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PermissionDto();
        result.init(json);
        return result;
    }
}
class PermissionDtoListResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(PermissionDto.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PermissionDtoListResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PermissionDtoListResultDto();
        result.init(json);
        return result;
    }
}
class PersonalInformationDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.isApplyingWithCoBorrower = _data["isApplyingWithCoBorrower"];
            this.useIncomeOfPersonOtherThanBorrower =
                _data["useIncomeOfPersonOtherThanBorrower"];
            this.agreePrivacyPolicy = _data["agreePrivacyPolicy"];
            this.borrower = _data["borrower"]
                ? BorrowerDto.fromJS(_data["borrower"])
                : undefined;
            this.coBorrower = _data["coBorrower"]
                ? BorrowerDto.fromJS(_data["coBorrower"])
                : undefined;
            this.residentialAddress = _data["residentialAddress"]
                ? AddressDto.fromJS(_data["residentialAddress"])
                : undefined;
            this.coBorrowerResidentialAddress = _data["coBorrowerResidentialAddress"]
                ? AddressDto.fromJS(_data["coBorrowerResidentialAddress"])
                : undefined;
            if (Array.isArray(_data["previousAddresses"])) {
                this.previousAddresses = [];
                for (let item of _data["previousAddresses"])
                    this.previousAddresses.push(AddressDto.fromJS(item));
            }
            this.mailingAddress = _data["mailingAddress"]
                ? AddressDto.fromJS(_data["mailingAddress"])
                : undefined;
            this.isMailingAddressSameAsResidential =
                _data["isMailingAddressSameAsResidential"];
            if (Array.isArray(_data["coBorrowerPreviousAddresses"])) {
                this.coBorrowerPreviousAddresses = [];
                for (let item of _data["coBorrowerPreviousAddresses"])
                    this.coBorrowerPreviousAddresses.push(AddressDto.fromJS(item));
            }
            this.coBorrowerMailingAddress = _data["coBorrowerMailingAddress"]
                ? AddressDto.fromJS(_data["coBorrowerMailingAddress"])
                : undefined;
            this.coBorrowerIsMailingAddressSameAsResidential =
                _data["coBorrowerIsMailingAddressSameAsResidential"];
            this.loanApplicationId = _data["loanApplicationId"];
            this.coBorrowerResidentialAddressSameAsBorrowerResidential =
                _data["coBorrowerResidentialAddressSameAsBorrowerResidential"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PersonalInformationDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["isApplyingWithCoBorrower"] = this.isApplyingWithCoBorrower;
        data["useIncomeOfPersonOtherThanBorrower"] = this.useIncomeOfPersonOtherThanBorrower;
        data["agreePrivacyPolicy"] = this.agreePrivacyPolicy;
        data["borrower"] = this.borrower ? this.borrower.toJSON() : undefined;
        data["coBorrower"] = this.coBorrower
            ? this.coBorrower.toJSON()
            : undefined;
        data["residentialAddress"] = this.residentialAddress
            ? this.residentialAddress.toJSON()
            : undefined;
        data["coBorrowerResidentialAddress"] = this.coBorrowerResidentialAddress
            ? this.coBorrowerResidentialAddress.toJSON()
            : undefined;
        if (Array.isArray(this.previousAddresses)) {
            data["previousAddresses"] = [];
            for (let item of this.previousAddresses)
                data["previousAddresses"].push(item.toJSON());
        }
        data["mailingAddress"] = this.mailingAddress
            ? this.mailingAddress.toJSON()
            : undefined;
        data["isMailingAddressSameAsResidential"] = this.isMailingAddressSameAsResidential;
        if (Array.isArray(this.coBorrowerPreviousAddresses)) {
            data["coBorrowerPreviousAddresses"] = [];
            for (let item of this.coBorrowerPreviousAddresses)
                data["coBorrowerPreviousAddresses"].push(item.toJSON());
        }
        data["coBorrowerMailingAddress"] = this.coBorrowerMailingAddress
            ? this.coBorrowerMailingAddress.toJSON()
            : undefined;
        data["coBorrowerIsMailingAddressSameAsResidential"] = this.coBorrowerIsMailingAddressSameAsResidential;
        data["loanApplicationId"] = this.loanApplicationId;
        data["coBorrowerResidentialAddressSameAsBorrowerResidential"] = this.coBorrowerResidentialAddressSameAsBorrowerResidential;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PersonalInformationDto();
        result.init(json);
        return result;
    }
}
class PersonalInformationDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(PersonalInformationDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PersonalInformationDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PersonalInformationDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class Personaldetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.isApplyingWithCoBorrower = _data["isApplyingWithCoBorrower"];
            this.useIncomeOfPersonOtherThanBorrower =
                _data["useIncomeOfPersonOtherThanBorrower"];
            this.agreePrivacyPolicy = _data["agreePrivacyPolicy"];
            this.borrowerId = _data["borrowerId"];
            this.coBorrowerId = _data["coBorrowerId"];
            this.isMailingAddressSameAsResidential =
                _data["isMailingAddressSameAsResidential"];
            this.coBorrowerIsMailingAddressSameAsResidential =
                _data["coBorrowerIsMailingAddressSameAsResidential"];
            this.coBorrowerResidentialAddressSameAsBorrowerResidential =
                _data["coBorrowerResidentialAddressSameAsBorrowerResidential"];
            this.borrower = _data["borrower"]
                ? Borrower.fromJS(_data["borrower"])
                : undefined;
            this.coBorrower = _data["coBorrower"]
                ? Borrower.fromJS(_data["coBorrower"])
                : undefined;
            this.loanapplication = _data["loanapplication"]
                ? Loanapplication.fromJS(_data["loanapplication"])
                : undefined;
            if (Array.isArray(_data["addresses"])) {
                this.addresses = [];
                for (let item of _data["addresses"])
                    this.addresses.push(Address.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Personaldetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["isApplyingWithCoBorrower"] = this.isApplyingWithCoBorrower;
        data["useIncomeOfPersonOtherThanBorrower"] = this.useIncomeOfPersonOtherThanBorrower;
        data["agreePrivacyPolicy"] = this.agreePrivacyPolicy;
        data["borrowerId"] = this.borrowerId;
        data["coBorrowerId"] = this.coBorrowerId;
        data["isMailingAddressSameAsResidential"] = this.isMailingAddressSameAsResidential;
        data["coBorrowerIsMailingAddressSameAsResidential"] = this.coBorrowerIsMailingAddressSameAsResidential;
        data["coBorrowerResidentialAddressSameAsBorrowerResidential"] = this.coBorrowerResidentialAddressSameAsBorrowerResidential;
        data["borrower"] = this.borrower ? this.borrower.toJSON() : undefined;
        data["coBorrower"] = this.coBorrower
            ? this.coBorrower.toJSON()
            : undefined;
        data["loanapplication"] = this.loanapplication
            ? this.loanapplication.toJSON()
            : undefined;
        if (Array.isArray(this.addresses)) {
            data["addresses"] = [];
            for (let item of this.addresses)
                data["addresses"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Personaldetail();
        result.init(json);
        return result;
    }
}
class PreviousEmployementDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.employerBusinessName1d2 = _data["employerBusinessName1d2"];
            this.street1d31 = _data["street1d31"];
            this.unit1d32 = _data["unit1d32"];
            this.zip1d35 = _data["zip1d35"];
            this.country1d36 = _data["country1d36"];
            this.stateId1d34 = _data["stateId1d34"];
            this.city1d33 = _data["city1d33"];
            this.positionTitle1d4 = _data["positionTitle1d4"];
            this.startDate1d5 = _data["startDate1d5"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["startDate1d5"].toString())
                : undefined;
            this.endDate1d6 = _data["endDate1d6"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["endDate1d6"].toString())
                : undefined;
            this.isSelfEmployed1d7 = _data["isSelfEmployed1d7"];
            this.grossMonthlyIncome1d8 = _data["grossMonthlyIncome1d8"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PreviousEmployementDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["employerBusinessName1d2"] = this.employerBusinessName1d2;
        data["street1d31"] = this.street1d31;
        data["unit1d32"] = this.unit1d32;
        data["zip1d35"] = this.zip1d35;
        data["country1d36"] = this.country1d36;
        data["stateId1d34"] = this.stateId1d34;
        data["city1d33"] = this.city1d33;
        data["positionTitle1d4"] = this.positionTitle1d4;
        data["startDate1d5"] = this.startDate1d5
            ? this.startDate1d5.toISOString()
            : undefined;
        data["endDate1d6"] = this.endDate1d6
            ? this.endDate1d6.toISOString()
            : undefined;
        data["isSelfEmployed1d7"] = this.isSelfEmployed1d7;
        data["grossMonthlyIncome1d8"] = this.grossMonthlyIncome1d8;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PreviousEmployementDetail();
        result.init(json);
        return result;
    }
}
var PropertyAttributes;
(function (PropertyAttributes) {
    PropertyAttributes[PropertyAttributes["_0"] = 0] = "_0";
    PropertyAttributes[PropertyAttributes["_512"] = 512] = "_512";
    PropertyAttributes[PropertyAttributes["_1024"] = 1024] = "_1024";
    PropertyAttributes[PropertyAttributes["_4096"] = 4096] = "_4096";
    PropertyAttributes[PropertyAttributes["_8192"] = 8192] = "_8192";
    PropertyAttributes[PropertyAttributes["_16384"] = 16384] = "_16384";
    PropertyAttributes[PropertyAttributes["_32768"] = 32768] = "_32768";
    PropertyAttributes[PropertyAttributes["_62464"] = 62464] = "_62464";
})(PropertyAttributes || (PropertyAttributes = {}));
class PropertyInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.memberType = _data["memberType"];
            this.propertyType = _data["propertyType"]
                ? Type.fromJS(_data["propertyType"])
                : undefined;
            this.attributes = _data["attributes"];
            this.isSpecialName = _data["isSpecialName"];
            this.canRead = _data["canRead"];
            this.canWrite = _data["canWrite"];
            this.getMethod = _data["getMethod"]
                ? MethodInfo.fromJS(_data["getMethod"])
                : undefined;
            this.setMethod = _data["setMethod"]
                ? MethodInfo.fromJS(_data["setMethod"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new PropertyInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["memberType"] = this.memberType;
        data["propertyType"] = this.propertyType
            ? this.propertyType.toJSON()
            : undefined;
        data["attributes"] = this.attributes;
        data["isSpecialName"] = this.isSpecialName;
        data["canRead"] = this.canRead;
        data["canWrite"] = this.canWrite;
        data["getMethod"] = this.getMethod
            ? this.getMethod.toJSON()
            : undefined;
        data["setMethod"] = this.setMethod
            ? this.setMethod.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new PropertyInfo();
        result.init(json);
        return result;
    }
}
class RefinanceHomeBuyingDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.propertyLocated = _data["propertyLocated"];
            this.propertyType = _data["propertyType"];
            this.propertyUse = _data["propertyUse"];
            this.wantRefinance = _data["wantRefinance"];
            this.homePrice = _data["homePrice"];
            this.owe = _data["owe"];
            this.cashBorrow = _data["cashBorrow"];
            this.fhaLoan = _data["fhaLoan"];
            this.militarySevice = _data["militarySevice"];
            this.foreclosurePastTwoYears = _data["foreclosurePastTwoYears"];
            this.bankruptcyPastThreeYears = _data["bankruptcyPastThreeYears"];
            this.lateMortgagePayments = _data["lateMortgagePayments"];
            this.currentEmployed = _data["currentEmployed"];
            this.houseHoldIncome = _data["houseHoldIncome"];
            this.proofOfincome = _data["proofOfincome"];
            this.rateCredit = _data["rateCredit"];
            this.firstName = _data["firstName"];
            this.lastName = _data["lastName"];
            this.emailAddress = _data["emailAddress"];
            this.phoneNumber = _data["phoneNumber"];
            this.refferedBy = _data["refferedBy"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RefinanceHomeBuyingDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["propertyLocated"] = this.propertyLocated;
        data["propertyType"] = this.propertyType;
        data["propertyUse"] = this.propertyUse;
        data["wantRefinance"] = this.wantRefinance;
        data["homePrice"] = this.homePrice;
        data["owe"] = this.owe;
        data["cashBorrow"] = this.cashBorrow;
        data["fhaLoan"] = this.fhaLoan;
        data["militarySevice"] = this.militarySevice;
        data["foreclosurePastTwoYears"] = this.foreclosurePastTwoYears;
        data["bankruptcyPastThreeYears"] = this.bankruptcyPastThreeYears;
        data["lateMortgagePayments"] = this.lateMortgagePayments;
        data["currentEmployed"] = this.currentEmployed;
        data["houseHoldIncome"] = this.houseHoldIncome;
        data["proofOfincome"] = this.proofOfincome;
        data["rateCredit"] = this.rateCredit;
        data["firstName"] = this.firstName;
        data["lastName"] = this.lastName;
        data["emailAddress"] = this.emailAddress;
        data["phoneNumber"] = this.phoneNumber;
        data["refferedBy"] = this.refferedBy;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RefinanceHomeBuyingDto();
        result.init(json);
        return result;
    }
}
class RefinanceHomeBuyingDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(RefinanceHomeBuyingDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RefinanceHomeBuyingDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RefinanceHomeBuyingDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class RegisterInput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            this.surname = _data["surname"];
            this.userName = _data["userName"];
            this.emailAddress = _data["emailAddress"];
            this.password = _data["password"];
            this.captchaResponse = _data["captchaResponse"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RegisterInput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        data["surname"] = this.surname;
        data["userName"] = this.userName;
        data["emailAddress"] = this.emailAddress;
        data["password"] = this.password;
        data["captchaResponse"] = this.captchaResponse;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RegisterInput();
        result.init(json);
        return result;
    }
}
class RegisterOutput {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.canLogin = _data["canLogin"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RegisterOutput();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["canLogin"] = this.canLogin;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RegisterOutput();
        result.init(json);
        return result;
    }
}
class ResetPasswordDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.adminPassword = _data["adminPassword"];
            this.userId = _data["userId"];
            this.newPassword = _data["newPassword"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new ResetPasswordDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["adminPassword"] = this.adminPassword;
        data["userId"] = this.userId;
        data["newPassword"] = this.newPassword;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new ResetPasswordDto();
        result.init(json);
        return result;
    }
}
class RoleDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.normalizedName = _data["normalizedName"];
            this.description = _data["description"];
            if (Array.isArray(_data["grantedPermissions"])) {
                this.grantedPermissions = [];
                for (let item of _data["grantedPermissions"])
                    this.grantedPermissions.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["normalizedName"] = this.normalizedName;
        data["description"] = this.description;
        if (Array.isArray(this.grantedPermissions)) {
            data["grantedPermissions"] = [];
            for (let item of this.grantedPermissions)
                data["grantedPermissions"].push(item);
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleDto();
        result.init(json);
        return result;
    }
}
class RoleDtoListResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(RoleDto.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleDtoListResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleDtoListResultDto();
        result.init(json);
        return result;
    }
}
class RoleDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(RoleDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class RoleEditDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.description = _data["description"];
            this.isStatic = _data["isStatic"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleEditDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["description"] = this.description;
        data["isStatic"] = this.isStatic;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleEditDto();
        result.init(json);
        return result;
    }
}
class RoleListDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.displayName = _data["displayName"];
            this.isStatic = _data["isStatic"];
            this.isDefault = _data["isDefault"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleListDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["displayName"] = this.displayName;
        data["isStatic"] = this.isStatic;
        data["isDefault"] = this.isDefault;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleListDto();
        result.init(json);
        return result;
    }
}
class RoleListDtoListResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(RoleListDto.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RoleListDtoListResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RoleListDtoListResultDto();
        result.init(json);
        return result;
    }
}
class RuntimeFieldHandle {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.value = _data["value"]
                ? IntPtr.fromJS(_data["value"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RuntimeFieldHandle();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["value"] = this.value ? this.value.toJSON() : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RuntimeFieldHandle();
        result.init(json);
        return result;
    }
}
class RuntimeMethodHandle {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.value = _data["value"]
                ? IntPtr.fromJS(_data["value"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RuntimeMethodHandle();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["value"] = this.value ? this.value.toJSON() : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RuntimeMethodHandle();
        result.init(json);
        return result;
    }
}
class RuntimeTypeHandle {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.value = _data["value"]
                ? IntPtr.fromJS(_data["value"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new RuntimeTypeHandle();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["value"] = this.value ? this.value.toJSON() : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new RuntimeTypeHandle();
        result.init(json);
        return result;
    }
}
var SecurityRuleSet;
(function (SecurityRuleSet) {
    SecurityRuleSet[SecurityRuleSet["_0"] = 0] = "_0";
    SecurityRuleSet[SecurityRuleSet["_1"] = 1] = "_1";
    SecurityRuleSet[SecurityRuleSet["_2"] = 2] = "_2";
})(SecurityRuleSet || (SecurityRuleSet = {}));
class SiteSettingDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.pageIdentifier = _data["pageIdentifier"];
            this.pageName = _data["pageName"];
            this.pageSetting = _data["pageSetting"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new SiteSettingDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["pageIdentifier"] = this.pageIdentifier;
        data["pageName"] = this.pageName;
        data["pageSetting"] = this.pageSetting;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new SiteSettingDto();
        result.init(json);
        return result;
    }
}
class SiteSettingDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(SiteSettingDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new SiteSettingDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new SiteSettingDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class State {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.name = _data["name"];
            if (Array.isArray(_data["addresses"])) {
                this.addresses = [];
                for (let item of _data["addresses"])
                    this.addresses.push(Address.fromJS(item));
            }
            if (Array.isArray(_data["manualassetentries"])) {
                this.manualassetentries = [];
                for (let item of _data["manualassetentries"])
                    this.manualassetentries.push(Manualassetentry.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new State();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["name"] = this.name;
        if (Array.isArray(this.addresses)) {
            data["addresses"] = [];
            for (let item of this.addresses)
                data["addresses"].push(item.toJSON());
        }
        if (Array.isArray(this.manualassetentries)) {
            data["manualassetentries"] = [];
            for (let item of this.manualassetentries)
                data["manualassetentries"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new State();
        result.init(json);
        return result;
    }
}
class StockAndBondViewModel {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.companyName = _data["companyName"];
            this.accountNumber = _data["accountNumber"];
            this.value = _data["value"];
            this.manualAssetEntryId = _data["manualAssetEntryId"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new StockAndBondViewModel();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["companyName"] = this.companyName;
        data["accountNumber"] = this.accountNumber;
        data["value"] = this.value;
        data["manualAssetEntryId"] = this.manualAssetEntryId;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new StockAndBondViewModel();
        result.init(json);
        return result;
    }
}
class Stockandbond {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            this.creatorUserId = _data["creatorUserId"];
            this.lastModificationTime = _data["lastModificationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastModificationTime"].toString())
                : undefined;
            this.lastModifierUserId = _data["lastModifierUserId"];
            this.isDeleted = _data["isDeleted"];
            this.deleterUserId = _data["deleterUserId"];
            this.deletionTime = _data["deletionTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["deletionTime"].toString())
                : undefined;
            this.companyName = _data["companyName"];
            this.accountNumber = _data["accountNumber"];
            this.value = _data["value"];
            this.manualAssetEntryId = _data["manualAssetEntryId"];
            this.manualAssetEntry = _data["manualAssetEntry"]
                ? Manualassetentry.fromJS(_data["manualAssetEntry"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Stockandbond();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        data["creatorUserId"] = this.creatorUserId;
        data["lastModificationTime"] = this.lastModificationTime
            ? this.lastModificationTime.toISOString()
            : undefined;
        data["lastModifierUserId"] = this.lastModifierUserId;
        data["isDeleted"] = this.isDeleted;
        data["deleterUserId"] = this.deleterUserId;
        data["deletionTime"] = this.deletionTime
            ? this.deletionTime.toISOString()
            : undefined;
        data["companyName"] = this.companyName;
        data["accountNumber"] = this.accountNumber;
        data["value"] = this.value;
        data["manualAssetEntryId"] = this.manualAssetEntryId;
        data["manualAssetEntry"] = this.manualAssetEntry
            ? this.manualAssetEntry.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Stockandbond();
        result.init(json);
        return result;
    }
}
class StructLayoutAttribute {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.typeId = _data["typeId"];
            this.value = _data["value"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new StructLayoutAttribute();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["typeId"] = this.typeId;
        data["value"] = this.value;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new StructLayoutAttribute();
        result.init(json);
        return result;
    }
}
var TenantAvailabilityState;
(function (TenantAvailabilityState) {
    TenantAvailabilityState[TenantAvailabilityState["_1"] = 1] = "_1";
    TenantAvailabilityState[TenantAvailabilityState["_2"] = 2] = "_2";
    TenantAvailabilityState[TenantAvailabilityState["_3"] = 3] = "_3";
})(TenantAvailabilityState || (TenantAvailabilityState = {}));
class TenantDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.tenancyName = _data["tenancyName"];
            this.name = _data["name"];
            this.isActive = _data["isActive"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new TenantDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["tenancyName"] = this.tenancyName;
        data["name"] = this.name;
        data["isActive"] = this.isActive;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new TenantDto();
        result.init(json);
        return result;
    }
}
class TenantDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(TenantDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new TenantDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new TenantDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class TenantLoginInfoDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.tenancyName = _data["tenancyName"];
            this.name = _data["name"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new TenantLoginInfoDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["tenancyName"] = this.tenancyName;
        data["name"] = this.name;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new TenantLoginInfoDto();
        result.init(json);
        return result;
    }
}
class TenantNotification {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.tenantId = _data["tenantId"];
            this.notificationName = _data["notificationName"];
            this.data = _data["data"]
                ? NotificationData.fromJS(_data["data"])
                : undefined;
            this.entityType = _data["entityType"]
                ? Type.fromJS(_data["entityType"])
                : undefined;
            this.entityTypeName = _data["entityTypeName"];
            this.entityId = _data["entityId"];
            this.severity = _data["severity"];
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new TenantNotification();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["tenantId"] = this.tenantId;
        data["notificationName"] = this.notificationName;
        data["data"] = this.data ? this.data.toJSON() : undefined;
        data["entityType"] = this.entityType
            ? this.entityType.toJSON()
            : undefined;
        data["entityTypeName"] = this.entityTypeName;
        data["entityId"] = this.entityId;
        data["severity"] = this.severity;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new TenantNotification();
        result.init(json);
        return result;
    }
}
class Type {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.isInterface = _data["isInterface"];
            this.memberType = _data["memberType"];
            this.namespace = _data["namespace"];
            this.assemblyQualifiedName = _data["assemblyQualifiedName"];
            this.fullName = _data["fullName"];
            this.assembly = _data["assembly"]
                ? Assembly.fromJS(_data["assembly"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            this.isNested = _data["isNested"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.declaringMethod = _data["declaringMethod"]
                ? MethodBase.fromJS(_data["declaringMethod"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.underlyingSystemType = _data["underlyingSystemType"]
                ? Type.fromJS(_data["underlyingSystemType"])
                : undefined;
            this.isTypeDefinition = _data["isTypeDefinition"];
            this.isArray = _data["isArray"];
            this.isByRef = _data["isByRef"];
            this.isPointer = _data["isPointer"];
            this.isConstructedGenericType = _data["isConstructedGenericType"];
            this.isGenericParameter = _data["isGenericParameter"];
            this.isGenericTypeParameter = _data["isGenericTypeParameter"];
            this.isGenericMethodParameter = _data["isGenericMethodParameter"];
            this.isGenericType = _data["isGenericType"];
            this.isGenericTypeDefinition = _data["isGenericTypeDefinition"];
            this.isSZArray = _data["isSZArray"];
            this.isVariableBoundArray = _data["isVariableBoundArray"];
            this.isByRefLike = _data["isByRefLike"];
            this.hasElementType = _data["hasElementType"];
            if (Array.isArray(_data["genericTypeArguments"])) {
                this.genericTypeArguments = [];
                for (let item of _data["genericTypeArguments"])
                    this.genericTypeArguments.push(Type.fromJS(item));
            }
            this.genericParameterPosition = _data["genericParameterPosition"];
            this.genericParameterAttributes = _data["genericParameterAttributes"];
            this.attributes = _data["attributes"];
            this.isAbstract = _data["isAbstract"];
            this.isImport = _data["isImport"];
            this.isSealed = _data["isSealed"];
            this.isSpecialName = _data["isSpecialName"];
            this.isClass = _data["isClass"];
            this.isNestedAssembly = _data["isNestedAssembly"];
            this.isNestedFamANDAssem = _data["isNestedFamANDAssem"];
            this.isNestedFamily = _data["isNestedFamily"];
            this.isNestedFamORAssem = _data["isNestedFamORAssem"];
            this.isNestedPrivate = _data["isNestedPrivate"];
            this.isNestedPublic = _data["isNestedPublic"];
            this.isNotPublic = _data["isNotPublic"];
            this.isPublic = _data["isPublic"];
            this.isAutoLayout = _data["isAutoLayout"];
            this.isExplicitLayout = _data["isExplicitLayout"];
            this.isLayoutSequential = _data["isLayoutSequential"];
            this.isAnsiClass = _data["isAnsiClass"];
            this.isAutoClass = _data["isAutoClass"];
            this.isUnicodeClass = _data["isUnicodeClass"];
            this.isCOMObject = _data["isCOMObject"];
            this.isContextful = _data["isContextful"];
            this.isEnum = _data["isEnum"];
            this.isMarshalByRef = _data["isMarshalByRef"];
            this.isPrimitive = _data["isPrimitive"];
            this.isValueType = _data["isValueType"];
            this.isSignatureType = _data["isSignatureType"];
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
            this.structLayoutAttribute = _data["structLayoutAttribute"]
                ? StructLayoutAttribute.fromJS(_data["structLayoutAttribute"])
                : undefined;
            this.typeInitializer = _data["typeInitializer"]
                ? ConstructorInfo.fromJS(_data["typeInitializer"])
                : undefined;
            this.typeHandle = _data["typeHandle"]
                ? RuntimeTypeHandle.fromJS(_data["typeHandle"])
                : undefined;
            this.guid = _data["guid"];
            this.baseType = _data["baseType"]
                ? Type.fromJS(_data["baseType"])
                : undefined;
            this.isSerializable = _data["isSerializable"];
            this.containsGenericParameters =
                _data["containsGenericParameters"];
            this.isVisible = _data["isVisible"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new Type();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["isInterface"] = this.isInterface;
        data["memberType"] = this.memberType;
        data["namespace"] = this.namespace;
        data["assemblyQualifiedName"] = this.assemblyQualifiedName;
        data["fullName"] = this.fullName;
        data["assembly"] = this.assembly ? this.assembly.toJSON() : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        data["isNested"] = this.isNested;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["declaringMethod"] = this.declaringMethod
            ? this.declaringMethod.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["underlyingSystemType"] = this.underlyingSystemType
            ? this.underlyingSystemType.toJSON()
            : undefined;
        data["isTypeDefinition"] = this.isTypeDefinition;
        data["isArray"] = this.isArray;
        data["isByRef"] = this.isByRef;
        data["isPointer"] = this.isPointer;
        data["isConstructedGenericType"] = this.isConstructedGenericType;
        data["isGenericParameter"] = this.isGenericParameter;
        data["isGenericTypeParameter"] = this.isGenericTypeParameter;
        data["isGenericMethodParameter"] = this.isGenericMethodParameter;
        data["isGenericType"] = this.isGenericType;
        data["isGenericTypeDefinition"] = this.isGenericTypeDefinition;
        data["isSZArray"] = this.isSZArray;
        data["isVariableBoundArray"] = this.isVariableBoundArray;
        data["isByRefLike"] = this.isByRefLike;
        data["hasElementType"] = this.hasElementType;
        if (Array.isArray(this.genericTypeArguments)) {
            data["genericTypeArguments"] = [];
            for (let item of this.genericTypeArguments)
                data["genericTypeArguments"].push(item.toJSON());
        }
        data["genericParameterPosition"] = this.genericParameterPosition;
        data["genericParameterAttributes"] = this.genericParameterAttributes;
        data["attributes"] = this.attributes;
        data["isAbstract"] = this.isAbstract;
        data["isImport"] = this.isImport;
        data["isSealed"] = this.isSealed;
        data["isSpecialName"] = this.isSpecialName;
        data["isClass"] = this.isClass;
        data["isNestedAssembly"] = this.isNestedAssembly;
        data["isNestedFamANDAssem"] = this.isNestedFamANDAssem;
        data["isNestedFamily"] = this.isNestedFamily;
        data["isNestedFamORAssem"] = this.isNestedFamORAssem;
        data["isNestedPrivate"] = this.isNestedPrivate;
        data["isNestedPublic"] = this.isNestedPublic;
        data["isNotPublic"] = this.isNotPublic;
        data["isPublic"] = this.isPublic;
        data["isAutoLayout"] = this.isAutoLayout;
        data["isExplicitLayout"] = this.isExplicitLayout;
        data["isLayoutSequential"] = this.isLayoutSequential;
        data["isAnsiClass"] = this.isAnsiClass;
        data["isAutoClass"] = this.isAutoClass;
        data["isUnicodeClass"] = this.isUnicodeClass;
        data["isCOMObject"] = this.isCOMObject;
        data["isContextful"] = this.isContextful;
        data["isEnum"] = this.isEnum;
        data["isMarshalByRef"] = this.isMarshalByRef;
        data["isPrimitive"] = this.isPrimitive;
        data["isValueType"] = this.isValueType;
        data["isSignatureType"] = this.isSignatureType;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        data["structLayoutAttribute"] = this.structLayoutAttribute
            ? this.structLayoutAttribute.toJSON()
            : undefined;
        data["typeInitializer"] = this.typeInitializer
            ? this.typeInitializer.toJSON()
            : undefined;
        data["typeHandle"] = this.typeHandle
            ? this.typeHandle.toJSON()
            : undefined;
        data["guid"] = this.guid;
        data["baseType"] = this.baseType ? this.baseType.toJSON() : undefined;
        data["isSerializable"] = this.isSerializable;
        data["containsGenericParameters"] = this.containsGenericParameters;
        data["isVisible"] = this.isVisible;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new Type();
        result.init(json);
        return result;
    }
}
var TypeAttributes;
(function (TypeAttributes) {
    TypeAttributes[TypeAttributes["_0"] = 0] = "_0";
    TypeAttributes[TypeAttributes["_1"] = 1] = "_1";
    TypeAttributes[TypeAttributes["_2"] = 2] = "_2";
    TypeAttributes[TypeAttributes["_3"] = 3] = "_3";
    TypeAttributes[TypeAttributes["_4"] = 4] = "_4";
    TypeAttributes[TypeAttributes["_5"] = 5] = "_5";
    TypeAttributes[TypeAttributes["_6"] = 6] = "_6";
    TypeAttributes[TypeAttributes["_7"] = 7] = "_7";
    TypeAttributes[TypeAttributes["_8"] = 8] = "_8";
    TypeAttributes[TypeAttributes["_16"] = 16] = "_16";
    TypeAttributes[TypeAttributes["_24"] = 24] = "_24";
    TypeAttributes[TypeAttributes["_32"] = 32] = "_32";
    TypeAttributes[TypeAttributes["_128"] = 128] = "_128";
    TypeAttributes[TypeAttributes["_256"] = 256] = "_256";
    TypeAttributes[TypeAttributes["_1024"] = 1024] = "_1024";
    TypeAttributes[TypeAttributes["_2048"] = 2048] = "_2048";
    TypeAttributes[TypeAttributes["_4096"] = 4096] = "_4096";
    TypeAttributes[TypeAttributes["_8192"] = 8192] = "_8192";
    TypeAttributes[TypeAttributes["_16384"] = 16384] = "_16384";
    TypeAttributes[TypeAttributes["_65536"] = 65536] = "_65536";
    TypeAttributes[TypeAttributes["_131072"] = 131072] = "_131072";
    TypeAttributes[TypeAttributes["_196608"] = 196608] = "_196608";
    TypeAttributes[TypeAttributes["_262144"] = 262144] = "_262144";
    TypeAttributes[TypeAttributes["_264192"] = 264192] = "_264192";
    TypeAttributes[TypeAttributes["_1048576"] = 1048576] = "_1048576";
    TypeAttributes[TypeAttributes["_12582912"] = 12582912] = "_12582912";
})(TypeAttributes || (TypeAttributes = {}));
class TypeInfo {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.name = _data["name"];
            if (Array.isArray(_data["customAttributes"])) {
                this.customAttributes = [];
                for (let item of _data["customAttributes"])
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
            }
            this.isCollectible = _data["isCollectible"];
            this.metadataToken = _data["metadataToken"];
            this.isInterface = _data["isInterface"];
            this.memberType = _data["memberType"];
            this.namespace = _data["namespace"];
            this.assemblyQualifiedName = _data["assemblyQualifiedName"];
            this.fullName = _data["fullName"];
            this.assembly = _data["assembly"]
                ? Assembly.fromJS(_data["assembly"])
                : undefined;
            this.module = _data["module"]
                ? Module.fromJS(_data["module"])
                : undefined;
            this.isNested = _data["isNested"];
            this.declaringType = _data["declaringType"]
                ? Type.fromJS(_data["declaringType"])
                : undefined;
            this.declaringMethod = _data["declaringMethod"]
                ? MethodBase.fromJS(_data["declaringMethod"])
                : undefined;
            this.reflectedType = _data["reflectedType"]
                ? Type.fromJS(_data["reflectedType"])
                : undefined;
            this.underlyingSystemType = _data["underlyingSystemType"]
                ? Type.fromJS(_data["underlyingSystemType"])
                : undefined;
            this.isTypeDefinition = _data["isTypeDefinition"];
            this.isArray = _data["isArray"];
            this.isByRef = _data["isByRef"];
            this.isPointer = _data["isPointer"];
            this.isConstructedGenericType = _data["isConstructedGenericType"];
            this.isGenericParameter = _data["isGenericParameter"];
            this.isGenericTypeParameter = _data["isGenericTypeParameter"];
            this.isGenericMethodParameter = _data["isGenericMethodParameter"];
            this.isGenericType = _data["isGenericType"];
            this.isGenericTypeDefinition = _data["isGenericTypeDefinition"];
            this.isSZArray = _data["isSZArray"];
            this.isVariableBoundArray = _data["isVariableBoundArray"];
            this.isByRefLike = _data["isByRefLike"];
            this.hasElementType = _data["hasElementType"];
            if (Array.isArray(_data["genericTypeArguments"])) {
                this.genericTypeArguments = [];
                for (let item of _data["genericTypeArguments"])
                    this.genericTypeArguments.push(Type.fromJS(item));
            }
            this.genericParameterPosition = _data["genericParameterPosition"];
            this.genericParameterAttributes = _data["genericParameterAttributes"];
            this.attributes = _data["attributes"];
            this.isAbstract = _data["isAbstract"];
            this.isImport = _data["isImport"];
            this.isSealed = _data["isSealed"];
            this.isSpecialName = _data["isSpecialName"];
            this.isClass = _data["isClass"];
            this.isNestedAssembly = _data["isNestedAssembly"];
            this.isNestedFamANDAssem = _data["isNestedFamANDAssem"];
            this.isNestedFamily = _data["isNestedFamily"];
            this.isNestedFamORAssem = _data["isNestedFamORAssem"];
            this.isNestedPrivate = _data["isNestedPrivate"];
            this.isNestedPublic = _data["isNestedPublic"];
            this.isNotPublic = _data["isNotPublic"];
            this.isPublic = _data["isPublic"];
            this.isAutoLayout = _data["isAutoLayout"];
            this.isExplicitLayout = _data["isExplicitLayout"];
            this.isLayoutSequential = _data["isLayoutSequential"];
            this.isAnsiClass = _data["isAnsiClass"];
            this.isAutoClass = _data["isAutoClass"];
            this.isUnicodeClass = _data["isUnicodeClass"];
            this.isCOMObject = _data["isCOMObject"];
            this.isContextful = _data["isContextful"];
            this.isEnum = _data["isEnum"];
            this.isMarshalByRef = _data["isMarshalByRef"];
            this.isPrimitive = _data["isPrimitive"];
            this.isValueType = _data["isValueType"];
            this.isSignatureType = _data["isSignatureType"];
            this.isSecurityCritical = _data["isSecurityCritical"];
            this.isSecuritySafeCritical = _data["isSecuritySafeCritical"];
            this.isSecurityTransparent = _data["isSecurityTransparent"];
            this.structLayoutAttribute = _data["structLayoutAttribute"]
                ? StructLayoutAttribute.fromJS(_data["structLayoutAttribute"])
                : undefined;
            this.typeInitializer = _data["typeInitializer"]
                ? ConstructorInfo.fromJS(_data["typeInitializer"])
                : undefined;
            this.typeHandle = _data["typeHandle"]
                ? RuntimeTypeHandle.fromJS(_data["typeHandle"])
                : undefined;
            this.guid = _data["guid"];
            this.baseType = _data["baseType"]
                ? Type.fromJS(_data["baseType"])
                : undefined;
            this.isSerializable = _data["isSerializable"];
            this.containsGenericParameters =
                _data["containsGenericParameters"];
            this.isVisible = _data["isVisible"];
            if (Array.isArray(_data["genericTypeParameters"])) {
                this.genericTypeParameters = [];
                for (let item of _data["genericTypeParameters"])
                    this.genericTypeParameters.push(Type.fromJS(item));
            }
            if (Array.isArray(_data["declaredConstructors"])) {
                this.declaredConstructors = [];
                for (let item of _data["declaredConstructors"])
                    this.declaredConstructors.push(ConstructorInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredEvents"])) {
                this.declaredEvents = [];
                for (let item of _data["declaredEvents"])
                    this.declaredEvents.push(EventInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredFields"])) {
                this.declaredFields = [];
                for (let item of _data["declaredFields"])
                    this.declaredFields.push(FieldInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredMembers"])) {
                this.declaredMembers = [];
                for (let item of _data["declaredMembers"])
                    this.declaredMembers.push(MemberInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredMethods"])) {
                this.declaredMethods = [];
                for (let item of _data["declaredMethods"])
                    this.declaredMethods.push(MethodInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredNestedTypes"])) {
                this.declaredNestedTypes = [];
                for (let item of _data["declaredNestedTypes"])
                    this.declaredNestedTypes.push(TypeInfo.fromJS(item));
            }
            if (Array.isArray(_data["declaredProperties"])) {
                this.declaredProperties = [];
                for (let item of _data["declaredProperties"])
                    this.declaredProperties.push(PropertyInfo.fromJS(item));
            }
            if (Array.isArray(_data["implementedInterfaces"])) {
                this.implementedInterfaces = [];
                for (let item of _data["implementedInterfaces"])
                    this.implementedInterfaces.push(Type.fromJS(item));
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new TypeInfo();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["name"] = this.name;
        if (Array.isArray(this.customAttributes)) {
            data["customAttributes"] = [];
            for (let item of this.customAttributes)
                data["customAttributes"].push(item.toJSON());
        }
        data["isCollectible"] = this.isCollectible;
        data["metadataToken"] = this.metadataToken;
        data["isInterface"] = this.isInterface;
        data["memberType"] = this.memberType;
        data["namespace"] = this.namespace;
        data["assemblyQualifiedName"] = this.assemblyQualifiedName;
        data["fullName"] = this.fullName;
        data["assembly"] = this.assembly ? this.assembly.toJSON() : undefined;
        data["module"] = this.module ? this.module.toJSON() : undefined;
        data["isNested"] = this.isNested;
        data["declaringType"] = this.declaringType
            ? this.declaringType.toJSON()
            : undefined;
        data["declaringMethod"] = this.declaringMethod
            ? this.declaringMethod.toJSON()
            : undefined;
        data["reflectedType"] = this.reflectedType
            ? this.reflectedType.toJSON()
            : undefined;
        data["underlyingSystemType"] = this.underlyingSystemType
            ? this.underlyingSystemType.toJSON()
            : undefined;
        data["isTypeDefinition"] = this.isTypeDefinition;
        data["isArray"] = this.isArray;
        data["isByRef"] = this.isByRef;
        data["isPointer"] = this.isPointer;
        data["isConstructedGenericType"] = this.isConstructedGenericType;
        data["isGenericParameter"] = this.isGenericParameter;
        data["isGenericTypeParameter"] = this.isGenericTypeParameter;
        data["isGenericMethodParameter"] = this.isGenericMethodParameter;
        data["isGenericType"] = this.isGenericType;
        data["isGenericTypeDefinition"] = this.isGenericTypeDefinition;
        data["isSZArray"] = this.isSZArray;
        data["isVariableBoundArray"] = this.isVariableBoundArray;
        data["isByRefLike"] = this.isByRefLike;
        data["hasElementType"] = this.hasElementType;
        if (Array.isArray(this.genericTypeArguments)) {
            data["genericTypeArguments"] = [];
            for (let item of this.genericTypeArguments)
                data["genericTypeArguments"].push(item.toJSON());
        }
        data["genericParameterPosition"] = this.genericParameterPosition;
        data["genericParameterAttributes"] = this.genericParameterAttributes;
        data["attributes"] = this.attributes;
        data["isAbstract"] = this.isAbstract;
        data["isImport"] = this.isImport;
        data["isSealed"] = this.isSealed;
        data["isSpecialName"] = this.isSpecialName;
        data["isClass"] = this.isClass;
        data["isNestedAssembly"] = this.isNestedAssembly;
        data["isNestedFamANDAssem"] = this.isNestedFamANDAssem;
        data["isNestedFamily"] = this.isNestedFamily;
        data["isNestedFamORAssem"] = this.isNestedFamORAssem;
        data["isNestedPrivate"] = this.isNestedPrivate;
        data["isNestedPublic"] = this.isNestedPublic;
        data["isNotPublic"] = this.isNotPublic;
        data["isPublic"] = this.isPublic;
        data["isAutoLayout"] = this.isAutoLayout;
        data["isExplicitLayout"] = this.isExplicitLayout;
        data["isLayoutSequential"] = this.isLayoutSequential;
        data["isAnsiClass"] = this.isAnsiClass;
        data["isAutoClass"] = this.isAutoClass;
        data["isUnicodeClass"] = this.isUnicodeClass;
        data["isCOMObject"] = this.isCOMObject;
        data["isContextful"] = this.isContextful;
        data["isEnum"] = this.isEnum;
        data["isMarshalByRef"] = this.isMarshalByRef;
        data["isPrimitive"] = this.isPrimitive;
        data["isValueType"] = this.isValueType;
        data["isSignatureType"] = this.isSignatureType;
        data["isSecurityCritical"] = this.isSecurityCritical;
        data["isSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["isSecurityTransparent"] = this.isSecurityTransparent;
        data["structLayoutAttribute"] = this.structLayoutAttribute
            ? this.structLayoutAttribute.toJSON()
            : undefined;
        data["typeInitializer"] = this.typeInitializer
            ? this.typeInitializer.toJSON()
            : undefined;
        data["typeHandle"] = this.typeHandle
            ? this.typeHandle.toJSON()
            : undefined;
        data["guid"] = this.guid;
        data["baseType"] = this.baseType ? this.baseType.toJSON() : undefined;
        data["isSerializable"] = this.isSerializable;
        data["containsGenericParameters"] = this.containsGenericParameters;
        data["isVisible"] = this.isVisible;
        if (Array.isArray(this.genericTypeParameters)) {
            data["genericTypeParameters"] = [];
            for (let item of this.genericTypeParameters)
                data["genericTypeParameters"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredConstructors)) {
            data["declaredConstructors"] = [];
            for (let item of this.declaredConstructors)
                data["declaredConstructors"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredEvents)) {
            data["declaredEvents"] = [];
            for (let item of this.declaredEvents)
                data["declaredEvents"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredFields)) {
            data["declaredFields"] = [];
            for (let item of this.declaredFields)
                data["declaredFields"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredMembers)) {
            data["declaredMembers"] = [];
            for (let item of this.declaredMembers)
                data["declaredMembers"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredMethods)) {
            data["declaredMethods"] = [];
            for (let item of this.declaredMethods)
                data["declaredMethods"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredNestedTypes)) {
            data["declaredNestedTypes"] = [];
            for (let item of this.declaredNestedTypes)
                data["declaredNestedTypes"].push(item.toJSON());
        }
        if (Array.isArray(this.declaredProperties)) {
            data["declaredProperties"] = [];
            for (let item of this.declaredProperties)
                data["declaredProperties"].push(item.toJSON());
        }
        if (Array.isArray(this.implementedInterfaces)) {
            data["implementedInterfaces"] = [];
            for (let item of this.implementedInterfaces)
                data["implementedInterfaces"].push(item.toJSON());
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new TypeInfo();
        result.init(json);
        return result;
    }
}
class UpdateAccountTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialAccountType1 = _data["financialAccountType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAccountTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialAccountType1"] = this.financialAccountType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAccountTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateAdminDisclosure {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.title = _data["title"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminDisclosure();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["title"] = this.title;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminDisclosure();
        result.init(json);
        return result;
    }
}
class UpdateAdminLoanApplicationDocument {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanId = _data["loanId"];
            this.disclosureId = _data["disclosureId"];
            this.userId = _data["userId"];
            this.updatedOn = _data["updatedOn"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["updatedOn"].toString())
                : undefined;
            this.documentPath = _data["documentPath"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminLoanApplicationDocument();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanId"] = this.loanId;
        data["disclosureId"] = this.disclosureId;
        data["userId"] = this.userId;
        data["updatedOn"] = this.updatedOn
            ? this.updatedOn.toISOString()
            : undefined;
        data["documentPath"] = this.documentPath;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminLoanApplicationDocument();
        result.init(json);
        return result;
    }
}
class UpdateAdminLoanDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanApplicationId = _data["loanApplicationId"];
            this.loanNo = _data["loanNo"];
            this.mortageConsultant = _data["mortageConsultant"];
            this.nmlsId = _data["nmlsId"];
            this.borrowerName = _data["borrowerName"];
            this.propertyAddress = _data["propertyAddress"];
            this.loanProgramId = _data["loanProgramId"];
            this.loanAmount = _data["loanAmount"];
            this.loanPurpose = _data["loanPurpose"];
            this.interestRate = _data["interestRate"];
            this.applicationDate = _data["applicationDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["applicationDate"].toString())
                : undefined;
            this.rateLockDate = _data["rateLockDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["rateLockDate"].toString())
                : undefined;
            this.rateLockExpirationDate = _data["rateLockExpirationDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["rateLockExpirationDate"].toString())
                : undefined;
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminLoanDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanApplicationId"] = this.loanApplicationId;
        data["loanNo"] = this.loanNo;
        data["mortageConsultant"] = this.mortageConsultant;
        data["nmlsId"] = this.nmlsId;
        data["borrowerName"] = this.borrowerName;
        data["propertyAddress"] = this.propertyAddress;
        data["loanProgramId"] = this.loanProgramId;
        data["loanAmount"] = this.loanAmount;
        data["loanPurpose"] = this.loanPurpose;
        data["interestRate"] = this.interestRate;
        data["applicationDate"] = this.applicationDate
            ? this.applicationDate.toISOString()
            : undefined;
        data["rateLockDate"] = this.rateLockDate
            ? this.rateLockDate.toISOString()
            : undefined;
        data["rateLockExpirationDate"] = this.rateLockExpirationDate
            ? this.rateLockExpirationDate.toISOString()
            : undefined;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminLoanDetail();
        result.init(json);
        return result;
    }
}
class UpdateAdminLoanProgram {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanProgram = _data["loanProgram"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminLoanProgram();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanProgram"] = this.loanProgram;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminLoanProgram();
        result.init(json);
        return result;
    }
}
class UpdateAdminLoanStatus {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.status = _data["status"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminLoanStatus();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["status"] = this.status;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminLoanStatus();
        result.init(json);
        return result;
    }
}
class UpdateAdminLoanSummaryStatus {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanId = _data["loanId"];
            this.statusId = _data["statusId"];
            this.updatedOn = _data["updatedOn"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["updatedOn"].toString())
                : undefined;
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminLoanSummaryStatus();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanId"] = this.loanId;
        data["statusId"] = this.statusId;
        data["updatedOn"] = this.updatedOn
            ? this.updatedOn.toISOString()
            : undefined;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminLoanSummaryStatus();
        result.init(json);
        return result;
    }
}
class UpdateAdminUserEnabledDevice {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.deviceId = _data["deviceId"];
            this.bioMetricData = _data["bioMetricData"];
            this.isEnabled = _data["isEnabled"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateAdminUserEnabledDevice();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["deviceId"] = this.deviceId;
        data["bioMetricData"] = this.bioMetricData;
        data["isEnabled"] = this.isEnabled;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateAdminUserEnabledDevice();
        result.init(json);
        return result;
    }
}
class UpdateCitizenshipTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.citizenshipType1 = _data["citizenshipType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateCitizenshipTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["citizenshipType1"] = this.citizenshipType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateCitizenshipTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateCityRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.stateId = _data["stateId"];
            this.cityName = _data["cityName"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateCityRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["stateId"] = this.stateId;
        data["cityName"] = this.cityName;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateCityRequest();
        result.init(json);
        return result;
    }
}
class UpdateCountryRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.countryName = _data["countryName"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateCountryRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["countryName"] = this.countryName;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateCountryRequest();
        result.init(json);
        return result;
    }
}
class UpdateCreditTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.creditType1 = _data["creditType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateCreditTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["creditType1"] = this.creditType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateCreditTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateDeclarationCategoryRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.declarationCategory1 = _data["declarationCategory1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateDeclarationCategoryRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["declarationCategory1"] = this.declarationCategory1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateDeclarationCategoryRequest();
        result.init(json);
        return result;
    }
}
class UpdateDeclarationQuestionRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.declarationCategoryId = _data["declarationCategoryId"];
            this.parentQuestionId = _data["parentQuestionId"];
            this.question = _data["question"];
            this.isActive = _data["isActive"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateDeclarationQuestionRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["declarationCategoryId"] = this.declarationCategoryId;
        data["parentQuestionId"] = this.parentQuestionId;
        data["question"] = this.question;
        data["isActive"] = this.isActive;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateDeclarationQuestionRequest();
        result.init(json);
        return result;
    }
}
class UpdateDemographicInfoSourceRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.value = _data["value"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateDemographicInfoSourceRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["value"] = this.value;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateDemographicInfoSourceRequest();
        result.init(json);
        return result;
    }
}
class UpdateDemographicInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.ethnicity81 = _data["ethnicity81"];
            this.gender82 = _data["gender82"];
            this.race83 = _data["race83"];
            this.isEthnicityByObservation84 = _data["isEthnicityByObservation84"];
            this.isGenderByObservation85 = _data["isGenderByObservation85"];
            this.isRaceByObservation86 = _data["isRaceByObservation86"];
            this.demographicInfoSourceId87 = _data["demographicInfoSourceId87"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateDemographicInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["ethnicity81"] = this.ethnicity81;
        data["gender82"] = this.gender82;
        data["race83"] = this.race83;
        data["isEthnicityByObservation84"] = this.isEthnicityByObservation84;
        data["isGenderByObservation85"] = this.isGenderByObservation85;
        data["isRaceByObservation86"] = this.isRaceByObservation86;
        data["demographicInfoSourceId87"] = this.demographicInfoSourceId87;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateDemographicInformationRequest();
        result.init(json);
        return result;
    }
}
class UpdateHousingTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.housingType1 = _data["housingType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateHousingTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["housingType1"] = this.housingType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateHousingTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateIncomeSourceRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeSource1 = _data["incomeSource1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateIncomeSourceRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeSource1"] = this.incomeSource1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateIncomeSourceRequest();
        result.init(json);
        return result;
    }
}
class UpdateIncomeTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeType1 = _data["incomeType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateIncomeTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeType1"] = this.incomeType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateIncomeTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateLaibilitiesTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialLaibilitiesType1 = _data["financialLaibilitiesType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLaibilitiesTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialLaibilitiesType1"] = this.financialLaibilitiesType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLaibilitiesTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateLeadApplicationQuestions {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.question = _data["question"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadApplicationQuestions();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["question"] = this.question;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadApplicationQuestions();
        result.init(json);
        return result;
    }
}
class UpdateLeadApplicationType {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationType = _data["applicationType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadApplicationType();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationType"] = this.applicationType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadApplicationType();
        result.init(json);
        return result;
    }
}
class UpdateLeadAssetDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.assetTypeId = _data["assetTypeId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.financialInstitution = _data["financialInstitution"];
            this.balance = _data["balance"];
            this.ownerTypeId = _data["ownerTypeId"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadAssetDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["assetTypeId"] = this.assetTypeId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["financialInstitution"] = this.financialInstitution;
        data["balance"] = this.balance;
        data["ownerTypeId"] = this.ownerTypeId;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadAssetDetails();
        result.init(json);
        return result;
    }
}
class UpdateLeadAssetTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.assetsType = _data["assetsType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadAssetTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["assetsType"] = this.assetsType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadAssetTypes();
        result.init(json);
        return result;
    }
}
class UpdateLeadEmploymentDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.employeeTypeId = _data["employeeTypeId"];
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.employerName = _data["employerName"];
            this.employementAddress = _data["employementAddress"];
            this.employementSuite = _data["employementSuite"];
            this.employementCity = _data["employementCity"];
            this.employementTaxeId = _data["employementTaxeId"];
            this.employementZip = _data["employementZip"];
            this.employerPhoneNumber = _data["employerPhoneNumber"];
            this.isCurrentJob = _data["isCurrentJob"];
            this.estimatedStartDate = _data["estimatedStartDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["estimatedStartDate"].toString())
                : undefined;
            this.jobTitle = _data["jobTitle"];
            this.estimatedAnnualBaseSalary = _data["estimatedAnnualBaseSalary"];
            this.estimatedAnnualBonus = _data["estimatedAnnualBonus"];
            this.estimatedAnnualCommission = _data["estimatedAnnualCommission"];
            this.estimatedAnnualOvertime = _data["estimatedAnnualOvertime"];
            this.isCoBorrower = _data["isCoBorrower"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadEmploymentDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["employeeTypeId"] = this.employeeTypeId;
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["employerName"] = this.employerName;
        data["employementAddress"] = this.employementAddress;
        data["employementSuite"] = this.employementSuite;
        data["employementCity"] = this.employementCity;
        data["employementTaxeId"] = this.employementTaxeId;
        data["employementZip"] = this.employementZip;
        data["employerPhoneNumber"] = this.employerPhoneNumber;
        data["isCurrentJob"] = this.isCurrentJob;
        data["estimatedStartDate"] = this.estimatedStartDate
            ? this.estimatedStartDate.toISOString()
            : undefined;
        data["jobTitle"] = this.jobTitle;
        data["estimatedAnnualBaseSalary"] = this.estimatedAnnualBaseSalary;
        data["estimatedAnnualBonus"] = this.estimatedAnnualBonus;
        data["estimatedAnnualCommission"] = this.estimatedAnnualCommission;
        data["estimatedAnnualOvertime"] = this.estimatedAnnualOvertime;
        data["isCoBorrower"] = this.isCoBorrower;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadEmploymentDetails();
        result.init(json);
        return result;
    }
}
class UpdateLeadEmploymentTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.employementType = _data["employementType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadEmploymentTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["employementType"] = this.employementType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadEmploymentTypes();
        result.init(json);
        return result;
    }
}
class UpdateLeadIncomeTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.incomeType = _data["incomeType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadIncomeTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["incomeType"] = this.incomeType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadIncomeTypes();
        result.init(json);
        return result;
    }
}
class UpdateLeadOwnerTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.ownerType = _data["ownerType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadOwnerTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["ownerType"] = this.ownerType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadOwnerTypes();
        result.init(json);
        return result;
    }
}
class UpdateLeadPurchasingDetail {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.stage = _data["stage"];
            this.isWorkingWithEzalready = _data["isWorkingWithEzalready"];
            this.workingOfficerName = _data["workingOfficerName"];
            this.newHomeAddress = _data["newHomeAddress"];
            this.newHomeUnit = _data["newHomeUnit"];
            this.newHomeCity = _data["newHomeCity"];
            this.newHomeStateId = _data["newHomeStateId"];
            this.newHomeZipCode = _data["newHomeZipCode"];
            this.contractClosingDate = _data["contractClosingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["contractClosingDate"].toString())
                : undefined;
            this.contractType = _data["contractType"];
            this.estimatedHomePrice = _data["estimatedHomePrice"];
            this.downPaymentAmount = _data["downPaymentAmount"];
            this.downPaymentPercentage = _data["downPaymentPercentage"];
            this.estimatedAnnualTax = _data["estimatedAnnualTax"];
            this.estimatedAnnualHomeInsurance = _data["estimatedAnnualHomeInsurance"];
            this.creditScore = _data["creditScore"];
            this.propertyLegalFirstName = _data["propertyLegalFirstName"];
            this.propertyMiddleInitial = _data["propertyMiddleInitial"];
            this.propertyLegalLastName = _data["propertyLegalLastName"];
            this.propertyPhoneNumber = _data["propertyPhoneNumber"];
            this.propertyEmailAddress = _data["propertyEmailAddress"];
            this.typeOfHome = _data["typeOfHome"];
            this.monthlyHoadues = _data["monthlyHoadues"];
            this.typeOfNewHome = _data["typeOfNewHome"];
            this.isMilitaryMember = _data["isMilitaryMember"];
            this.currentMilitaryStatus = _data["currentMilitaryStatus"];
            this.militaryBranch = _data["militaryBranch"];
            this.isEtsdateinYear = _data["isEtsdateinYear"];
            this.etsdate = _data["etsdate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["etsdate"].toString())
                : undefined;
            this.isValoanPreviously = _data["isValoanPreviously"];
            this.whoLivingInHome = _data["whoLivingInHome"];
            this.personalLegalFirstName = _data["personalLegalFirstName"];
            this.personalMiddleInitial = _data["personalMiddleInitial"];
            this.personalLegalLastName = _data["personalLegalLastName"];
            this.personalPhoneNumber = _data["personalPhoneNumber"];
            this.personalEmailAddress = _data["personalEmailAddress"];
            this.personalPassword = _data["personalPassword"];
            this.isSomeOneRefer = _data["isSomeOneRefer"];
            this.isApplyOwn = _data["isApplyOwn"];
            this.maritialStatus = _data["maritialStatus"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.currentAddress = _data["currentAddress"];
            this.currentUnit = _data["currentUnit"];
            this.currentCity = _data["currentCity"];
            this.currentStateId = _data["currentStateId"];
            this.currentZipCode = _data["currentZipCode"];
            this.currentStartLivingDate = _data["currentStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["currentStartLivingDate"].toString())
                : undefined;
            this.currentReantingType = _data["currentReantingType"];
            this.estimatedMonthlyExpenses = _data["estimatedMonthlyExpenses"];
            this.isEmployementHistory = _data["isEmployementHistory"];
            this.isOtherSourceOfIncome = _data["isOtherSourceOfIncome"];
            this.sex = _data["sex"];
            this.ethnicity = _data["ethnicity"];
            this.race = _data["race"];
            this.citizenshipId = _data["citizenshipId"];
            this.isCertify = _data["isCertify"];
            this.isReadEconsent = _data["isReadEconsent"];
            this.isReadThirdPartyConsent = _data["isReadThirdPartyConsent"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.conformSsn = _data["conformSsn"];
            this.birthDate = _data["birthDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["birthDate"].toString())
                : undefined;
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadPurchasingDetail();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["stage"] = this.stage;
        data["isWorkingWithEzalready"] = this.isWorkingWithEzalready;
        data["workingOfficerName"] = this.workingOfficerName;
        data["newHomeAddress"] = this.newHomeAddress;
        data["newHomeUnit"] = this.newHomeUnit;
        data["newHomeCity"] = this.newHomeCity;
        data["newHomeStateId"] = this.newHomeStateId;
        data["newHomeZipCode"] = this.newHomeZipCode;
        data["contractClosingDate"] = this.contractClosingDate
            ? this.contractClosingDate.toISOString()
            : undefined;
        data["contractType"] = this.contractType;
        data["estimatedHomePrice"] = this.estimatedHomePrice;
        data["downPaymentAmount"] = this.downPaymentAmount;
        data["downPaymentPercentage"] = this.downPaymentPercentage;
        data["estimatedAnnualTax"] = this.estimatedAnnualTax;
        data["estimatedAnnualHomeInsurance"] = this.estimatedAnnualHomeInsurance;
        data["creditScore"] = this.creditScore;
        data["propertyLegalFirstName"] = this.propertyLegalFirstName;
        data["propertyMiddleInitial"] = this.propertyMiddleInitial;
        data["propertyLegalLastName"] = this.propertyLegalLastName;
        data["propertyPhoneNumber"] = this.propertyPhoneNumber;
        data["propertyEmailAddress"] = this.propertyEmailAddress;
        data["typeOfHome"] = this.typeOfHome;
        data["monthlyHoadues"] = this.monthlyHoadues;
        data["typeOfNewHome"] = this.typeOfNewHome;
        data["isMilitaryMember"] = this.isMilitaryMember;
        data["currentMilitaryStatus"] = this.currentMilitaryStatus;
        data["militaryBranch"] = this.militaryBranch;
        data["isEtsdateinYear"] = this.isEtsdateinYear;
        data["etsdate"] = this.etsdate
            ? this.etsdate.toISOString()
            : undefined;
        data["isValoanPreviously"] = this.isValoanPreviously;
        data["whoLivingInHome"] = this.whoLivingInHome;
        data["personalLegalFirstName"] = this.personalLegalFirstName;
        data["personalMiddleInitial"] = this.personalMiddleInitial;
        data["personalLegalLastName"] = this.personalLegalLastName;
        data["personalPhoneNumber"] = this.personalPhoneNumber;
        data["personalEmailAddress"] = this.personalEmailAddress;
        data["personalPassword"] = this.personalPassword;
        data["isSomeOneRefer"] = this.isSomeOneRefer;
        data["isApplyOwn"] = this.isApplyOwn;
        data["maritialStatus"] = this.maritialStatus;
        data["numberOfDependents"] = this.numberOfDependents;
        data["currentAddress"] = this.currentAddress;
        data["currentUnit"] = this.currentUnit;
        data["currentCity"] = this.currentCity;
        data["currentStateId"] = this.currentStateId;
        data["currentZipCode"] = this.currentZipCode;
        data["currentStartLivingDate"] = this.currentStartLivingDate
            ? this.currentStartLivingDate.toISOString()
            : undefined;
        data["currentReantingType"] = this.currentReantingType;
        data["estimatedMonthlyExpenses"] = this.estimatedMonthlyExpenses;
        data["isEmployementHistory"] = this.isEmployementHistory;
        data["isOtherSourceOfIncome"] = this.isOtherSourceOfIncome;
        data["sex"] = this.sex;
        data["ethnicity"] = this.ethnicity;
        data["race"] = this.race;
        data["citizenshipId"] = this.citizenshipId;
        data["isCertify"] = this.isCertify;
        data["isReadEconsent"] = this.isReadEconsent;
        data["isReadThirdPartyConsent"] = this.isReadThirdPartyConsent;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["conformSsn"] = this.conformSsn;
        data["birthDate"] = this.birthDate
            ? this.birthDate.toISOString()
            : undefined;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadPurchasingDetail();
        result.init(json);
        return result;
    }
}
class UpdateLeadQuestionAnswers {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailPurchasingId =
                _data["leadApplicationDetailPurchasingId"];
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.questionId = _data["questionId"];
            this.isYes = _data["isYes"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadQuestionAnswers();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailPurchasingId"] = this.leadApplicationDetailPurchasingId;
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["questionId"] = this.questionId;
        data["isYes"] = this.isYes;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadQuestionAnswers();
        result.init(json);
        return result;
    }
}
class UpdateLeadRefinancingDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.isWorkingWithEzalready = _data["isWorkingWithEzalready"];
            this.workingOfficerName = _data["workingOfficerName"];
            this.objectiveReason = _data["objectiveReason"];
            this.propertyAddress = _data["propertyAddress"];
            this.propertyUnit = _data["propertyUnit"];
            this.propertyCity = _data["propertyCity"];
            this.propertyZip = _data["propertyZip"];
            this.propertyStateId = _data["propertyStateId"];
            this.propertyCountryId = _data["propertyCountryId"];
            this.propertyEstimatedValue = _data["propertyEstimatedValue"];
            this.propertyLoanBalance = _data["propertyLoanBalance"];
            this.propertCashOutAmount = _data["propertCashOutAmount"];
            this.newLoanEstimateAmount = _data["newLoanEstimateAmount"];
            this.creditScore = _data["creditScore"];
            this.typeOfHome = _data["typeOfHome"];
            this.monthlyHoadues = _data["monthlyHoadues"];
            this.yearHomePurchased = _data["yearHomePurchased"];
            this.orignalPurchasedPrice = _data["orignalPurchasedPrice"];
            this.estimatedAnnualTax = _data["estimatedAnnualTax"];
            this.estimatedAnnualHomeInsurance = _data["estimatedAnnualHomeInsurance"];
            this.currentlyUsingHomeAs = _data["currentlyUsingHomeAs"];
            this.isMilitaryMember = _data["isMilitaryMember"];
            this.currentMilitaryStatus = _data["currentMilitaryStatus"];
            this.militaryBranch = _data["militaryBranch"];
            this.isEtsdateinYear = _data["isEtsdateinYear"];
            this.etsdate = _data["etsdate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["etsdate"].toString())
                : undefined;
            this.isValoanPreviously = _data["isValoanPreviously"];
            this.whoLivingInHome = _data["whoLivingInHome"];
            this.propertyLegalFirstName = _data["propertyLegalFirstName"];
            this.propertyMiddleInitial = _data["propertyMiddleInitial"];
            this.propertyLegalLastName = _data["propertyLegalLastName"];
            this.propertyPhoneNumber = _data["propertyPhoneNumber"];
            this.propertyEmailAddress = _data["propertyEmailAddress"];
            this.propertyPassword = _data["propertyPassword"];
            this.isSomeoneRefer = _data["isSomeoneRefer"];
            this.refferedBy = _data["refferedBy"];
            this.isApplyOwn = _data["isApplyOwn"];
            this.isLegalSpouse = _data["isLegalSpouse"];
            this.maritialStatus = _data["maritialStatus"];
            this.numberOfDependents = _data["numberOfDependents"];
            this.firstDependantAge = _data["firstDependantAge"];
            this.isCurrentlyLivingOnRefinancingProperty =
                _data["isCurrentlyLivingOnRefinancingProperty"];
            this.currentAddress = _data["currentAddress"];
            this.currentUnit = _data["currentUnit"];
            this.currentCity = _data["currentCity"];
            this.currentStateId = _data["currentStateId"];
            this.currentZipCode = _data["currentZipCode"];
            this.currentStartLivingDate = _data["currentStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["currentStartLivingDate"].toString())
                : undefined;
            this.currentReantingType = _data["currentReantingType"];
            this.estimatedMonthlyExpenses = _data["estimatedMonthlyExpenses"];
            this.personalLegalFirstName = _data["personalLegalFirstName"];
            this.personalMiddleInitial = _data["personalMiddleInitial"];
            this.personalLegalLastName = _data["personalLegalLastName"];
            this.personalPhoneNumber = _data["personalPhoneNumber"];
            this.personalEmailAddress = _data["personalEmailAddress"];
            this.personalPassword = _data["personalPassword"];
            this.isAddressSameAsPrimaryBorrower =
                _data["isAddressSameAsPrimaryBorrower"];
            this.personalAddress = _data["personalAddress"];
            this.personalUnit = _data["personalUnit"];
            this.personalCity = _data["personalCity"];
            this.personalStateId = _data["personalStateId"];
            this.personalZipCode = _data["personalZipCode"];
            this.personalStartLivingDate = _data["personalStartLivingDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["personalStartLivingDate"].toString())
                : undefined;
            this.personalReantingType = _data["personalReantingType"];
            this.isEmployementHistory = _data["isEmployementHistory"];
            this.isCoBorrowerHaveShareIncome = _data["isCoBorrowerHaveShareIncome"];
            this.sex = _data["sex"];
            this.ethnicity = _data["ethnicity"];
            this.race = _data["race"];
            this.citizenshipId = _data["citizenshipId"];
            this.isCertify = _data["isCertify"];
            this.isReadEconsent = _data["isReadEconsent"];
            this.isReadThirdPartyConsent = _data["isReadThirdPartyConsent"];
            this.socialSecurityNumber = _data["socialSecurityNumber"];
            this.conformSsn = _data["conformSsn"];
            this.birthDate = _data["birthDate"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["birthDate"].toString())
                : undefined;
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadRefinancingDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["isWorkingWithEzalready"] = this.isWorkingWithEzalready;
        data["workingOfficerName"] = this.workingOfficerName;
        data["objectiveReason"] = this.objectiveReason;
        data["propertyAddress"] = this.propertyAddress;
        data["propertyUnit"] = this.propertyUnit;
        data["propertyCity"] = this.propertyCity;
        data["propertyZip"] = this.propertyZip;
        data["propertyStateId"] = this.propertyStateId;
        data["propertyCountryId"] = this.propertyCountryId;
        data["propertyEstimatedValue"] = this.propertyEstimatedValue;
        data["propertyLoanBalance"] = this.propertyLoanBalance;
        data["propertCashOutAmount"] = this.propertCashOutAmount;
        data["newLoanEstimateAmount"] = this.newLoanEstimateAmount;
        data["creditScore"] = this.creditScore;
        data["typeOfHome"] = this.typeOfHome;
        data["monthlyHoadues"] = this.monthlyHoadues;
        data["yearHomePurchased"] = this.yearHomePurchased;
        data["orignalPurchasedPrice"] = this.orignalPurchasedPrice;
        data["estimatedAnnualTax"] = this.estimatedAnnualTax;
        data["estimatedAnnualHomeInsurance"] = this.estimatedAnnualHomeInsurance;
        data["currentlyUsingHomeAs"] = this.currentlyUsingHomeAs;
        data["isMilitaryMember"] = this.isMilitaryMember;
        data["currentMilitaryStatus"] = this.currentMilitaryStatus;
        data["militaryBranch"] = this.militaryBranch;
        data["isEtsdateinYear"] = this.isEtsdateinYear;
        data["etsdate"] = this.etsdate
            ? this.etsdate.toISOString()
            : undefined;
        data["isValoanPreviously"] = this.isValoanPreviously;
        data["whoLivingInHome"] = this.whoLivingInHome;
        data["propertyLegalFirstName"] = this.propertyLegalFirstName;
        data["propertyMiddleInitial"] = this.propertyMiddleInitial;
        data["propertyLegalLastName"] = this.propertyLegalLastName;
        data["propertyPhoneNumber"] = this.propertyPhoneNumber;
        data["propertyEmailAddress"] = this.propertyEmailAddress;
        data["propertyPassword"] = this.propertyPassword;
        data["isSomeoneRefer"] = this.isSomeoneRefer;
        data["refferedBy"] = this.refferedBy;
        data["isApplyOwn"] = this.isApplyOwn;
        data["isLegalSpouse"] = this.isLegalSpouse;
        data["maritialStatus"] = this.maritialStatus;
        data["numberOfDependents"] = this.numberOfDependents;
        data["firstDependantAge"] = this.firstDependantAge;
        data["isCurrentlyLivingOnRefinancingProperty"] = this.isCurrentlyLivingOnRefinancingProperty;
        data["currentAddress"] = this.currentAddress;
        data["currentUnit"] = this.currentUnit;
        data["currentCity"] = this.currentCity;
        data["currentStateId"] = this.currentStateId;
        data["currentZipCode"] = this.currentZipCode;
        data["currentStartLivingDate"] = this.currentStartLivingDate
            ? this.currentStartLivingDate.toISOString()
            : undefined;
        data["currentReantingType"] = this.currentReantingType;
        data["estimatedMonthlyExpenses"] = this.estimatedMonthlyExpenses;
        data["personalLegalFirstName"] = this.personalLegalFirstName;
        data["personalMiddleInitial"] = this.personalMiddleInitial;
        data["personalLegalLastName"] = this.personalLegalLastName;
        data["personalPhoneNumber"] = this.personalPhoneNumber;
        data["personalEmailAddress"] = this.personalEmailAddress;
        data["personalPassword"] = this.personalPassword;
        data["isAddressSameAsPrimaryBorrower"] = this.isAddressSameAsPrimaryBorrower;
        data["personalAddress"] = this.personalAddress;
        data["personalUnit"] = this.personalUnit;
        data["personalCity"] = this.personalCity;
        data["personalStateId"] = this.personalStateId;
        data["personalZipCode"] = this.personalZipCode;
        data["personalStartLivingDate"] = this.personalStartLivingDate
            ? this.personalStartLivingDate.toISOString()
            : undefined;
        data["personalReantingType"] = this.personalReantingType;
        data["isEmployementHistory"] = this.isEmployementHistory;
        data["isCoBorrowerHaveShareIncome"] = this.isCoBorrowerHaveShareIncome;
        data["sex"] = this.sex;
        data["ethnicity"] = this.ethnicity;
        data["race"] = this.race;
        data["citizenshipId"] = this.citizenshipId;
        data["isCertify"] = this.isCertify;
        data["isReadEconsent"] = this.isReadEconsent;
        data["isReadThirdPartyConsent"] = this.isReadThirdPartyConsent;
        data["socialSecurityNumber"] = this.socialSecurityNumber;
        data["conformSsn"] = this.conformSsn;
        data["birthDate"] = this.birthDate
            ? this.birthDate.toISOString()
            : undefined;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadRefinancingDetails();
        result.init(json);
        return result;
    }
}
class UpdateLeadRefinancingIncomeDetails {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.leadApplicationDetailRefinancingId =
                _data["leadApplicationDetailRefinancingId"];
            this.leadApplicationTypeId = _data["leadApplicationTypeId"];
            this.incomeTypeId = _data["incomeTypeId"];
            this.monthlyAmount = _data["monthlyAmount"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadRefinancingIncomeDetails();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["leadApplicationDetailRefinancingId"] = this.leadApplicationDetailRefinancingId;
        data["leadApplicationTypeId"] = this.leadApplicationTypeId;
        data["incomeTypeId"] = this.incomeTypeId;
        data["monthlyAmount"] = this.monthlyAmount;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadRefinancingIncomeDetails();
        result.init(json);
        return result;
    }
}
class UpdateLeadTaxTypes {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.taxesType = _data["taxesType"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLeadTaxTypes();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["taxesType"] = this.taxesType;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLeadTaxTypes();
        result.init(json);
        return result;
    }
}
class UpdateLoanAndPropertyInformationGiftRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanPropertyGiftTypeId4d1 = _data["loanPropertyGiftTypeId4d1"];
            this.deposited4d2 = _data["deposited4d2"];
            this.source4d3 = _data["source4d3"];
            this.value4d4 = _data["value4d4"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanAndPropertyInformationGiftRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanPropertyGiftTypeId4d1"] = this.loanPropertyGiftTypeId4d1;
        data["deposited4d2"] = this.deposited4d2;
        data["source4d3"] = this.source4d3;
        data["value4d4"] = this.value4d4;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanAndPropertyInformationGiftRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanAndPropertyInformationOtherMortageLoanRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.creditorName4b1 = _data["creditorName4b1"];
            this.lienType4b2 = _data["lienType4b2"];
            this.monthlyPayment4b3 = _data["monthlyPayment4b3"];
            this.loanAmount4b4 = _data["loanAmount4b4"];
            this.creditAmount4b5 = _data["creditAmount4b5"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanAndPropertyInformationOtherMortageLoanRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["creditorName4b1"] = this.creditorName4b1;
        data["lienType4b2"] = this.lienType4b2;
        data["monthlyPayment4b3"] = this.monthlyPayment4b3;
        data["loanAmount4b4"] = this.loanAmount4b4;
        data["creditAmount4b5"] = this.creditAmount4b5;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanAndPropertyInformationOtherMortageLoanRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanAndPropertyInformationRentalIncomeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.expectedMonthlyIncome4c1 = _data["expectedMonthlyIncome4c1"];
            this.lenderExpectedMonthlyIncome4c2 =
                _data["lenderExpectedMonthlyIncome4c2"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanAndPropertyInformationRentalIncomeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["expectedMonthlyIncome4c1"] = this.expectedMonthlyIncome4c1;
        data["lenderExpectedMonthlyIncome4c2"] = this.lenderExpectedMonthlyIncome4c2;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanAndPropertyInformationRentalIncomeRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanAndPropertyInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.loanAmount4a1 = _data["loanAmount4a1"];
            this.loanPurpose4a2 = _data["loanPurpose4a2"];
            this.propertyStreet4a31 = _data["propertyStreet4a31"];
            this.propertyUnitNo4a32 = _data["propertyUnitNo4a32"];
            this.propertyZip4a35 = _data["propertyZip4a35"];
            this.countryId4a36 = _data["countryId4a36"];
            this.stateId4a34 = _data["stateId4a34"];
            this.cityId4a33 = _data["cityId4a33"];
            this.propertyNumberUnits4a4 = _data["propertyNumberUnits4a4"];
            this.propertyValue4a5 = _data["propertyValue4a5"];
            this.loanPropertyOccupancyId4a6 = _data["loanPropertyOccupancyId4a6"];
            this.fhaSecondaryResidance4a61 = _data["fhaSecondaryResidance4a61"];
            this.isMixedUseProperty4a7 = _data["isMixedUseProperty4a7"];
            this.isManufacturedHome4a8 = _data["isManufacturedHome4a8"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanAndPropertyInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["loanAmount4a1"] = this.loanAmount4a1;
        data["loanPurpose4a2"] = this.loanPurpose4a2;
        data["propertyStreet4a31"] = this.propertyStreet4a31;
        data["propertyUnitNo4a32"] = this.propertyUnitNo4a32;
        data["propertyZip4a35"] = this.propertyZip4a35;
        data["countryId4a36"] = this.countryId4a36;
        data["stateId4a34"] = this.stateId4a34;
        data["cityId4a33"] = this.cityId4a33;
        data["propertyNumberUnits4a4"] = this.propertyNumberUnits4a4;
        data["propertyValue4a5"] = this.propertyValue4a5;
        data["loanPropertyOccupancyId4a6"] = this.loanPropertyOccupancyId4a6;
        data["fhaSecondaryResidance4a61"] = this.fhaSecondaryResidance4a61;
        data["isMixedUseProperty4a7"] = this.isMixedUseProperty4a7;
        data["isManufacturedHome4a8"] = this.isManufacturedHome4a8;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanAndPropertyInformationRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanOriginatorInformationRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.organizationName91 = _data["organizationName91"];
            this.address92 = _data["address92"];
            this.organizationNmlsrId93 = _data["organizationNmlsrId93"];
            this.organizationStateLicence94 = _data["organizationStateLicence94"];
            this.originatorName95 = _data["originatorName95"];
            this.originatorNmlsrId96 = _data["originatorNmlsrId96"];
            this.originatorStateLicense97 = _data["originatorStateLicense97"];
            this.email98 = _data["email98"];
            this.phone99 = _data["phone99"];
            this.date910 = _data["date910"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["date910"].toString())
                : undefined;
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanOriginatorInformationRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["organizationName91"] = this.organizationName91;
        data["address92"] = this.address92;
        data["organizationNmlsrId93"] = this.organizationNmlsrId93;
        data["organizationStateLicence94"] = this.organizationStateLicence94;
        data["originatorName95"] = this.originatorName95;
        data["originatorNmlsrId96"] = this.originatorNmlsrId96;
        data["originatorStateLicense97"] = this.originatorStateLicense97;
        data["email98"] = this.email98;
        data["phone99"] = this.phone99;
        data["date910"] = this.date910
            ? this.date910.toISOString()
            : undefined;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanOriginatorInformationRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanPropertyGiftTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanPropertyGiftType1 = _data["loanPropertyGiftType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanPropertyGiftTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanPropertyGiftType1"] = this.loanPropertyGiftType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanPropertyGiftTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateLoanPropertyOccupancyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanPropertyOccupancy1 = _data["loanPropertyOccupancy1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateLoanPropertyOccupancyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanPropertyOccupancy1"] = this.loanPropertyOccupancy1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateLoanPropertyOccupancyRequest();
        result.init(json);
        return result;
    }
}
class UpdateMaritalStatusRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.maritialStatus1 = _data["maritialStatus1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateMaritalStatusRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["maritialStatus1"] = this.maritialStatus1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateMaritalStatusRequest();
        result.init(json);
        return result;
    }
}
class UpdateMilitaryServiceRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationPersonalInformationId =
                _data["applicationPersonalInformationId"];
            this.servedInForces7a1 = _data["servedInForces7a1"];
            this.currentlyServing7a2 = _data["currentlyServing7a2"];
            this.dateOfServiceExpiration7a3 = _data["dateOfServiceExpiration7a3"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["dateOfServiceExpiration7a3"].toString())
                : undefined;
            this.retired7a2 = _data["retired7a2"];
            this.nonActivatedMember7a2 = _data["nonActivatedMember7a2"];
            this.survivingSpouse7a21 = _data["survivingSpouse7a21"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateMilitaryServiceRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationPersonalInformationId"] = this.applicationPersonalInformationId;
        data["servedInForces7a1"] = this.servedInForces7a1;
        data["currentlyServing7a2"] = this.currentlyServing7a2;
        data["dateOfServiceExpiration7a3"] = this.dateOfServiceExpiration7a3
            ? this.dateOfServiceExpiration7a3.toISOString()
            : undefined;
        data["retired7a2"] = this.retired7a2;
        data["nonActivatedMember7a2"] = this.nonActivatedMember7a2;
        data["survivingSpouse7a21"] = this.survivingSpouse7a21;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateMilitaryServiceRequest();
        result.init(json);
        return result;
    }
}
class UpdateMortageLoanOnPropertyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.applicationFinancialRealEstateId =
                _data["applicationFinancialRealEstateId"];
            this.creditorName3a9 = _data["creditorName3a9"];
            this.accountNumber3a10 = _data["accountNumber3a10"];
            this.monthlyMortagePayment3a11 = _data["monthlyMortagePayment3a11"];
            this.unpaidBalance3a12 = _data["unpaidBalance3a12"];
            this.paidOff3a13 = _data["paidOff3a13"];
            this.mortageLoanTypesId3a14 = _data["mortageLoanTypesId3a14"];
            this.creditLimit3a15 = _data["creditLimit3a15"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateMortageLoanOnPropertyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["applicationFinancialRealEstateId"] = this.applicationFinancialRealEstateId;
        data["creditorName3a9"] = this.creditorName3a9;
        data["accountNumber3a10"] = this.accountNumber3a10;
        data["monthlyMortagePayment3a11"] = this.monthlyMortagePayment3a11;
        data["unpaidBalance3a12"] = this.unpaidBalance3a12;
        data["paidOff3a13"] = this.paidOff3a13;
        data["mortageLoanTypesId3a14"] = this.mortageLoanTypesId3a14;
        data["creditLimit3a15"] = this.creditLimit3a15;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateMortageLoanOnPropertyRequest();
        result.init(json);
        return result;
    }
}
class UpdateMortageLoanTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.mortageLoanTypesId = _data["mortageLoanTypesId"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateMortageLoanTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["mortageLoanTypesId"] = this.mortageLoanTypesId;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateMortageLoanTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdateOtherLaibilitiesTypeRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialOtherLaibilitiesType1 =
                _data["financialOtherLaibilitiesType1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateOtherLaibilitiesTypeRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialOtherLaibilitiesType1"] = this.financialOtherLaibilitiesType1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateOtherLaibilitiesTypeRequest();
        result.init(json);
        return result;
    }
}
class UpdatePropertyIntendedOccupancyRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialPropertyIntendedOccupancy1 =
                _data["financialPropertyIntendedOccupancy1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdatePropertyIntendedOccupancyRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialPropertyIntendedOccupancy1"] = this.financialPropertyIntendedOccupancy1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdatePropertyIntendedOccupancyRequest();
        result.init(json);
        return result;
    }
}
class UpdatePropertyStatusRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.financialPropertyStatus1 = _data["financialPropertyStatus1"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdatePropertyStatusRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["financialPropertyStatus1"] = this.financialPropertyStatus1;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdatePropertyStatusRequest();
        result.init(json);
        return result;
    }
}
class UpdateStateRequest {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.countryId = _data["countryId"];
            this.stateName = _data["stateName"];
            this.id = _data["id"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UpdateStateRequest();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["countryId"] = this.countryId;
        data["stateName"] = this.stateName;
        data["id"] = this.id;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UpdateStateRequest();
        result.init(json);
        return result;
    }
}
class UploadAdminLoanApplicationDocument {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.loanId = _data["loanId"];
            this.disclosureId = _data["disclosureId"];
            this.userId = _data["userId"];
            this.formFile = _data["formFile"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UploadAdminLoanApplicationDocument();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["loanId"] = this.loanId;
        data["disclosureId"] = this.disclosureId;
        data["userId"] = this.userId;
        data["formFile"] = this.formFile;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UploadAdminLoanApplicationDocument();
        result.init(json);
        return result;
    }
}
class UserDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.userName = _data["userName"];
            this.name = _data["name"];
            this.surname = _data["surname"];
            this.emailAddress = _data["emailAddress"];
            this.isActive = _data["isActive"];
            this.fullName = _data["fullName"];
            this.lastLoginTime = _data["lastLoginTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["lastLoginTime"].toString())
                : undefined;
            this.creationTime = _data["creationTime"]
                ? moment__WEBPACK_IMPORTED_MODULE_4__(_data["creationTime"].toString())
                : undefined;
            if (Array.isArray(_data["roleNames"])) {
                this.roleNames = [];
                for (let item of _data["roleNames"])
                    this.roleNames.push(item);
            }
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UserDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["userName"] = this.userName;
        data["name"] = this.name;
        data["surname"] = this.surname;
        data["emailAddress"] = this.emailAddress;
        data["isActive"] = this.isActive;
        data["fullName"] = this.fullName;
        data["lastLoginTime"] = this.lastLoginTime
            ? this.lastLoginTime.toISOString()
            : undefined;
        data["creationTime"] = this.creationTime
            ? this.creationTime.toISOString()
            : undefined;
        if (Array.isArray(this.roleNames)) {
            data["roleNames"] = [];
            for (let item of this.roleNames)
                data["roleNames"].push(item);
        }
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserDto();
        result.init(json);
        return result;
    }
}
class UserDtoPagedResultDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (let item of _data["items"])
                    this.items.push(UserDto.fromJS(item));
            }
            this.totalCount = _data["totalCount"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UserDtoPagedResultDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["totalCount"] = this.totalCount;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserDtoPagedResultDto();
        result.init(json);
        return result;
    }
}
class UserLoginInfoDto {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.surname = _data["surname"];
            this.userName = _data["userName"];
            this.emailAddress = _data["emailAddress"];
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UserLoginInfoDto();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["surname"] = this.surname;
        data["userName"] = this.userName;
        data["emailAddress"] = this.emailAddress;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserLoginInfoDto();
        result.init(json);
        return result;
    }
}
class UserNotification {
    constructor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    init(_data) {
        if (_data) {
            this.id = _data["id"];
            this.tenantId = _data["tenantId"];
            this.userId = _data["userId"];
            this.state = _data["state"];
            this.notification = _data["notification"]
                ? TenantNotification.fromJS(_data["notification"])
                : undefined;
        }
    }
    static fromJS(data) {
        data = typeof data === "object" ? data : {};
        let result = new UserNotification();
        result.init(data);
        return result;
    }
    toJSON(data) {
        data = typeof data === "object" ? data : {};
        data["id"] = this.id;
        data["tenantId"] = this.tenantId;
        data["userId"] = this.userId;
        data["state"] = this.state;
        data["notification"] = this.notification
            ? this.notification.toJSON()
            : undefined;
        return data;
    }
    clone() {
        const json = this.toJSON();
        let result = new UserNotification();
        result.init(json);
        return result;
    }
}
var UserNotificationState;
(function (UserNotificationState) {
    UserNotificationState[UserNotificationState["_0"] = 0] = "_0";
    UserNotificationState[UserNotificationState["_1"] = 1] = "_1";
})(UserNotificationState || (UserNotificationState = {}));
class ApiException extends Error {
    constructor(message, status, response, headers, result) {
        super();
        this.isApiException = true;
        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }
    static isApiException(obj) {
        return obj.isApiException === true;
    }
}
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(result);
    else
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(new ApiException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"]((observer) => {
        if (!blob) {
            observer.next("");
            observer.complete();
        }
        else {
            let reader = new FileReader();
            reader.onload = (event) => {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}


/***/ }),

/***/ "./src/shared/service-proxies/service-proxy.module.ts":
/*!************************************************************!*\
  !*** ./src/shared/service-proxies/service-proxy.module.ts ***!
  \************************************************************/
/*! exports provided: ServiceProxyModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceProxyModule", function() { return ServiceProxyModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _service_proxies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service-proxies */ "./src/shared/service-proxies/service-proxies.ts");





class ServiceProxyModule {
}
ServiceProxyModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ServiceProxyModule });
ServiceProxyModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ServiceProxyModule_Factory(t) { return new (t || ServiceProxyModule)(); }, providers: [
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["RoleServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["SessionServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["TenantServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["UserServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["TokenAuthServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AccountServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["ConfigurationServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["StateServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["IncomeTypeServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadAssetTypesServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadEmploymentTypesServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadIncomeTypesServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanDetailServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanProgramServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanStatusServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanSummaryStatusServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminNotificationsServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["FinancialServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["CitizenshipTypeServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadEmploymentDetailsServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanApplicationDocumentServiceServiceProxy"],
        _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminDisclosureServiceServiceProxy"],
        { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HTTP_INTERCEPTORS"], useClass: abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["AbpHttpInterceptor"], multi: true },
    ] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ServiceProxyModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                providers: [
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["RoleServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["SessionServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["TenantServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["UserServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["TokenAuthServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AccountServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["ConfigurationServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["StateServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["IncomeTypeServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadAssetTypesServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadEmploymentTypesServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadIncomeTypesServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanDetailServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanProgramServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanStatusServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanSummaryStatusServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminNotificationsServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["FinancialServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["CitizenshipTypeServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["LeadEmploymentDetailsServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminLoanApplicationDocumentServiceServiceProxy"],
                    _service_proxies__WEBPACK_IMPORTED_MODULE_3__["AdminDisclosureServiceServiceProxy"],
                    { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HTTP_INTERCEPTORS"], useClass: abp_ng2_module__WEBPACK_IMPORTED_MODULE_2__["AbpHttpInterceptor"], multi: true },
                ],
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/shared/session/app-session.service.ts":
/*!***************************************************!*\
  !*** ./src/shared/session/app-session.service.ts ***!
  \***************************************************/
/*! exports provided: AppSessionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppSessionService", function() { return AppSessionService; });
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/service-proxies/service-proxies */ "./src/shared/service-proxies/service-proxies.ts");






class AppSessionService {
    constructor(_sessionService, _abpMultiTenancyService) {
        this._sessionService = _sessionService;
        this._abpMultiTenancyService = _abpMultiTenancyService;
    }
    get application() {
        return this._application;
    }
    get user() {
        return this._user;
    }
    get userId() {
        return this.user ? this.user.id : null;
    }
    get tenant() {
        return this._tenant;
    }
    get tenantId() {
        return this.tenant ? this.tenant.id : null;
    }
    getShownLoginName() {
        const userName = this._user.userName;
        if (!this._abpMultiTenancyService.isEnabled) {
            return userName;
        }
        return (this._tenant ? this._tenant.tenancyName : ".") + "\\" + userName;
    }
    init() {
        return new Promise((resolve, reject) => {
            this._sessionService
                .getCurrentLoginInformations()
                .toPromise()
                .then((result) => {
                this._application = result.application;
                this._user = result.user;
                this._tenant = result.tenant;
                resolve(true);
            }, (err) => {
                reject(err);
            });
        });
    }
    changeTenantIfNeeded(tenantId) {
        if (this.isCurrentTenant(tenantId)) {
            return false;
        }
        abp.multiTenancy.setTenantIdCookie(tenantId);
        location.reload();
        return true;
    }
    isCurrentTenant(tenantId) {
        if (!tenantId && this.tenant) {
            return false;
        }
        else if (tenantId && (!this.tenant || this.tenant.id !== tenantId)) {
            return false;
        }
        return true;
    }
}
AppSessionService.ɵfac = function AppSessionService_Factory(t) { return new (t || AppSessionService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_2__["SessionServiceProxy"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["AbpMultiTenancyService"])); };
AppSessionService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: AppSessionService, factory: AppSessionService.ɵfac });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](AppSessionService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
    }], function () { return [{ type: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_2__["SessionServiceProxy"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["AbpMultiTenancyService"] }]; }, null); })();


/***/ }),

/***/ "./src/shared/shared.module.ts":
/*!*************************************!*\
  !*** ./src/shared/shared.module.ts ***!
  \*************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/__ivy_ngcc__/dist/ngx-pagination.js");
/* harmony import */ var _session_app_session_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./session/app-session.service */ "./src/shared/session/app-session.service.ts");
/* harmony import */ var _nav_app_url_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nav/app-url.service */ "./src/shared/nav/app-url.service.ts");
/* harmony import */ var _auth_app_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/app-auth.service */ "./src/shared/auth/app-auth.service.ts");
/* harmony import */ var _auth_auth_route_guard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./auth/auth-route-guard */ "./src/shared/auth/auth-route-guard.ts");
/* harmony import */ var _shared_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/pipes/localize.pipe */ "./src/shared/pipes/localize.pipe.ts");
/* harmony import */ var _shared_pipes_OtherValue_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/pipes/OtherValue.pipe */ "./src/shared/pipes/OtherValue.pipe.ts");
/* harmony import */ var _shared_pipes_YesNo_pipe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/pipes/YesNo.pipe */ "./src/shared/pipes/YesNo.pipe.ts");
/* harmony import */ var _shared_pipes_date_difference_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @shared/pipes/date-difference.pipe */ "./src/shared/pipes/date-difference.pipe.ts");
/* harmony import */ var _components_pagination_abp_pagination_controls_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/pagination/abp-pagination-controls.component */ "./src/shared/components/pagination/abp-pagination-controls.component.ts");
/* harmony import */ var _components_validation_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/validation/abp-validation.summary.component */ "./src/shared/components/validation/abp-validation.summary.component.ts");
/* harmony import */ var _components_modal_abp_modal_header_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/modal/abp-modal-header.component */ "./src/shared/components/modal/abp-modal-header.component.ts");
/* harmony import */ var _components_modal_abp_modal_footer_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/modal/abp-modal-footer.component */ "./src/shared/components/modal/abp-modal-footer.component.ts");
/* harmony import */ var _layout_layout_store_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layout/layout-store.service */ "./src/shared/layout/layout-store.service.ts");
/* harmony import */ var _directives_busy_directive__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./directives/busy.directive */ "./src/shared/directives/busy.directive.ts");
/* harmony import */ var _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./directives/equal-validator.directive */ "./src/shared/directives/equal-validator.directive.ts");
/* harmony import */ var _directives_bootstrap_validation_css_directive__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./directives/bootstrap-validation-css.directive */ "./src/shared/directives/bootstrap-validation-css.directive.ts");
/* harmony import */ var _shared_directives_phone_mask_directive__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../shared/directives/phone-mask.directive */ "./src/shared/directives/phone-mask.directive.ts");
/* harmony import */ var _shared_directives_match_password_directive__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../shared/directives/match-password.directive */ "./src/shared/directives/match-password.directive.ts");























class SharedModule {
    static forRoot() {
        return {
            ngModule: SharedModule,
            providers: [
                _session_app_session_service__WEBPACK_IMPORTED_MODULE_4__["AppSessionService"],
                _nav_app_url_service__WEBPACK_IMPORTED_MODULE_5__["AppUrlService"],
                _auth_app_auth_service__WEBPACK_IMPORTED_MODULE_6__["AppAuthService"],
                _auth_auth_route_guard__WEBPACK_IMPORTED_MODULE_7__["AppRouteGuard"],
                _layout_layout_store_service__WEBPACK_IMPORTED_MODULE_16__["LayoutStoreService"],
            ],
        };
    }
}
SharedModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({ type: SharedModule });
SharedModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({ factory: function SharedModule_Factory(t) { return new (t || SharedModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"], ngx_pagination__WEBPACK_IMPORTED_MODULE_3__["NgxPaginationModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](SharedModule, { declarations: [_components_pagination_abp_pagination_controls_component__WEBPACK_IMPORTED_MODULE_12__["AbpPaginationControlsComponent"],
        _components_validation_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_13__["AbpValidationSummaryComponent"],
        _components_modal_abp_modal_header_component__WEBPACK_IMPORTED_MODULE_14__["AbpModalHeaderComponent"],
        _components_modal_abp_modal_footer_component__WEBPACK_IMPORTED_MODULE_15__["AbpModalFooterComponent"],
        _shared_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_8__["LocalizePipe"],
        _shared_pipes_OtherValue_pipe__WEBPACK_IMPORTED_MODULE_9__["EthnicityOtherValuePipe"],
        _shared_pipes_YesNo_pipe__WEBPACK_IMPORTED_MODULE_10__["EthnicityYesNoPipe"],
        _shared_pipes_date_difference_pipe__WEBPACK_IMPORTED_MODULE_11__["DateDifferencePipe"],
        _directives_busy_directive__WEBPACK_IMPORTED_MODULE_17__["BusyDirective"],
        _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_18__["EqualValidator"],
        _directives_bootstrap_validation_css_directive__WEBPACK_IMPORTED_MODULE_19__["BootstrapValidationCssDirective"],
        _shared_directives_phone_mask_directive__WEBPACK_IMPORTED_MODULE_20__["PhoneMaskDirective"],
        _shared_directives_match_password_directive__WEBPACK_IMPORTED_MODULE_21__["MatchPasswordDirective"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"], ngx_pagination__WEBPACK_IMPORTED_MODULE_3__["NgxPaginationModule"]], exports: [_components_pagination_abp_pagination_controls_component__WEBPACK_IMPORTED_MODULE_12__["AbpPaginationControlsComponent"],
        _components_validation_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_13__["AbpValidationSummaryComponent"],
        _components_modal_abp_modal_header_component__WEBPACK_IMPORTED_MODULE_14__["AbpModalHeaderComponent"],
        _components_modal_abp_modal_footer_component__WEBPACK_IMPORTED_MODULE_15__["AbpModalFooterComponent"],
        _shared_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_8__["LocalizePipe"],
        _shared_pipes_OtherValue_pipe__WEBPACK_IMPORTED_MODULE_9__["EthnicityOtherValuePipe"],
        _shared_pipes_YesNo_pipe__WEBPACK_IMPORTED_MODULE_10__["EthnicityYesNoPipe"],
        _shared_pipes_date_difference_pipe__WEBPACK_IMPORTED_MODULE_11__["DateDifferencePipe"],
        _directives_busy_directive__WEBPACK_IMPORTED_MODULE_17__["BusyDirective"],
        _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_18__["EqualValidator"],
        _directives_bootstrap_validation_css_directive__WEBPACK_IMPORTED_MODULE_19__["BootstrapValidationCssDirective"],
        _shared_directives_phone_mask_directive__WEBPACK_IMPORTED_MODULE_20__["PhoneMaskDirective"],
        _shared_directives_match_password_directive__WEBPACK_IMPORTED_MODULE_21__["MatchPasswordDirective"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](SharedModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"], ngx_pagination__WEBPACK_IMPORTED_MODULE_3__["NgxPaginationModule"]],
                declarations: [
                    _components_pagination_abp_pagination_controls_component__WEBPACK_IMPORTED_MODULE_12__["AbpPaginationControlsComponent"],
                    _components_validation_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_13__["AbpValidationSummaryComponent"],
                    _components_modal_abp_modal_header_component__WEBPACK_IMPORTED_MODULE_14__["AbpModalHeaderComponent"],
                    _components_modal_abp_modal_footer_component__WEBPACK_IMPORTED_MODULE_15__["AbpModalFooterComponent"],
                    _shared_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_8__["LocalizePipe"],
                    _shared_pipes_OtherValue_pipe__WEBPACK_IMPORTED_MODULE_9__["EthnicityOtherValuePipe"],
                    _shared_pipes_YesNo_pipe__WEBPACK_IMPORTED_MODULE_10__["EthnicityYesNoPipe"],
                    _shared_pipes_date_difference_pipe__WEBPACK_IMPORTED_MODULE_11__["DateDifferencePipe"],
                    _directives_busy_directive__WEBPACK_IMPORTED_MODULE_17__["BusyDirective"],
                    _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_18__["EqualValidator"],
                    _directives_bootstrap_validation_css_directive__WEBPACK_IMPORTED_MODULE_19__["BootstrapValidationCssDirective"],
                    _shared_directives_phone_mask_directive__WEBPACK_IMPORTED_MODULE_20__["PhoneMaskDirective"],
                    _shared_directives_match_password_directive__WEBPACK_IMPORTED_MODULE_21__["MatchPasswordDirective"],
                ],
                exports: [
                    _components_pagination_abp_pagination_controls_component__WEBPACK_IMPORTED_MODULE_12__["AbpPaginationControlsComponent"],
                    _components_validation_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_13__["AbpValidationSummaryComponent"],
                    _components_modal_abp_modal_header_component__WEBPACK_IMPORTED_MODULE_14__["AbpModalHeaderComponent"],
                    _components_modal_abp_modal_footer_component__WEBPACK_IMPORTED_MODULE_15__["AbpModalFooterComponent"],
                    _shared_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_8__["LocalizePipe"],
                    _shared_pipes_OtherValue_pipe__WEBPACK_IMPORTED_MODULE_9__["EthnicityOtherValuePipe"],
                    _shared_pipes_YesNo_pipe__WEBPACK_IMPORTED_MODULE_10__["EthnicityYesNoPipe"],
                    _shared_pipes_date_difference_pipe__WEBPACK_IMPORTED_MODULE_11__["DateDifferencePipe"],
                    _directives_busy_directive__WEBPACK_IMPORTED_MODULE_17__["BusyDirective"],
                    _directives_equal_validator_directive__WEBPACK_IMPORTED_MODULE_18__["EqualValidator"],
                    _directives_bootstrap_validation_css_directive__WEBPACK_IMPORTED_MODULE_19__["BootstrapValidationCssDirective"],
                    _shared_directives_phone_mask_directive__WEBPACK_IMPORTED_MODULE_20__["PhoneMaskDirective"],
                    _shared_directives_match_password_directive__WEBPACK_IMPORTED_MODULE_21__["MatchPasswordDirective"],
                ],
            }]
    }], null, null); })();


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\Shabir\source\repos\LoanApplication_Azure\LOS-FRONTEND\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map
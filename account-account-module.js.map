{"version":3,"sources":["./src/account/account-routing.module.ts","./src/account/account.component.ts","./src/account/account.component.html","./src/account/account.module.ts","./src/account/layout/account-footer.component.ts","./src/account/layout/account-footer.component.html","./src/account/layout/account-header.component.ts","./src/account/layout/account-header.component.html","./src/account/layout/account-languages.component.ts","./src/account/layout/account-languages.component.html","./src/account/login/login.component.ts","./src/account/login/login.component.html","./src/account/register/register.component.ts","./src/account/register/register.component.html","./src/account/tenant/tenant-change-dialog.component.ts","./src/account/tenant/tenant-change-dialog.component.html","./src/account/tenant/tenant-change.component.ts","./src/account/tenant/tenant-change.component.html","./src/shared/AppEnums.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { AccountComponent } from \"./account.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: \"\",\r\n        component: AccountComponent,\r\n        children: [\r\n          { path: \"login\", component: LoginComponent },\r\n          { path: \"register\", component: RegisterComponent },\r\n        ],\r\n      },\r\n    ]),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  Injector,\r\n  Renderer2,\r\n} from \"@angular/core\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\n\r\n@Component({\r\n  templateUrl: \"./account.component.html\",\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AccountComponent extends AppComponentBase implements OnInit {\r\n  constructor(injector: Injector, private renderer: Renderer2) {\r\n    super(injector);\r\n  }\r\n\r\n  showTenantChange(): boolean {\r\n    return abp.multiTenancy.isEnabled;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.addClass(document.body, \"login-page\");\r\n  }\r\n}\r\n","<div class=\"login-box\">\r\n  <account-header></account-header>\r\n  <div class=\"card\">\r\n    <div *ngIf=\"showTenantChange()\" class=\"card-header\">\r\n      <tenant-change></tenant-change>\r\n    </div>\r\n    <div class=\"card-body login-card-body\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <account-languages></account-languages>\r\n    </div>\r\n  </div>\r\n  <account-footer></account-footer>\r\n</div>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientJsonpModule } from \"@angular/common/http\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ModalModule } from \"ngx-bootstrap/modal\";\r\nimport { AccountRoutingModule } from \"./account-routing.module\";\r\nimport { ServiceProxyModule } from \"@shared/service-proxies/service-proxy.module\";\r\nimport { SharedModule } from \"@shared/shared.module\";\r\nimport { AccountComponent } from \"./account.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { AccountLanguagesComponent } from \"./layout/account-languages.component\";\r\nimport { AccountHeaderComponent } from \"./layout/account-header.component\";\r\nimport { AccountFooterComponent } from \"./layout/account-footer.component\";\r\n\r\n// tenants\r\nimport { TenantChangeComponent } from \"./tenant/tenant-change.component\";\r\nimport { TenantChangeDialogComponent } from \"./tenant/tenant-change-dialog.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    SharedModule,\r\n    ServiceProxyModule,\r\n    AccountRoutingModule,\r\n    ModalModule.forChild(),\r\n  ],\r\n  declarations: [\r\n    AccountComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    AccountLanguagesComponent,\r\n    AccountHeaderComponent,\r\n    AccountFooterComponent,\r\n    // tenant\r\n    TenantChangeComponent,\r\n    TenantChangeDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    // tenant\r\n    TenantChangeDialogComponent,\r\n  ],\r\n})\r\nexport class AccountModule {}\r\n","import { Component, Injector, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\n\r\n@Component({\r\n  selector: \"account-footer\",\r\n  templateUrl: \"./account-footer.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccountFooterComponent extends AppComponentBase {\r\n  currentYear: number;\r\n  versionText: string;\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n\r\n    this.currentYear = new Date().getFullYear();\r\n    this.versionText =\r\n      this.appSession.application.version +\r\n      \" [\" +\r\n      this.appSession.application.releaseDate.format(\"YYYYDDMM\") +\r\n      \"]\";\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12 text-center\">\r\n    <small>\r\n      Copyright &copy; {{ currentYear }}\r\n      <b class=\"ml-2\">{{ \"Version\" | localize }}</b>\r\n      {{ versionText }}\r\n    </small>\r\n  </div>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"account-header\",\r\n  templateUrl: \"./account-header.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccountHeaderComponent {}\r\n","<div class=\"login-logo\">\r\n  <a href=\"/\"><b>LoanManagement</b></a>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Injector,\r\n  ChangeDetectionStrategy,\r\n} from \"@angular/core\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"account-languages\",\r\n  templateUrl: \"./account-languages.component.html\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccountLanguagesComponent\r\n  extends AppComponentBase\r\n  implements OnInit {\r\n  languages: abp.localization.ILanguageInfo[];\r\n  currentLanguage: abp.localization.ILanguageInfo;\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.languages = _.filter(\r\n      this.localization.languages,\r\n      (l) => !l.isDisabled\r\n    );\r\n    this.currentLanguage = this.localization.currentLanguage;\r\n  }\r\n\r\n  changeLanguage(languageName: string): void {\r\n    abp.utils.setCookieValue(\r\n      \"Abp.Localization.CultureName\",\r\n      languageName,\r\n      new Date(new Date().getTime() + 5 * 365 * 86400000), // 5 year\r\n      abp.appPath\r\n    );\r\n\r\n    location.reload();\r\n  }\r\n}\r\n","﻿\r\n<div class=\"text-center\">\r\n  <ng-container *ngFor=\"let language of languages\">\r\n    <a\r\n      *ngIf=\"language.name != currentLanguage.name\"\r\n      href=\"javascript:void(0);\"\r\n      (click)=\"changeLanguage(language.name)\"\r\n    >\r\n      <span\r\n        title=\"{{ language.displayName }}\"\r\n        [attr.class.current-language-icon]=\"\r\n          language.name != currentLanguage.name\r\n        \"\r\n      >\r\n        <i class=\"d-inline-block mx-1 {{ language.icon }}\"></i>\r\n      </span>\r\n    </a>\r\n  </ng-container>\r\n</div>\r\n","import { Component, Injector } from \"@angular/core\";\r\nimport { AbpSessionService } from \"abp-ng2-module\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport { accountModuleAnimation } from \"@shared/animations/routerTransition\";\r\nimport { AppAuthService } from \"@shared/auth/app-auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  animations: [accountModuleAnimation()],\r\n})\r\nexport class LoginComponent extends AppComponentBase {\r\n  submitting = false;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    public authService: AppAuthService,\r\n    private _sessionService: AbpSessionService,\r\n    private _route: Router\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  get multiTenancySideIsTeanant(): boolean {\r\n    return this._sessionService.tenantId > 0;\r\n  }\r\n\r\n  get isSelfRegistrationAllowed(): boolean {\r\n    if (!this._sessionService.tenantId) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  login(): void {\r\n    this.submitting = true;\r\n    //this._route.navigate([\"app/admin\"]);\r\n    this.authService.authenticate(() => (this.submitting = false));\r\n  }\r\n}\r\n","<div [@routerTransition]>\r\n  <h4 class=\"text-center mb-3\">{{ \"LogIn\" | localize }}</h4>\r\n  <form novalidate autocomplete=\"off\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"userNameOrEmailAddress\"\r\n          [(ngModel)]=\"authService.authenticateModel.userNameOrEmailAddress\"\r\n          [placeholder]=\"'UserNameOrEmail' | localize\"\r\n          required\r\n          maxlength=\"256\"\r\n          #userNameOrEmailAddressModel=\"ngModel\"\r\n          #userNameOrEmailAddressEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-user\" style=\"color: #091a52\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"userNameOrEmailAddressModel\"\r\n        [controlEl]=\"userNameOrEmailAddressEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"authService.authenticateModel.password\"\r\n          [placeholder]=\"'Password' | localize\"\r\n          required\r\n          maxlength=\"32\"\r\n          #passwordModel=\"ngModel\"\r\n          #passwordEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-lock\" style=\"color: #091a52\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"passwordModel\"\r\n        [controlEl]=\"passwordEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"custom-control custom-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"custom-control-input\"\r\n            id=\"rememberMe\"\r\n            name=\"rememberMe\"\r\n            [(ngModel)]=\"authService.rememberMe\"\r\n          />\r\n          <label for=\"rememberMe\" class=\"custom-control-label\">\r\n            {{ \"RememberMe\" | localize }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn-primary btn-block bg-blue-dark\"\r\n          [disabled]=\"!loginForm.form.valid || submitting\"\r\n        >\r\n          {{ \"LogIn\" | localize }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <p *ngIf=\"isSelfRegistrationAllowed\" class=\"mb-1\">\r\n    <a [routerLink]=\"['../register']\" style=\"color: #0cc4d4\">\r\n      <i class=\"fa fa-plus-circle\"></i> {{ \"Register\" | localize }}\r\n    </a>\r\n  </p>\r\n</div>\r\n","import { Component, Injector } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { finalize } from \"rxjs/operators\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport {\r\n  AccountServiceProxy,\r\n  RegisterInput,\r\n  RegisterOutput,\r\n} from \"@shared/service-proxies/service-proxies\";\r\nimport { accountModuleAnimation } from \"@shared/animations/routerTransition\";\r\nimport { AppAuthService } from \"@shared/auth/app-auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./register.component.html\",\r\n  animations: [accountModuleAnimation()],\r\n})\r\nexport class RegisterComponent extends AppComponentBase {\r\n  model: RegisterInput = new RegisterInput();\r\n  saving = false;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private _accountService: AccountServiceProxy,\r\n    private _router: Router,\r\n    private authService: AppAuthService\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  save(): void {\r\n    this.saving = true;\r\n    this._accountService\r\n      .register(this.model)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.saving = false;\r\n        })\r\n      )\r\n      .subscribe((result: RegisterOutput) => {\r\n        if (!result.canLogin) {\r\n          this.notify.success(this.l(\"SuccessfullyRegistered\"));\r\n          this._router.navigate([\"/login\"]);\r\n          return;\r\n        }\r\n\r\n        // Autheticate\r\n        this.saving = true;\r\n        this.authService.authenticateModel.userNameOrEmailAddress = this.model.userName;\r\n        this.authService.authenticateModel.password = this.model.password;\r\n        this.authService.authenticate(() => {\r\n          this.saving = false;\r\n        });\r\n      });\r\n  }\r\n}\r\n","<div [@routerTransition]>\r\n  <h4 class=\"text-center mb-3\">{{ \"Register\" | localize }}</h4>\r\n  <form autocomplete=\"off\" #registerForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"name\"\r\n          placeholder=\"{{ 'Name' | localize }}\"\r\n          required\r\n          maxlength=\"64\"\r\n          [(ngModel)]=\"model.name\"\r\n          #nameModel=\"ngModel\"\r\n          #nameEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-arrow-left\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"nameModel\"\r\n        [controlEl]=\"nameEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"surname\"\r\n          placeholder=\"{{ 'Surname' | localize }}\"\r\n          required\r\n          maxlength=\"64\"\r\n          [(ngModel)]=\"model.surname\"\r\n          #surnameModel=\"ngModel\"\r\n          #surnameEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-arrow-left\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"surnameModel\"\r\n        [controlEl]=\"surnameEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          name=\"emailAddress\"\r\n          placeholder=\"{{ 'EmailAddress' | localize }}\"\r\n          required\r\n          maxlength=\"256\"\r\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,})+$\"\r\n          [(ngModel)]=\"model.emailAddress\"\r\n          #emailAddressModel=\"ngModel\"\r\n          #emailAddressEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-envelope\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"emailAddressModel\"\r\n        [controlEl]=\"emailAddressEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          name=\"userName\"\r\n          placeholder=\" {{ 'UserName' | localize }}\"\r\n          required\r\n          maxlength=\"32\"\r\n          [(ngModel)]=\"model.userName\"\r\n          #userNameModel=\"ngModel\"\r\n          #userNameEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-user\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"userNameModel\"\r\n        [controlEl]=\"userNameEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          placeholder=\"{{ 'Password' | localize }}\"\r\n          [(ngModel)]=\"model.password\"\r\n          required\r\n          maxlength=\"32\"\r\n          #passwordModel=\"ngModel\"\r\n          #passwordEl\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <div class=\"input-group-text\">\r\n            <span class=\"fas fa-lock\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <abp-validation-summary\r\n        [control]=\"passwordModel\"\r\n        [controlEl]=\"passwordEl\"\r\n      ></abp-validation-summary>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-8\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-default\"\r\n          [disabled]=\"saving\"\r\n          [routerLink]=\"['../login']\"\r\n        >\r\n          <i class=\"fa fa-arrow-circle-left\"></i> {{ \"Back\" | localize }}\r\n        </button>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary btn-block\"\r\n          [disabled]=\"!registerForm.form.valid || saving\"\r\n        >\r\n          {{ \"Register\" | localize }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, Injector } from \"@angular/core\";\r\nimport { finalize } from \"rxjs/operators\";\r\nimport { BsModalRef } from \"ngx-bootstrap/modal\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport { AccountServiceProxy } from \"@shared/service-proxies/service-proxies\";\r\nimport { AppTenantAvailabilityState } from \"@shared/AppEnums\";\r\nimport {\r\n  IsTenantAvailableInput,\r\n  IsTenantAvailableOutput,\r\n} from \"@shared/service-proxies/service-proxies\";\r\n\r\n@Component({\r\n  templateUrl: \"./tenant-change-dialog.component.html\",\r\n})\r\nexport class TenantChangeDialogComponent extends AppComponentBase {\r\n  saving = false;\r\n  tenancyName = \"\";\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private _accountService: AccountServiceProxy,\r\n    public bsModalRef: BsModalRef\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  save(): void {\r\n    if (!this.tenancyName) {\r\n      abp.multiTenancy.setTenantIdCookie(undefined);\r\n      this.bsModalRef.hide();\r\n      location.reload();\r\n      return;\r\n    }\r\n\r\n    const input = new IsTenantAvailableInput();\r\n    input.tenancyName = this.tenancyName;\r\n\r\n    this.saving = true;\r\n    this._accountService\r\n      .isTenantAvailable(input)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.saving = false;\r\n        })\r\n      )\r\n      .subscribe((result: IsTenantAvailableOutput) => {\r\n        switch (result.state) {\r\n          case AppTenantAvailabilityState.Available:\r\n            abp.multiTenancy.setTenantIdCookie(result.tenantId);\r\n            location.reload();\r\n            return;\r\n          case AppTenantAvailabilityState.InActive:\r\n            this.message.warn(this.l(\"TenantIsNotActive\", this.tenancyName));\r\n            break;\r\n          case AppTenantAvailabilityState.NotFound:\r\n            this.message.warn(\r\n              this.l(\"ThereIsNoTenantDefinedWithName{0}\", this.tenancyName)\r\n            );\r\n            break;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<form\r\n  class=\"form-horizontal\"\r\n  autocomplete=\"off\"\r\n  #changeTenantForm=\"ngForm\"\r\n  (ngSubmit)=\"save()\"\r\n>\r\n  <abp-modal-header\r\n    [title]=\"'ChangeTenant' | localize\"\r\n    (onCloseClick)=\"bsModalRef.hide()\"\r\n  ></abp-modal-header>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-md-3 col-form-label\" for=\"tenancyName\">\r\n        {{ \"TenancyName\" | localize }}\r\n      </label>\r\n      <div class=\"col-md-9\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"tenancyName\"\r\n          name=\"tenancyName\"\r\n          [(ngModel)]=\"tenancyName\"\r\n          maxlength=\"64\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <span>\r\n      <i class=\"fa fa-info-circle\"></i>\r\n      {{ \"LeaveEmptyToSwitchToHost\" | localize }}\r\n    </span>\r\n  </div>\r\n  <abp-modal-footer\r\n    [cancelDisabled]=\"saving\"\r\n    [saveDisabled]=\"!changeTenantForm.form.valid || saving\"\r\n    (onCancelClick)=\"bsModalRef.hide()\"\r\n  ></abp-modal-footer>\r\n</form>\r\n","import { Component, OnInit, Injector } from \"@angular/core\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport { TenantChangeDialogComponent } from \"./tenant-change-dialog.component\";\r\nimport { BsModalService } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  selector: \"tenant-change\",\r\n  templateUrl: \"./tenant-change.component.html\",\r\n})\r\nexport class TenantChangeComponent extends AppComponentBase implements OnInit {\r\n  tenancyName = \"\";\r\n  name = \"\";\r\n\r\n  constructor(injector: Injector, private _modalService: BsModalService) {\r\n    super(injector);\r\n  }\r\n\r\n  get isMultiTenancyEnabled(): boolean {\r\n    return abp.multiTenancy.isEnabled;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.appSession.tenant) {\r\n      this.tenancyName = this.appSession.tenant.tenancyName;\r\n      this.name = this.appSession.tenant.name;\r\n    }\r\n  }\r\n\r\n  showChangeModal(): void {\r\n    const modal = this._modalService.show(TenantChangeDialogComponent);\r\n    if (this.appSession.tenant) {\r\n      modal.content.tenancyName = this.appSession.tenant.tenancyName;\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"isMultiTenancyEnabled\" class=\"text-center tenant-change-component\">\r\n  <span>\r\n    {{ \"CurrentTenant\" | localize }}:\r\n    <span *ngIf=\"tenancyName\" title=\"{{ name }}\">\r\n      <strong>{{ tenancyName }}</strong>\r\n    </span>\r\n    <span *ngIf=\"!tenancyName\">{{ \"NotSelected\" | localize }}</span>\r\n    (<a href=\"javascript:;\" (click)=\"showChangeModal()\">\r\n      {{ \"Change\" | localize }} </a\r\n    >)\r\n  </span>\r\n</div>\r\n","import { TenantAvailabilityState } from \"@shared/service-proxies/service-proxies\";\r\n\r\nexport class AppTenantAvailabilityState {\r\n  static Available: number = TenantAvailabilityState._1;\r\n  static InActive: number = TenantAvailabilityState._2;\r\n  static NotFound: number = TenantAvailabilityState._3;\r\n}\r\n"],"sourceRoot":"webpack:///"}